function [M,dM] = quat2rotmat(q)

q=q/norm(q);
w=q(1); x=q(2); y=q(3); z=q(4);

M = [ w*w + x*x - y*y - z*z, 2*x*y - 2*w*z, 2*x*z + 2*w*y; ...
    2*x*y + 2*w*z,  w*w + y*y - x*x - z*z, 2*y*z - 2*w*x; ...
    2*x*z - 2*w*y, 2*y*z + 2*w*x, w*w + z*z - x*x - y*y ];

if (nargout>1)
  dqnormalized = 1/(q1^2 + q2^2 + q3^2 + q4^2)^(3/2)*[ ... 
    q2^2 + q3^2 + q4^2,             -q1*q2,             -q1*q3,             -q1*q4; ...
                -q1*q2, q1^2 + q3^2 + q4^2,             -q2*q3,             -q2*q4; ...
                -q1*q3,             -q2*q3, q1^2 + q2^2 + q4^2,             -q3*q4; ...
                -q1*q4,             -q2*q4,             -q3*q4, q1^2 + q2^2 + q3^2];
    
  dM = [ ... 
    2*q1,  2*q2, -2*q3, -2*q4; ...
    2*q4,  2*q3,  2*q2,  2*q1; ...
   -2*q3,  2*q4, -2*q1,  2*q2; ...
   -2*q4,  2*q3,  2*q2, -2*q1; ...
    2*q1, -2*q2,  2*q3, -2*q4; ...
    2*q2,  2*q1,  2*q4,  2*q3; ...
    2*q3,  2*q4,  2*q1,  2*q2; ...
   -2*q2, -2*q1,  2*q4,  2*q3; ...
    2*q1, -2*q2, -2*q3,  2*q4] * dqnormalized;
%  if (nargout>2)
%    ddM = [];
%  end
end