# Import some helper configurations.
import %workspace%/tools/cc_toolchain/bazel.rc
import %workspace%/tools/dynamic_analysis/bazel.rc
import %workspace%/tools/lint/bazel.rc

# Continue to use Python 2 by default in Bazel 0.25 and above.
build --incompatible_py3_is_default=false

# Continue to obtain the python runtime from the --python_version flag rather
# than a toolchain in Bazel 0.27 and above until #11660 is resolved.
build --incompatible_use_python_toolchains=false

# Default to an optimized build.
build -c opt

# Default build options.
build --force_pic
build --strip=never
build --strict_system_includes

# Default test options.
test --test_output=errors
test --test_summary=terse

# By default, disable execution of tests that require proprietary software.
# Individual targets that use proprietary software are responsible for ensuring
# they can also build without it, typically by using a select statement.
# config_setting rules for proprietary software are provided in //tools.
test --test_tag_filters=-gurobi,-mosek,-snopt

# Inject DISPLAY into test runner environment for tests that use X.
test --test_env=DISPLAY

# Location of the Gurobi license key file, typically named "gurobi.lic".
# Setting this --test_env for all configurations is deliberate to improve
# remote caching performance.
test --test_env=GRB_LICENSE_FILE

# Location of the MOSEK license file, typically named "mosek.lic". Setting
# this --test_env for all configurations is deliberate to improve remote
# caching performance.
test --test_env=MOSEKLM_LICENSE_FILE

# Prevent LCM messages from leaking outside of tests.
# See documentation: https://lcm-proj.github.io/group__LcmC__lcm__t.html#gaf29963ef43edadf45296d5ad82c18d4b  # noqa
# WARNING: If your LCM test depends on communication between separate LCM
# instances (and you cannot easily mock the LCM instances), make sure that each
# instance has a consistent, but non-default, LCM URL.
test --test_env=LCM_DEFAULT_URL=memq://

# Prevent matplotlib from showing windows (#11029).
test --test_env=MPLBACKEND=Template

### A configuration that enables Gurobi. ###
# -- To use this config, the GRB_LICENSE_FILE environment variable must be set
# -- to the location of the Gurobi license key file. On Ubuntu, the GUROBI_PATH
# -- environment variable must be set to the linux64 directory of the extracted
# -- archive downloaded from gurobi.com.
#
# -- To run tests where Gurobi is used, ensure that you include
# -- "gurobi_test_tags()" from //tools/skylark:test_tags.bzl.
# -- If Gurobi is optional, set gurobi_required=False.
build:gurobi --define=WITH_GUROBI=ON

### A configuration that enables MOSEK. ###
# -- To use this config, the MOSEKLM_LICENSE_FILE environment variable must be
# -- set to the location of the MOSEK license file.
#
# -- To run tests where MOSEK is used, ensure that you include
# -- "mosek_test_tags()" from //tools/skylark:test_tags.bzl.
# -- If MOSEK is optional, set mosek_required=False.
build:mosek --define=WITH_MOSEK=ON

### A configuration that enables SNOPT. ###
# -- To use this config, you must have access to the private repository
# -- RobotLocomotion/snopt on GitHub, and your local git must be configured
# -- with SSH keys as documented at https://drake.mit.edu/from_source.html.
#
# -- To run tests that require SNOPT, also specify a set of test_tag_filters
# -- that does not exclude the "snopt" tag.
build:snopt --define=WITH_SNOPT=ON
build:snopt_fortran --define=WITH_SNOPT_FORTRAN=ON
build:snopt_f2c --define=WITH_SNOPT_F2C=ON

### A configuration that enables all optional dependencies. ###
test:everything --test_tag_filters=-no_everything

# -- Options for Gurobi.
build:everything --define=WITH_GUROBI=ON
# -- Options for MOSEK.
build:everything --define=WITH_MOSEK=ON
# -- Options for SNOPT.
build:everything --define=WITH_SNOPT=ON
