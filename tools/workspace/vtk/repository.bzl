# -*- mode: python -*-
# vi: set ft=python :

"""
Makes selected VTK headers and precompiled shared libraries available to be
used as a C++ dependency. On Ubuntu, a VTK archive, built by the project
maintainers from the Dockerfile and shell scripts in this directory, is
downloaded and unpacked. On macOS, VTK must be installed from the
robotlocomotion/director tap
(https://github.com/RobotLocomotion/homebrew-director) using Homebrew.

Archive naming convention:
    vtk-<version>[-<rebuild>]-python-<python version>-qt-<qt version>
        -<platform>-<arch>

Example:
    WORKSPACE:
        load("@drake//tools/workspace:mirrors.bzl", "DEFAULT_MIRRORS")
        load("@drake//tools/workspace/vtk:repository.bzl", "vtk_repository")
        vtk_repository(name = "foo", mirrors = DEFAULT_MIRRORS)

    BUILD:
        cc_library(
            name = "foobar",
            deps = ["@foo//:vtkCommonCore"],
            srcs = ["bar.cc"],
        )

Argument:
    name: A unique name for this rule.
"""

load("@drake//tools/workspace:os.bzl", "determine_os")

VTK_MAJOR_MINOR_VERSION = "9.1"

VTK_MAJOR_MINOR_PATCH_VERSION = "{}.0".format(VTK_MAJOR_MINOR_VERSION)

def _vtk_cc_library(
        os_result,
        name,
        hdrs = None,
        visibility = None,
        deps = None,
        header_only = False,
        linkopts = []):
    hdr_paths = []

    if hdrs:
        includes = ["include/vtk-{}".format(VTK_MAJOR_MINOR_VERSION)]

        if not visibility:
            visibility = ["//visibility:public"]

        for hdr in hdrs:
            hdr_paths.append("{}/{}".format(includes[0], hdr))
    else:
        includes = []

        if not visibility:
            visibility = ["//visibility:private"]

    if not deps:
        deps = []

    srcs = []

    if os_result.is_macos:
        if not header_only:
            lib_dir = "/usr/local/opt/vtk@{}/lib".format(
                VTK_MAJOR_MINOR_PATCH_VERSION,
            )
            linkopts = linkopts + [
                "-L{}".format(lib_dir),
                "-l{}-{}".format(name, VTK_MAJOR_MINOR_VERSION),
                "-Wl,-rpath,{}".format(lib_dir),
            ]
    elif os_result.is_ubuntu:
        if not header_only:
            srcs = ["lib/lib{}-{}.so.1".format(name, VTK_MAJOR_MINOR_VERSION)]
    elif os_result.is_manylinux:
        if not header_only:
            # TODO(jwnimmer-tri) Ideally, we wouldn't be hard-coding paths when
            # using manylinux.
            lib_dir = "/opt/vtk/lib"
            linkopts = linkopts + [
                "-L{}".format(lib_dir),
                "-l{}-{}".format(name, VTK_MAJOR_MINOR_VERSION),
            ]
    else:
        fail("Unknown os_result {}".format(os_result))

    content = """
cc_library(
    name = "{}",
    srcs = {},
    hdrs = {},
    includes = {},
    linkopts = {},
    visibility = {},
    deps = {},
)
    """.format(name, srcs, hdr_paths, includes, linkopts, visibility, deps)

    return content

def _impl(repository_ctx):
    os_result = determine_os(repository_ctx)
    if os_result.error != None:
        fail(os_result.error)

    if os_result.is_macos:
        repository_ctx.symlink("/usr/local/opt/vtk@{}/include".format(
            VTK_MAJOR_MINOR_PATCH_VERSION,
        ), "include")
    elif os_result.is_ubuntu:
        if os_result.ubuntu_release == "18.04":
            archive = "vtk-9.1.0-1-python-3.6.9-qt-5.9.5-bionic-x86_64.tar.gz"
            sha256 = "ce30a68de521fef0eef3c1e447489f04beaaf99d2c7015e9367899e4defa2297"  # noqa
        elif os_result.ubuntu_release == "20.04":
            archive = "vtk-9.1.0-1-python-3.8.10-qt-5.12.8-focal-x86_64.tar.gz"
            sha256 = "77b56123d6b138b4080c3d9ae59a201797b4119f43d566eae9b6fd7401374165"  # noqa
        else:
            fail("Operating system is NOT supported {}".format(os_result))

        urls = [
            x.format(archive = archive)
            for x in repository_ctx.attr.mirrors.get("vtk")
        ]
        root_path = repository_ctx.path("")

        repository_ctx.download_and_extract(
            urls,
            output = root_path,
            sha256 = sha256,
            type = "tar.gz",
        )
    elif os_result.is_manylinux:
        repository_ctx.symlink("/opt/vtk/include", "include")
    else:
        fail("Operating system is NOT supported {}".format(os_result))

    file_content = """# -*- python -*-

# DO NOT EDIT: generated by vtk_repository()

licenses([
    "notice",  # Apache-2.0 AND BSD-3-Clause AND MIT
    "reciprocal",  # GL2PS
    "unencumbered",  # Public-Domain
])
"""
    # The following are either internal VTK libraries, or thirdparty libraries
    # bundled into the build.  We only create library targets for
    # enough of VTK to support those used directly or indirectly by Drake.
    #
    # For the most part, the linux and macOS builds of VTK have the same
    # configuration options, with the exception of `pugixml`.  The manylinux
    # switches are for the pip wheel builds.  Build arg locations:
    #
    #     Linux: Dockerfile in this directory
    #     macOS: https://github.com/RobotLocomotion/homebrew-director
    #     manylinux: /tools/wheel/dev/image/vtk-args
    file_content += _vtk_cc_library(os_result, "vtkfmt")

    if os_result.is_manylinux:
        file_content += _vtk_cc_library(os_result, "vtkglew")

    file_content += _vtk_cc_library(os_result, "vtkkissfft")

    file_content += _vtk_cc_library(
        os_result,
        "vtkkwiml",
        hdrs = [
            "vtk_kwiml.h",
            "vtkkwiml/abi.h",
            "vtkkwiml/int.h",
        ],
        visibility = ["//visibility:private"],
        header_only = True,
    )

    if os_result.is_manylinux:
        file_content += _vtk_cc_library(
            os_result,
            "vtkloguru",
            linkopts = ["-ldl", "-pthread"],
        )
    else:
        file_content += _vtk_cc_library(os_result, "vtkloguru")

    file_content += _vtk_cc_library(
        os_result,
        "vtkmetaio",
        deps = ["@zlib"],
    )

    if not os_result.is_macos:
        file_content += _vtk_cc_library(os_result, "vtkpugixml")

    if os_result.is_manylinux:
        file_content += _vtk_cc_library(
            os_result,
            "vtksys",
            linkopts = ["-ldl"],
        )
    else:
        file_content += _vtk_cc_library(os_result, "vtksys")

    ###########################################################################
    # To see what the VTK module dependencies are, you can inspect VTK's source
    # tree. For example, for vtkIOXML and vtkIOXMLParser:
    #   VTK/IO/XML/vtk.module
    #   VTK/IO/XMLParser/vtk.module
    # Make sure to include the sections from both DEPENDS and PRIVATE_DEPENDS.
    file_content += _vtk_cc_library(
        os_result,
        "vtkCommonColor",
        hdrs = [
            "vtkColorSeries.h",
            "vtkCommonColorModule.h",
            "vtkNamedColors.h",
        ],
        deps = [
            ":vtkCommonCore",
            ":vtkCommonDataModel",
        ],
    )

    file_content += _vtk_cc_library(
        os_result,
        "vtkCommonComputationalGeometry",
        hdrs = [
            "vtkBilinearQuadIntersection.h",
            "vtkCardinalSpline.h",
            "vtkCommonComputationalGeometryModule.h",
            "vtkKochanekSpline.h",
            "vtkParametricBohemianDome.h",
            "vtkParametricBour.h",
            "vtkParametricBoy.h",
            "vtkParametricCatalanMinimal.h",
            "vtkParametricConicSpiral.h",
            "vtkParametricCrossCap.h",
            "vtkParametricDini.h",
            "vtkParametricEllipsoid.h",
            "vtkParametricEnneper.h",
            "vtkParametricFigure8Klein.h",
            "vtkParametricFunction.h",
            "vtkParametricHenneberg.h",
            "vtkParametricKlein.h",
            "vtkParametricKuen.h",
            "vtkParametricMobius.h",
            "vtkParametricPluckerConoid.h",
            "vtkParametricPseudosphere.h",
            "vtkParametricRandomHills.h",
            "vtkParametricRoman.h",
            "vtkParametricSpline.h",
            "vtkParametricSuperEllipsoid.h",
            "vtkParametricSuperToroid.h",
            "vtkParametricTorus.h",
        ],
        deps = [
            ":vtkCommonCore",
            ":vtkCommonDataModel",
        ],
    )

    file_content += _vtk_cc_library(
        os_result,
        "vtkCommonCore",
        hdrs = [
            "vtkABI.h",
            "vtkAOSDataArrayTemplate.h",
            "vtkAOSDataArrayTemplate.txx",
            "vtkAbstractArray.h",
            "vtkAnimationCue.h",
            "vtkArchiver.h",
            "vtkArray.h",
            "vtkArrayCoordinates.h",
            "vtkArrayDispatch.h",
            "vtkArrayDispatch.txx",
            "vtkArrayDispatchArrayList.h",
            "vtkArrayExtents.h",
            "vtkArrayExtentsList.h",
            "vtkArrayInterpolate.h",
            "vtkArrayInterpolate.txx",
            "vtkArrayIterator.h",
            "vtkArrayIteratorIncludes.h",
            "vtkArrayIteratorTemplate.h",
            "vtkArrayIteratorTemplate.txx",
            "vtkArrayIteratorTemplateImplicit.txx",
            "vtkArrayPrint.h",
            "vtkArrayPrint.txx",
            "vtkArrayRange.h",
            "vtkArraySort.h",
            "vtkArrayWeights.h",
            "vtkAssume.h",
            "vtkAutoInit.h",
            "vtkBitArray.h",
            "vtkBitArrayIterator.h",
            "vtkBoxMuellerRandomSequence.h",
            "vtkBreakPoint.h",
            "vtkBuffer.h",
            "vtkBuild.h",
            "vtkByteSwap.h",
            "vtkCallbackCommand.h",
            "vtkCharArray.h",
            "vtkCollection.h",
            "vtkCollectionIterator.h",
            "vtkCollectionRange.h",
            "vtkCommand.h",
            "vtkCommonCoreModule.h",
            "vtkCommonInformationKeyManager.h",
            "vtkCompiler.h",
            "vtkConditionVariable.h",
            "vtkCriticalSection.h",
            "vtkDataArray.h",
            "vtkDataArrayAccessor.h",
            "vtkDataArrayCollection.h",
            "vtkDataArrayCollectionIterator.h",
            "vtkDataArrayIteratorMacro.h",
            "vtkDataArrayMeta.h",
            "vtkDataArrayRange.h",
            "vtkDataArraySelection.h",
            "vtkDataArrayTupleRange_AOS.h",
            "vtkDataArrayTupleRange_Generic.h",
            "vtkDataArrayValueRange_AOS.h",
            "vtkDataArrayValueRange_Generic.h",
            "vtkDebug.h",
            "vtkDebugLeaks.h",
            "vtkDebugLeaksManager.h",
            "vtkDebugRangeIterators.h",
            "vtkDenseArray.h",
            "vtkDenseArray.txx",
            "vtkDeprecation.h",
            "vtkDoubleArray.h",
            "vtkDynamicLoader.h",
            "vtkEndian.h",
            "vtkEventData.h",
            "vtkEventForwarderCommand.h",
            "vtkFeatures.h",
            "vtkFileOutputWindow.h",
            "vtkFloatArray.h",
            "vtkFloatingPointExceptions.h",
            "vtkGarbageCollector.h",
            "vtkGarbageCollectorManager.h",
            "vtkGaussianRandomSequence.h",
            "vtkGenericDataArray.h",
            "vtkGenericDataArray.txx",
            "vtkGenericDataArrayLookupHelper.h",
            "vtkIOStream.h",
            "vtkIOStreamFwd.h",
            "vtkIdList.h",
            "vtkIdListCollection.h",
            "vtkIdTypeArray.h",
            "vtkIndent.h",
            "vtkInformation.h",
            "vtkInformationDataObjectKey.h",
            "vtkInformationDoubleKey.h",
            "vtkInformationDoubleVectorKey.h",
            "vtkInformationIdTypeKey.h",
            "vtkInformationInformationKey.h",
            "vtkInformationInformationVectorKey.h",
            "vtkInformationIntegerKey.h",
            "vtkInformationIntegerPointerKey.h",
            "vtkInformationIntegerVectorKey.h",
            "vtkInformationInternals.h",
            "vtkInformationIterator.h",
            "vtkInformationKey.h",
            "vtkInformationKeyLookup.h",
            "vtkInformationKeyVectorKey.h",
            "vtkInformationObjectBaseKey.h",
            "vtkInformationObjectBaseVectorKey.h",
            "vtkInformationRequestKey.h",
            "vtkInformationStringKey.h",
            "vtkInformationStringVectorKey.h",
            "vtkInformationUnsignedLongKey.h",
            "vtkInformationVariantKey.h",
            "vtkInformationVariantVectorKey.h",
            "vtkInformationVector.h",
            "vtkIntArray.h",
            "vtkLargeInteger.h",
            "vtkLegacy.h",
            "vtkLogger.h",
            "vtkLongArray.h",
            "vtkLongLongArray.h",
            "vtkLookupTable.h",
            "vtkMappedDataArray.h",
            "vtkMappedDataArray.txx",
            "vtkMath.h",
            "vtkMathConfigure.h",
            "vtkMathPrivate.hxx",
            "vtkMathUtilities.h",
            "vtkMatrixUtilities.h",
            "vtkMersenneTwister.h",
            "vtkMeta.h",
            "vtkMinimalStandardRandomSequence.h",
            "vtkMultiThreader.h",
            "vtkMutexLock.h",
            "vtkNew.h",
            "vtkOStrStreamWrapper.h",
            "vtkOStreamWrapper.h",
            "vtkObject.h",
            "vtkObjectBase.h",
            "vtkObjectFactory.h",
            "vtkObjectFactoryCollection.h",
            "vtkOldStyleCallbackCommand.h",
            "vtkOptions.h",
            "vtkOutputWindow.h",
            "vtkOverrideInformation.h",
            "vtkOverrideInformationCollection.h",
            "vtkPlatform.h",
            "vtkPoints.h",
            "vtkPoints2D.h",
            "vtkPriorityQueue.h",
            "vtkRandomPool.h",
            "vtkRandomSequence.h",
            "vtkRange.h",
            "vtkRangeIterableTraits.h",
            "vtkReferenceCount.h",
            "vtkSMP.h",
            "vtkSMPThreadLocal.h",
            "vtkSMPThreadLocalObject.h",
            "vtkSOADataArrayTemplate.h",
            "vtkSOADataArrayTemplate.txx",
            "vtkScalarsToColors.h",
            "vtkSetGet.h",
            "vtkShortArray.h",
            "vtkSignedCharArray.h",
            "vtkSimpleCriticalSection.h",
            "vtkSmartPointer.h",
            "vtkSmartPointerBase.h",
            "vtkSortDataArray.h",
            "vtkSparseArray.h",
            "vtkSparseArray.txx",
            "vtkStdString.h",
            "vtkStringArray.h",
            "vtkStringOutputWindow.h",
            "vtkSystemIncludes.h",
            "vtkTemplateAliasMacro.h",
            "vtkTestDataArray.h",
            "vtkThreads.h",
            "vtkTimePointUtility.h",
            "vtkTimeStamp.h",
            "vtkType.h",
            "vtkTypeFloat32Array.h",
            "vtkTypeFloat64Array.h",
            "vtkTypeInt16Array.h",
            "vtkTypeInt32Array.h",
            "vtkTypeInt64Array.h",
            "vtkTypeInt8Array.h",
            "vtkTypeList.h",
            "vtkTypeList.txx",
            "vtkTypeListMacros.h",
            "vtkTypeTraits.h",
            "vtkTypeUInt16Array.h",
            "vtkTypeUInt32Array.h",
            "vtkTypeUInt64Array.h",
            "vtkTypeUInt8Array.h",
            "vtkTypedArray.h",
            "vtkTypedArray.txx",
            "vtkTypedDataArray.h",
            "vtkTypedDataArray.txx",
            "vtkTypedDataArrayIterator.h",
            "vtkUnicodeString.h",
            "vtkUnicodeStringArray.h",
            "vtkUnsignedCharArray.h",
            "vtkUnsignedIntArray.h",
            "vtkUnsignedLongArray.h",
            "vtkUnsignedLongLongArray.h",
            "vtkUnsignedShortArray.h",
            "vtkVTK_USE_SCALED_SOA_ARRAYS.h",
            "vtkVariant.h",
            "vtkVariantArray.h",
            "vtkVariantCast.h",
            "vtkVariantCreate.h",
            "vtkVariantExtract.h",
            "vtkVariantInlineOperators.h",
            "vtkVersion.h",
            "vtkVersionFull.h",
            "vtkVersionMacros.h",
            "vtkVoidArray.h",
            "vtkWeakPointer.h",
            "vtkWeakPointerBase.h",
            "vtkWeakReference.h",
            "vtkWin32Header.h",
            "vtkWindow.h",
            "vtkWindows.h",
            "vtkWrappingHints.h",
            "vtkXMLFileOutputWindow.h",
        ],
        deps = [
            ":vtkkwiml",
            ":vtkloguru",
            ":vtksys",
        ],
    )

    vtk_common_data_model_deps = [
        ":vtkCommonCore",
        ":vtkCommonMath",
        ":vtkCommonMisc",
        ":vtkCommonSystem",
        ":vtkCommonTransforms",
        ":vtksys",
    ]
    if not os_result.is_macos:
        vtk_common_data_model_deps.append(":vtkpugixml")
    file_content += _vtk_cc_library(
        os_result,
        "vtkCommonDataModel",
        hdrs = [
            "vtkAMRBox.h",
            "vtkAMRDataInternals.h",
            "vtkAMRInformation.h",
            "vtkAMRUtilities.h",
            "vtkAbstractCellLinks.h",
            "vtkAbstractCellLocator.h",
            "vtkAbstractElectronicData.h",
            "vtkAbstractPointLocator.h",
            "vtkAdjacentVertexIterator.h",
            "vtkAngularPeriodicDataArray.h",
            "vtkAngularPeriodicDataArray.txx",
            "vtkAnimationScene.h",
            "vtkAnnotation.h",
            "vtkAnnotationLayers.h",
            "vtkArrayData.h",
            "vtkArrayListTemplate.h",
            "vtkArrayListTemplate.txx",
            "vtkAtom.h",
            "vtkAttributesErrorMetric.h",
            "vtkBSPCuts.h",
            "vtkBSPIntersections.h",
            "vtkBezierCurve.h",
            "vtkBezierHexahedron.h",
            "vtkBezierInterpolation.h",
            "vtkBezierQuadrilateral.h",
            "vtkBezierTetra.h",
            "vtkBezierTriangle.h",
            "vtkBezierWedge.h",
            "vtkBiQuadraticQuad.h",
            "vtkBiQuadraticQuadraticHexahedron.h",
            "vtkBiQuadraticQuadraticWedge.h",
            "vtkBiQuadraticTriangle.h",
            "vtkBond.h",
            "vtkBoundingBox.h",
            "vtkBox.h",
            "vtkCell.h",
            "vtkCell3D.h",
            "vtkCellArray.h",
            "vtkCellArrayIterator.h",
            "vtkCellData.h",
            "vtkCellIterator.h",
            "vtkCellLinks.h",
            "vtkCellLocator.h",
            "vtkCellLocatorStrategy.h",
            "vtkCellType.h",
            "vtkCellTypes.h",
            "vtkClosestNPointsStrategy.h",
            "vtkClosestPointStrategy.h",
            "vtkColor.h",
            "vtkCommonDataModelModule.h",
            "vtkCompositeDataIterator.h",
            "vtkCompositeDataSet.h",
            "vtkCompositeDataSet.txx",
            "vtkCompositeDataSetNodeReference.h",
            "vtkCompositeDataSetRange.h",
            "vtkCone.h",
            "vtkConvexPointSet.h",
            "vtkCubicLine.h",
            "vtkCylinder.h",
            "vtkDataArrayDispatcher.h",
            "vtkDataAssembly.h",
            "vtkDataAssemblyUtilities.h",
            "vtkDataAssemblyVisitor.h",
            "vtkDataObject.h",
            "vtkDataObjectCollection.h",
            "vtkDataObjectTree.h",
            "vtkDataObjectTreeInternals.h",
            "vtkDataObjectTreeIterator.h",
            "vtkDataObjectTreeRange.h",
            "vtkDataObjectTypes.h",
            "vtkDataSet.h",
            "vtkDataSetAttributes.h",
            "vtkDataSetAttributesFieldList.h",
            "vtkDataSetCellIterator.h",
            "vtkDataSetCollection.h",
            "vtkDirectedAcyclicGraph.h",
            "vtkDirectedGraph.h",
            "vtkDispatcher.h",
            "vtkDispatcher_Private.h",
            "vtkDistributedGraphHelper.h",
            "vtkDoubleDispatcher.h",
            "vtkEdgeListIterator.h",
            "vtkEdgeTable.h",
            "vtkEmptyCell.h",
            "vtkExplicitStructuredGrid.h",
            "vtkExtractStructuredGridHelper.h",
            "vtkFieldData.h",
            "vtkFindCellStrategy.h",
            "vtkGenericAdaptorCell.h",
            "vtkGenericAttribute.h",
            "vtkGenericAttributeCollection.h",
            "vtkGenericCell.h",
            "vtkGenericCellIterator.h",
            "vtkGenericCellTessellator.h",
            "vtkGenericDataSet.h",
            "vtkGenericEdgeTable.h",
            "vtkGenericInterpolatedVelocityField.h",
            "vtkGenericPointIterator.h",
            "vtkGenericSubdivisionErrorMetric.h",
            "vtkGeometricErrorMetric.h",
            "vtkGraph.h",
            "vtkGraphEdge.h",
            "vtkGraphInternals.h",
            "vtkHexagonalPrism.h",
            "vtkHexahedron.h",
            "vtkHierarchicalBoxDataIterator.h",
            "vtkHierarchicalBoxDataSet.h",
            "vtkHigherOrderCurve.h",
            "vtkHigherOrderHexahedron.h",
            "vtkHigherOrderInterpolation.h",
            "vtkHigherOrderQuadrilateral.h",
            "vtkHigherOrderTetra.h",
            "vtkHigherOrderTriangle.h",
            "vtkHigherOrderWedge.h",
            "vtkHyperTree.h",
            "vtkHyperTreeCursor.h",
            "vtkHyperTreeGrid.h",
            "vtkHyperTreeGridEntry.h",
            "vtkHyperTreeGridGeometryEntry.h",
            "vtkHyperTreeGridGeometryLevelEntry.h",
            "vtkHyperTreeGridLevelEntry.h",
            "vtkHyperTreeGridNonOrientedCursor.h",
            "vtkHyperTreeGridNonOrientedGeometryCursor.h",
            "vtkHyperTreeGridNonOrientedMooreSuperCursor.h",
            "vtkHyperTreeGridNonOrientedMooreSuperCursorLight.h",
            "vtkHyperTreeGridNonOrientedSuperCursor.h",
            "vtkHyperTreeGridNonOrientedSuperCursorLight.h",
            "vtkHyperTreeGridNonOrientedVonNeumannSuperCursor.h",
            "vtkHyperTreeGridNonOrientedVonNeumannSuperCursorLight.h",
            "vtkHyperTreeGridOrientedCursor.h",
            "vtkHyperTreeGridOrientedGeometryCursor.h",
            "vtkHyperTreeGridScales.h",
            "vtkHyperTreeGridTools.h",
            "vtkImageData.h",
            "vtkImageIterator.h",
            "vtkImageTransform.h",
            "vtkImplicitBoolean.h",
            "vtkImplicitDataSet.h",
            "vtkImplicitFunction.h",
            "vtkImplicitFunctionCollection.h",
            "vtkImplicitHalo.h",
            "vtkImplicitSelectionLoop.h",
            "vtkImplicitSum.h",
            "vtkImplicitVolume.h",
            "vtkImplicitWindowFunction.h",
            "vtkInEdgeIterator.h",
            "vtkIncrementalOctreeNode.h",
            "vtkIncrementalOctreePointLocator.h",
            "vtkIncrementalPointLocator.h",
            "vtkInformationQuadratureSchemeDefinitionVectorKey.h",
            "vtkIntersectionCounter.h",
            "vtkIterativeClosestPointTransform.h",
            "vtkKdNode.h",
            "vtkKdTree.h",
            "vtkKdTreePointLocator.h",
            "vtkLagrangeCurve.h",
            "vtkLagrangeHexahedron.h",
            "vtkLagrangeInterpolation.h",
            "vtkLagrangeQuadrilateral.h",
            "vtkLagrangeTetra.h",
            "vtkLagrangeTriangle.h",
            "vtkLagrangeWedge.h",
            "vtkLine.h",
            "vtkLocator.h",
            "vtkMappedUnstructuredGrid.h",
            "vtkMappedUnstructuredGrid.txx",
            "vtkMappedUnstructuredGridCellIterator.h",
            "vtkMappedUnstructuredGridCellIterator.txx",
            "vtkMarchingCubesTriangleCases.h",
            "vtkMarchingSquaresLineCases.h",
            "vtkMeanValueCoordinatesInterpolator.h",
            "vtkMergePoints.h",
            "vtkMolecule.h",
            "vtkMultiBlockDataSet.h",
            "vtkMultiPieceDataSet.h",
            "vtkMutableDirectedGraph.h",
            "vtkMutableUndirectedGraph.h",
            "vtkNonLinearCell.h",
            "vtkNonMergingPointLocator.h",
            "vtkNonOverlappingAMR.h",
            "vtkOctreePointLocator.h",
            "vtkOctreePointLocatorNode.h",
            "vtkOrderedTriangulator.h",
            "vtkOutEdgeIterator.h",
            "vtkOverlappingAMR.h",
            "vtkPartitionedDataSet.h",
            "vtkPartitionedDataSetCollection.h",
            "vtkPath.h",
            "vtkPentagonalPrism.h",
            "vtkPeriodicDataArray.h",
            "vtkPeriodicDataArray.txx",
            "vtkPerlinNoise.h",
            "vtkPiecewiseFunction.h",
            "vtkPixel.h",
            "vtkPixelExtent.h",
            "vtkPixelTransfer.h",
            "vtkPlane.h",
            "vtkPlaneCollection.h",
            "vtkPlanes.h",
            "vtkPlanesIntersection.h",
            "vtkPointData.h",
            "vtkPointLocator.h",
            "vtkPointSet.h",
            "vtkPointSetCellIterator.h",
            "vtkPointsProjectedHull.h",
            "vtkPolyData.h",
            "vtkPolyDataCollection.h",
            "vtkPolyDataInternals.h",
            "vtkPolyLine.h",
            "vtkPolyPlane.h",
            "vtkPolyVertex.h",
            "vtkPolygon.h",
            "vtkPolyhedron.h",
            "vtkPyramid.h",
            "vtkQuad.h",
            "vtkQuadraticEdge.h",
            "vtkQuadraticHexahedron.h",
            "vtkQuadraticLinearQuad.h",
            "vtkQuadraticLinearWedge.h",
            "vtkQuadraticPolygon.h",
            "vtkQuadraticPyramid.h",
            "vtkQuadraticQuad.h",
            "vtkQuadraticTetra.h",
            "vtkQuadraticTriangle.h",
            "vtkQuadraticWedge.h",
            "vtkQuadratureSchemeDefinition.h",
            "vtkQuadric.h",
            "vtkRect.h",
            "vtkRectilinearGrid.h",
            "vtkReebGraph.h",
            "vtkReebGraphSimplificationMetric.h",
            "vtkSelection.h",
            "vtkSelectionNode.h",
            "vtkSimpleCellTessellator.h",
            "vtkSmoothErrorMetric.h",
            "vtkSortFieldData.h",
            "vtkSphere.h",
            "vtkSpheres.h",
            "vtkSpline.h",
            "vtkStaticCellLinks.h",
            "vtkStaticCellLinksTemplate.h",
            "vtkStaticCellLinksTemplate.txx",
            "vtkStaticCellLocator.h",
            "vtkStaticEdgeLocatorTemplate.h",
            "vtkStaticEdgeLocatorTemplate.txx",
            "vtkStaticPointLocator.h",
            "vtkStaticPointLocator2D.h",
            "vtkStructuredData.h",
            "vtkStructuredExtent.h",
            "vtkStructuredGrid.h",
            "vtkStructuredPoints.h",
            "vtkStructuredPointsCollection.h",
            "vtkSuperquadric.h",
            "vtkTable.h",
            "vtkTetra.h",
            "vtkTree.h",
            "vtkTreeBFSIterator.h",
            "vtkTreeDFSIterator.h",
            "vtkTreeIterator.h",
            "vtkTriQuadraticHexahedron.h",
            "vtkTriQuadraticPyramid.h",
            "vtkTriangle.h",
            "vtkTriangleStrip.h",
            "vtkUndirectedGraph.h",
            "vtkUniformGrid.h",
            "vtkUniformGridAMR.h",
            "vtkUniformGridAMRDataIterator.h",
            "vtkUniformHyperTreeGrid.h",
            "vtkUnstructuredGrid.h",
            "vtkUnstructuredGridBase.h",
            "vtkUnstructuredGridCellIterator.h",
            "vtkVector.h",
            "vtkVectorOperators.h",
            "vtkVertex.h",
            "vtkVertexListIterator.h",
            "vtkVoxel.h",
            "vtkWedge.h",
            "vtkXMLDataElement.h",
        ],
        deps = vtk_common_data_model_deps,
    )

    file_content += _vtk_cc_library(
        os_result,
        "vtkCommonExecutionModel",
        hdrs = [
            "vtkAlgorithm.h",
            "vtkAlgorithmOutput.h",
            "vtkAnnotationLayersAlgorithm.h",
            "vtkArrayDataAlgorithm.h",
            "vtkCachedStreamingDemandDrivenPipeline.h",
            "vtkCastToConcrete.h",
            "vtkCommonExecutionModelModule.h",
            "vtkCompositeDataPipeline.h",
            "vtkCompositeDataSetAlgorithm.h",
            "vtkDataObjectAlgorithm.h",
            "vtkDataSetAlgorithm.h",
            "vtkDemandDrivenPipeline.h",
            "vtkDirectedGraphAlgorithm.h",
            "vtkEnsembleSource.h",
            "vtkExecutive.h",
            "vtkExplicitStructuredGridAlgorithm.h",
            "vtkExtentRCBPartitioner.h",
            "vtkExtentSplitter.h",
            "vtkExtentTranslator.h",
            "vtkFilteringInformationKeyManager.h",
            "vtkGraphAlgorithm.h",
            "vtkHierarchicalBoxDataSetAlgorithm.h",
            "vtkHyperTreeGridAlgorithm.h",
            "vtkImageAlgorithm.h",
            "vtkImageInPlaceFilter.h",
            "vtkImageProgressIterator.h",
            "vtkImageToStructuredGrid.h",
            "vtkImageToStructuredPoints.h",
            "vtkInformationDataObjectMetaDataKey.h",
            "vtkInformationExecutivePortKey.h",
            "vtkInformationExecutivePortVectorKey.h",
            "vtkInformationIntegerRequestKey.h",
            "vtkMoleculeAlgorithm.h",
            "vtkMultiBlockDataSetAlgorithm.h",
            "vtkMultiTimeStepAlgorithm.h",
            "vtkNonOverlappingAMRAlgorithm.h",
            "vtkOverlappingAMRAlgorithm.h",
            "vtkParallelReader.h",
            "vtkPartitionedDataSetAlgorithm.h",
            "vtkPartitionedDataSetCollectionAlgorithm.h",
            "vtkPassInputTypeAlgorithm.h",
            "vtkPiecewiseFunctionAlgorithm.h",
            "vtkPiecewiseFunctionShiftScale.h",
            "vtkPointSetAlgorithm.h",
            "vtkPolyDataAlgorithm.h",
            "vtkProgressObserver.h",
            "vtkReaderAlgorithm.h",
            "vtkReaderExecutive.h",
            "vtkRectilinearGridAlgorithm.h",
            "vtkSMPProgressObserver.h",
            "vtkScalarTree.h",
            "vtkSelectionAlgorithm.h",
            "vtkSimpleImageToImageFilter.h",
            "vtkSimpleReader.h",
            "vtkSimpleScalarTree.h",
            "vtkSpanSpace.h",
            "vtkSphereTree.h",
            "vtkStreamingDemandDrivenPipeline.h",
            "vtkStructuredGridAlgorithm.h",
            "vtkTableAlgorithm.h",
            "vtkThreadedCompositeDataPipeline.h",
            "vtkThreadedImageAlgorithm.h",
            "vtkTreeAlgorithm.h",
            "vtkTrivialConsumer.h",
            "vtkTrivialProducer.h",
            "vtkUndirectedGraphAlgorithm.h",
            "vtkUniformGridAMRAlgorithm.h",
            "vtkUniformGridPartitioner.h",
            "vtkUnstructuredGridAlgorithm.h",
            "vtkUnstructuredGridBaseAlgorithm.h",
        ],
        deps = [
            ":vtkCommonCore",
            ":vtkCommonDataModel",
            ":vtkCommonMisc",
            ":vtkCommonSystem",
        ],
    )

    file_content += _vtk_cc_library(
        os_result,
        "vtkCommonMath",
        hdrs = [
            "vtkAmoebaMinimizer.h",
            "vtkCommonMathModule.h",
            "vtkFFT.h",
            "vtkFunctionSet.h",
            "vtkInitialValueProblemSolver.h",
            "vtkMatrix3x3.h",
            "vtkMatrix4x4.h",
            "vtkPolynomialSolversUnivariate.h",
            "vtkQuaternion.h",
            "vtkQuaternion.txx",
            "vtkQuaternionInterpolator.h",
            "vtkRungeKutta2.h",
            "vtkRungeKutta4.h",
            "vtkRungeKutta45.h",
            "vtkTuple.h",
        ],
        deps = [
            ":vtkCommonCore",
            ":vtkkissfft",
        ],
    )

    file_content += _vtk_cc_library(
        os_result,
        "vtkCommonMisc",
        hdrs = [
            "vtkCommonMiscModule.h",
            "vtkContourValues.h",
            "vtkErrorCode.h",
            "vtkExprTkFunctionParser.h",
            "vtkFunctionParser.h",
            "vtkHeap.h",
            "vtkPolygonBuilder.h",
            "vtkResourceFileLocator.h",
        ],
        deps = [
            ":vtkCommonCore",
            ":vtkCommonMath",
            ":vtksys",
        ],
    )

    file_content += _vtk_cc_library(
        os_result,
        "vtkCommonSystem",
        hdrs = [
            "vtkClientSocket.h",
            "vtkCommonSystemModule.h",
            "vtkDirectory.h",
            "vtkExecutableRunner.h",
            "vtkServerSocket.h",
            "vtkSocket.h",
            "vtkSocketCollection.h",
            "vtkThreadMessager.h",
            "vtkTimerLog.h",
        ],
        deps = [
            ":vtkCommonCore",
            ":vtksys",
        ],
    )

    file_content += _vtk_cc_library(
        os_result,
        "vtkCommonTransforms",
        hdrs = [
            "vtkAbstractTransform.h",
            "vtkCommonTransformsModule.h",
            "vtkCylindricalTransform.h",
            "vtkGeneralTransform.h",
            "vtkHomogeneousTransform.h",
            "vtkIdentityTransform.h",
            "vtkLandmarkTransform.h",
            "vtkLinearTransform.h",
            "vtkMatrixToHomogeneousTransform.h",
            "vtkMatrixToLinearTransform.h",
            "vtkPerspectiveTransform.h",
            "vtkSphericalTransform.h",
            "vtkThinPlateSplineTransform.h",
            "vtkTransform.h",
            "vtkTransform2D.h",
            "vtkTransformCollection.h",
            "vtkWarpTransform.h",
        ],
        deps = [
            ":vtkCommonCore",
            ":vtkCommonMath",
            ":vtksys",
        ],
    )

    file_content += _vtk_cc_library(
        os_result,
        "vtkDICOMParser",
        hdrs = [
            "DICOMAppHelper.h",
            "DICOMCMakeConfig.h",
            "DICOMCallback.h",
            "DICOMConfig.h",
            "DICOMFile.h",
            "DICOMParser.h",
            "DICOMParserMap.h",
            "DICOMTypes.h",
            "vtkDICOMParserModule.h",
        ],
        deps = [":vtksys"],
    )

    file_content += _vtk_cc_library(
        os_result,
        "vtkFiltersCore",
        hdrs = [
            "vtk3DLinearGridCrinkleExtractor.h",
            "vtk3DLinearGridPlaneCutter.h",
            "vtkAppendArcLength.h",
            "vtkAppendCompositeDataLeaves.h",
            "vtkAppendDataSets.h",
            "vtkAppendFilter.h",
            "vtkAppendPolyData.h",
            "vtkAppendSelection.h",
            "vtkArrayCalculator.h",
            "vtkAssignAttribute.h",
            "vtkAttributeDataToFieldDataFilter.h",
            "vtkBinCellDataFilter.h",
            "vtkBinnedDecimation.h",
            "vtkCellCenters.h",
            "vtkCellDataToPointData.h",
            "vtkCenterOfMass.h",
            "vtkCleanPolyData.h",
            "vtkClipPolyData.h",
            "vtkCompositeCutter.h",
            "vtkCompositeDataProbeFilter.h",
            "vtkConnectivityFilter.h",
            "vtkContour3DLinearGrid.h",
            "vtkContourFilter.h",
            "vtkContourGrid.h",
            "vtkContourHelper.h",
            "vtkConvertToMultiBlockDataSet.h",
            "vtkConvertToPartitionedDataSetCollection.h",
            "vtkCutter.h",
            "vtkDataObjectGenerator.h",
            "vtkDataObjectToDataSetFilter.h",
            "vtkDataSetEdgeSubdivisionCriterion.h",
            "vtkDataSetToDataObjectFilter.h",
            "vtkDecimatePolylineFilter.h",
            "vtkDecimatePro.h",
            "vtkDelaunay2D.h",
            "vtkDelaunay3D.h",
            "vtkEdgeSubdivisionCriterion.h",
            "vtkElevationFilter.h",
            "vtkExecutionTimer.h",
            "vtkExplicitStructuredGridCrop.h",
            "vtkExplicitStructuredGridToUnstructuredGrid.h",
            "vtkFeatureEdges.h",
            "vtkFieldDataToAttributeDataFilter.h",
            "vtkFiltersCoreModule.h",
            "vtkFlyingEdges2D.h",
            "vtkFlyingEdges3D.h",
            "vtkFlyingEdgesPlaneCutter.h",
            "vtkGlyph2D.h",
            "vtkGlyph3D.h",
            "vtkGridSynchronizedTemplates3D.h",
            "vtkHedgeHog.h",
            "vtkHull.h",
            "vtkIdFilter.h",
            "vtkImageAppend.h",
            "vtkImageDataToExplicitStructuredGrid.h",
            "vtkImplicitPolyDataDistance.h",
            "vtkImplicitProjectOnPlaneDistance.h",
            "vtkMarchingCubes.h",
            "vtkMarchingSquares.h",
            "vtkMaskFields.h",
            "vtkMaskPoints.h",
            "vtkMaskPolyData.h",
            "vtkMassProperties.h",
            "vtkMergeDataObjectFilter.h",
            "vtkMergeFields.h",
            "vtkMergeFilter.h",
            "vtkMoleculeAppend.h",
            "vtkMultiObjectMassProperties.h",
            "vtkPassThrough.h",
            "vtkPlaneCutter.h",
            "vtkPointDataToCellData.h",
            "vtkPolyDataConnectivityFilter.h",
            "vtkPolyDataEdgeConnectivityFilter.h",
            "vtkPolyDataNormals.h",
            "vtkPolyDataPlaneClipper.h",
            "vtkPolyDataTangents.h",
            "vtkProbeFilter.h",
            "vtkQuadricClustering.h",
            "vtkQuadricDecimation.h",
            "vtkRearrangeFields.h",
            "vtkRectilinearSynchronizedTemplates.h",
            "vtkRemoveDuplicatePolys.h",
            "vtkRemoveUnusedPoints.h",
            "vtkResampleToImage.h",
            "vtkResampleWithDataSet.h",
            "vtkReverseSense.h",
            "vtkSimpleElevationFilter.h",
            "vtkSmoothPolyDataFilter.h",
            "vtkSphereTreeFilter.h",
            "vtkStaticCleanPolyData.h",
            "vtkStreamerBase.h",
            "vtkStreamingTessellator.h",
            "vtkStripper.h",
            "vtkStructuredGridAppend.h",
            "vtkStructuredGridOutlineFilter.h",
            "vtkSynchronizedTemplates2D.h",
            "vtkSynchronizedTemplates3D.h",
            "vtkSynchronizedTemplatesCutter3D.h",
            "vtkTensorGlyph.h",
            "vtkThreshold.h",
            "vtkThresholdPoints.h",
            "vtkTransposeTable.h",
            "vtkTriangleFilter.h",
            "vtkTriangleMeshPointNormals.h",
            "vtkTubeBender.h",
            "vtkTubeFilter.h",
            "vtkUnstructuredGridQuadricDecimation.h",
            "vtkUnstructuredGridToExplicitStructuredGrid.h",
            "vtkVectorDot.h",
            "vtkVectorNorm.h",
            "vtkVoronoi2D.h",
            "vtkWindowedSincPolyDataFilter.h",
        ],
        deps = [
            ":vtkCommonCore",
            ":vtkCommonDataModel",
            ":vtkCommonExecutionModel",
            ":vtkCommonMath",
            ":vtkCommonMisc",
            ":vtkCommonSystem",
            ":vtkCommonTransforms",
            ":vtksys",
        ],
    )

    file_content += _vtk_cc_library(
        os_result,
        "vtkFiltersGeneral",
        hdrs = [
            "vtkAnimateModes.h",
            "vtkAnnotationLink.h",
            "vtkAppendLocationAttributes.h",
            "vtkAppendPoints.h",
            "vtkApproximatingSubdivisionFilter.h",
            "vtkAreaContourSpectrumFilter.h",
            "vtkAxes.h",
            "vtkBlankStructuredGrid.h",
            "vtkBlankStructuredGridWithImage.h",
            "vtkBlockIdScalars.h",
            "vtkBooleanOperationPolyDataFilter.h",
            "vtkBoxClipDataSet.h",
            "vtkBrownianPoints.h",
            "vtkCellDerivatives.h",
            "vtkCellTreeLocator.h",
            "vtkCellValidator.h",
            "vtkClipClosedSurface.h",
            "vtkClipConvexPolyData.h",
            "vtkClipDataSet.h",
            "vtkClipVolume.h",
            "vtkCoincidentPoints.h",
            "vtkContourTriangulator.h",
            "vtkCountFaces.h",
            "vtkCountVertices.h",
            "vtkCursor2D.h",
            "vtkCursor3D.h",
            "vtkCurvatures.h",
            "vtkDataSetGradient.h",
            "vtkDataSetGradientPrecompute.h",
            "vtkDataSetTriangleFilter.h",
            "vtkDateToNumeric.h",
            "vtkDeflectNormals.h",
            "vtkDeformPointSet.h",
            "vtkDensifyPolyData.h",
            "vtkDicer.h",
            "vtkDiscreteFlyingEdges2D.h",
            "vtkDiscreteFlyingEdges3D.h",
            "vtkDiscreteFlyingEdgesClipper2D.h",
            "vtkDiscreteMarchingCubes.h",
            "vtkDistancePolyDataFilter.h",
            "vtkEdgePoints.h",
            "vtkEqualizerFilter.h",
            "vtkExtractArray.h",
            "vtkExtractGhostCells.h",
            "vtkExtractSelectedFrustum.h",
            "vtkExtractSelectionBase.h",
            "vtkFiltersGeneralModule.h",
            "vtkGradientFilter.h",
            "vtkGraphLayoutFilter.h",
            "vtkGraphToPoints.h",
            "vtkGraphWeightEuclideanDistanceFilter.h",
            "vtkGraphWeightFilter.h",
            "vtkGroupDataSetsFilter.h",
            "vtkGroupTimeStepsFilter.h",
            "vtkHierarchicalDataLevelFilter.h",
            "vtkHyperStreamline.h",
            "vtkIconGlyphFilter.h",
            "vtkImageDataToPointSet.h",
            "vtkImageMarchingCubes.h",
            "vtkInterpolateDataSetAttributes.h",
            "vtkInterpolatingSubdivisionFilter.h",
            "vtkIntersectionPolyDataFilter.h",
            "vtkLevelIdScalars.h",
            "vtkLinkEdgels.h",
            "vtkLoopBooleanPolyDataFilter.h",
            "vtkMarchingContourFilter.h",
            "vtkMatricizeArray.h",
            "vtkMergeArrays.h",
            "vtkMergeCells.h",
            "vtkMergeTimeFilter.h",
            "vtkMergeVectorComponents.h",
            "vtkMultiBlockDataGroupFilter.h",
            "vtkMultiBlockFromTimeSeriesFilter.h",
            "vtkMultiBlockMergeFilter.h",
            "vtkMultiThreshold.h",
            "vtkNormalizeMatrixVectors.h",
            "vtkOBBDicer.h",
            "vtkOBBTree.h",
            "vtkOverlappingAMRLevelIdScalars.h",
            "vtkPassArrays.h",
            "vtkPassSelectedArrays.h",
            "vtkPointConnectivityFilter.h",
            "vtkPolyDataStreamer.h",
            "vtkPolyDataToReebGraphFilter.h",
            "vtkProbePolyhedron.h",
            "vtkQuadraturePointInterpolator.h",
            "vtkQuadraturePointsGenerator.h",
            "vtkQuadratureSchemeDictionaryGenerator.h",
            "vtkQuantizePolyDataPoints.h",
            "vtkRandomAttributeGenerator.h",
            "vtkRectilinearGridClip.h",
            "vtkRectilinearGridToPointSet.h",
            "vtkRectilinearGridToTetrahedra.h",
            "vtkRecursiveDividingCubes.h",
            "vtkReflectionFilter.h",
            "vtkRemovePolyData.h",
            "vtkRotationFilter.h",
            "vtkSampleImplicitFunctionFilter.h",
            "vtkShrinkFilter.h",
            "vtkShrinkPolyData.h",
            "vtkSpatialRepresentationFilter.h",
            "vtkSphericalHarmonics.h",
            "vtkSplineFilter.h",
            "vtkSplitByCellScalarFilter.h",
            "vtkSplitColumnComponents.h",
            "vtkSplitField.h",
            "vtkStructuredGridClip.h",
            "vtkSubPixelPositionEdgels.h",
            "vtkSubdivisionFilter.h",
            "vtkSynchronizeTimeFilter.h",
            "vtkTableBasedClipDataSet.h",
            "vtkTableFFT.h",
            "vtkTableToPolyData.h",
            "vtkTableToStructuredGrid.h",
            "vtkTemporalPathLineFilter.h",
            "vtkTemporalStatistics.h",
            "vtkTessellatorFilter.h",
            "vtkTimeSourceExample.h",
            "vtkTransformFilter.h",
            "vtkTransformPolyDataFilter.h",
            "vtkUncertaintyTubeFilter.h",
            "vtkVertexGlyphFilter.h",
            "vtkVolumeContourSpectrumFilter.h",
            "vtkVoxelContoursToSurfaceFilter.h",
            "vtkWarpLens.h",
            "vtkWarpScalar.h",
            "vtkWarpTo.h",
            "vtkWarpVector.h",
            "vtkYoungsMaterialInterface.h",
        ],
        deps = [
            ":vtkCommonComputationalGeometry",
            ":vtkCommonCore",
            ":vtkCommonDataModel",
            ":vtkCommonExecutionModel",
            ":vtkCommonMath",
            ":vtkCommonMisc",
            ":vtkCommonSystem",
            ":vtkCommonTransforms",
            ":vtkFiltersCore",
            ":vtkfmt",
        ],
    )

    file_content += _vtk_cc_library(
        os_result,
        "vtkFiltersGeometry",
        hdrs = [
            "vtkAbstractGridConnectivity.h",
            "vtkCompositeDataGeometryFilter.h",
            "vtkDataSetGhostGenerator.h",
            "vtkDataSetRegionSurfaceFilter.h",
            "vtkDataSetSurfaceFilter.h",
            "vtkExplicitStructuredGridSurfaceFilter.h",
            "vtkFiltersGeometryModule.h",
            "vtkGeometryFilter.h",
            "vtkHierarchicalDataSetGeometryFilter.h",
            "vtkImageDataGeometryFilter.h",
            "vtkImageDataToUniformGrid.h",
            "vtkLinearToQuadraticCellsFilter.h",
            "vtkMarkBoundaryFilter.h",
            "vtkProjectSphereFilter.h",
            "vtkRectilinearGridGeometryFilter.h",
            "vtkRectilinearGridPartitioner.h",
            "vtkStructuredAMRGridConnectivity.h",
            "vtkStructuredAMRNeighbor.h",
            "vtkStructuredGridConnectivity.h",
            "vtkStructuredGridGeometryFilter.h",
            "vtkStructuredGridGhostDataGenerator.h",
            "vtkStructuredGridPartitioner.h",
            "vtkStructuredNeighbor.h",
            "vtkStructuredPointsGeometryFilter.h",
            "vtkUniformGridGhostDataGenerator.h",
            "vtkUnstructuredGridGeometryFilter.h",
        ],
        deps = [
            ":vtkCommonCore",
            ":vtkCommonDataModel",
            ":vtkCommonExecutionModel",
            ":vtkFiltersCore",
            ":vtksys",
        ],
    )

    file_content += _vtk_cc_library(
        os_result,
        "vtkFiltersHybrid",
        hdrs = [
            "vtkAdaptiveDataSetSurfaceFilter.h",
            "vtkBSplineTransform.h",
            "vtkDSPFilterDefinition.h",
            "vtkDSPFilterGroup.h",
            "vtkDepthSortPolyData.h",
            "vtkEarthSource.h",
            "vtkFacetReader.h",
            "vtkFiltersHybridModule.h",
            "vtkForceTime.h",
            "vtkGreedyTerrainDecimation.h",
            "vtkGridTransform.h",
            "vtkImageToPolyDataFilter.h",
            "vtkImplicitModeller.h",
            "vtkPCAAnalysisFilter.h",
            "vtkPolyDataSilhouette.h",
            "vtkProcrustesAlignmentFilter.h",
            "vtkProjectedTerrainPath.h",
            "vtkRenderLargeImage.h",
            "vtkTemporalArrayOperatorFilter.h",
            "vtkTemporalDataSetCache.h",
            "vtkTemporalFractal.h",
            "vtkTemporalInterpolator.h",
            "vtkTemporalShiftScale.h",
            "vtkTemporalSnapToTimeStep.h",
            "vtkTransformToGrid.h",
            "vtkWeightedTransformFilter.h",
        ],
        deps = [
            ":vtkCommonCore",
            ":vtkCommonDataModel",
            ":vtkCommonExecutionModel",
            ":vtkCommonMath",
            ":vtkCommonMisc",
            ":vtkCommonTransforms",
            ":vtkFiltersGeometry",
            ":vtkFiltersCore",
            ":vtkFiltersGeneral",
            ":vtkImagingCore",
            ":vtkImagingSources",
            ":vtkRenderingCore",
            ":vtksys",
        ],
    )

    file_content += _vtk_cc_library(
        os_result,
        "vtkFiltersSources",
        hdrs = [
            "vtkArcSource.h",
            "vtkArrowSource.h",
            "vtkButtonSource.h",
            "vtkCapsuleSource.h",
            "vtkCellTypeSource.h",
            "vtkConeSource.h",
            "vtkCubeSource.h",
            "vtkCylinderSource.h",
            "vtkDiagonalMatrixSource.h",
            "vtkDiskSource.h",
            "vtkEllipseArcSource.h",
            "vtkEllipticalButtonSource.h",
            "vtkFiltersSourcesModule.h",
            "vtkFrustumSource.h",
            "vtkGlyphSource2D.h",
            "vtkGraphToPolyData.h",
            "vtkHandleSource.h",
            "vtkHyperTreeGridSource.h",
            "vtkLineSource.h",
            "vtkOutlineCornerFilter.h",
            "vtkOutlineCornerSource.h",
            "vtkOutlineSource.h",
            "vtkParametricFunctionSource.h",
            "vtkPartitionedDataSetCollectionSource.h",
            "vtkPartitionedDataSetSource.h",
            "vtkPlaneSource.h",
            "vtkPlatonicSolidSource.h",
            "vtkPointHandleSource.h",
            "vtkPointSource.h",
            "vtkPolyLineSource.h",
            "vtkPolyPointSource.h",
            "vtkProgrammableDataObjectSource.h",
            "vtkProgrammableSource.h",
            "vtkRandomHyperTreeGridSource.h",
            "vtkRectangularButtonSource.h",
            "vtkRegularPolygonSource.h",
            "vtkSelectionSource.h",
            "vtkSphereSource.h",
            "vtkSuperquadricSource.h",
            "vtkTessellatedBoxSource.h",
            "vtkTextSource.h",
            "vtkTexturedSphereSource.h",
            "vtkUniformHyperTreeGridSource.h",
        ],
        deps = [
            ":vtkCommonComputationalGeometry",
            ":vtkCommonCore",
            ":vtkCommonDataModel",
            ":vtkCommonExecutionModel",
            ":vtkCommonTransforms",
            ":vtkFiltersCore",
            ":vtkFiltersGeneral",
        ],
    )

    file_content += _vtk_cc_library(
        os_result,
        "vtkImagingCore",
        hdrs = [
            "vtkAbstractImageInterpolator.h",
            "vtkExtractVOI.h",
            "vtkGenericImageInterpolator.h",
            "vtkImageAppendComponents.h",
            "vtkImageBSplineCoefficients.h",
            "vtkImageBSplineInternals.h",
            "vtkImageBSplineInterpolator.h",
            "vtkImageBlend.h",
            "vtkImageCacheFilter.h",
            "vtkImageCast.h",
            "vtkImageChangeInformation.h",
            "vtkImageClip.h",
            "vtkImageConstantPad.h",
            "vtkImageDataStreamer.h",
            "vtkImageDecomposeFilter.h",
            "vtkImageDifference.h",
            "vtkImageExtractComponents.h",
            "vtkImageFlip.h",
            "vtkImageInterpolator.h",
            "vtkImageIterateFilter.h",
            "vtkImageMagnify.h",
            "vtkImageMapToColors.h",
            "vtkImageMask.h",
            "vtkImageMirrorPad.h",
            "vtkImagePadFilter.h",
            "vtkImagePermute.h",
            "vtkImagePointDataIterator.h",
            "vtkImagePointIterator.h",
            "vtkImageProbeFilter.h",
            "vtkImageResample.h",
            "vtkImageResize.h",
            "vtkImageReslice.h",
            "vtkImageResliceToColors.h",
            "vtkImageShiftScale.h",
            "vtkImageShrink3D.h",
            "vtkImageSincInterpolator.h",
            "vtkImageStencilAlgorithm.h",
            "vtkImageStencilData.h",
            "vtkImageStencilIterator.h",
            "vtkImageStencilSource.h",
            "vtkImageThreshold.h",
            "vtkImageTranslateExtent.h",
            "vtkImageWrapPad.h",
            "vtkImagingCoreModule.h",
            "vtkRTAnalyticSource.h",
        ],
        deps = [
            ":vtkCommonCore",
            ":vtkCommonDataModel",
            ":vtkCommonExecutionModel",
            ":vtkCommonMath",
            ":vtkCommonTransforms",
        ],
    )

    file_content += _vtk_cc_library(
        os_result,
        "vtkImagingMath",
        hdrs = [
            "vtkImageDivergence.h",
            "vtkImageDotProduct.h",
            "vtkImageLogarithmicScale.h",
            "vtkImageLogic.h",
            "vtkImageMagnitude.h",
            "vtkImageMaskBits.h",
            "vtkImageMathematics.h",
            "vtkImageWeightedSum.h",
            "vtkImagingMathModule.h",
        ],
        deps = [
            ":vtkCommonCore",
            ":vtkCommonDataModel",
            ":vtkCommonExecutionModel",
        ],
    )

    file_content += _vtk_cc_library(
        os_result,
        "vtkImagingSources",
        hdrs = [
            "vtkImageCanvasSource2D.h",
            "vtkImageEllipsoidSource.h",
            "vtkImageGaussianSource.h",
            "vtkImageGridSource.h",
            "vtkImageMandelbrotSource.h",
            "vtkImageNoiseSource.h",
            "vtkImageSinusoidSource.h",
            "vtkImagingSourcesModule.h",
        ],
        deps = [
            ":vtkCommonCore",
            ":vtkCommonDataModel",
            ":vtkCommonExecutionModel",
            ":vtkImagingCore",
        ],
    )

    file_content += _vtk_cc_library(
        os_result,
        "vtkIOCore",
        hdrs = [
            "vtkASCIITextCodec.h",
            "vtkAbstractParticleWriter.h",
            "vtkAbstractPolyDataReader.h",
            "vtkArrayDataReader.h",
            "vtkArrayDataWriter.h",
            "vtkArrayReader.h",
            "vtkArrayWriter.h",
            "vtkBase64InputStream.h",
            "vtkBase64OutputStream.h",
            "vtkBase64Utilities.h",
            "vtkDataCompressor.h",
            "vtkDelimitedTextWriter.h",
            "vtkGlobFileNames.h",
            "vtkIOCoreModule.h",
            "vtkInputStream.h",
            "vtkJavaScriptDataWriter.h",
            "vtkLZ4DataCompressor.h",
            "vtkLZMADataCompressor.h",
            "vtkNumberToString.h",
            "vtkOutputStream.h",
            "vtkSortFileNames.h",
            "vtkTextCodec.h",
            "vtkTextCodecFactory.h",
            "vtkUTF16TextCodec.h",
            "vtkUTF8TextCodec.h",
            "vtkUpdateCellsV8toV9.h",
            "vtkWriter.h",
            "vtkZLibDataCompressor.h",
        ],
        deps = [
            ":vtkCommonCore",
            ":vtkCommonDataModel",
            ":vtkCommonExecutionModel",
            ":vtkCommonMisc",
            ":vtksys",
            "@double_conversion",
            "@liblz4",
            "@liblzma",
            "@zlib",
        ],
    )

    file_content += _vtk_cc_library(
        os_result,
        "vtkIOExport",
        hdrs = [
            "vtkExporter.h",
            "vtkGLTFExporter.h",
            "vtkIOExportModule.h",
            "vtkIVExporter.h",
            "vtkJSONDataSetWriter.h",
            "vtkJSONRenderWindowExporter.h",
            "vtkJSONSceneExporter.h",
            "vtkOBJExporter.h",
            "vtkOOGLExporter.h",
            "vtkPOVExporter.h",
            "vtkRIBExporter.h",
            "vtkRIBLight.h",
            "vtkRIBProperty.h",
            "vtkSVGContextDevice2D.h",
            "vtkSVGExporter.h",
            "vtkSingleVTPExporter.h",
            "vtkVRMLExporter.h",
            "vtkX3D.h",
            "vtkX3DExporter.h",
            "vtkX3DExporterFIWriter.h",
            "vtkX3DExporterWriter.h",
            "vtkX3DExporterXMLWriter.h",
        ],
        deps = [
            ":vtkCommonCore",
            ":vtkCommonDataModel",
            ":vtkCommonMath",
            ":vtkCommonTransforms",
            ":vtkFiltersGeometry",
            ":vtkImagingCore",
            ":vtkIOCore",
            ":vtkIOGeometry",
            ":vtkIOImage",
            ":vtkIOXML",
            ":vtkRenderingContext2D",
            ":vtkRenderingCore",
            ":vtkRenderingFreeType",
            ":vtkRenderingVtkJS",
            ":vtklibharu",
        ],
    )

    file_content += _vtk_cc_library(
        os_result,
        "vtkIOGeometry",
        hdrs = [
            "vtkAVSucdReader.h",
            "vtkBYUReader.h",
            "vtkBYUWriter.h",
            "vtkChacoReader.h",
            "vtkFLUENTReader.h",
            "vtkFacetWriter.h",
            "vtkGAMBITReader.h",
            "vtkGLTFDocumentLoader.h",
            "vtkGLTFReader.h",
            "vtkGLTFWriter.h",
            "vtkHoudiniPolyDataWriter.h",
            "vtkIOGeometryModule.h",
            "vtkIVWriter.h",
            "vtkMCubesReader.h",
            "vtkMCubesWriter.h",
            "vtkMFIXReader.h",
            "vtkOBJReader.h",
            "vtkOBJWriter.h",
            "vtkOpenFOAMReader.h",
            "vtkPTSReader.h",
            "vtkParticleReader.h",
            "vtkProStarReader.h",
            "vtkSTLReader.h",
            "vtkSTLWriter.h",
            "vtkTecplotReader.h",
            "vtkWindBladeReader.h",
        ],
        deps = [
            ":vtkCommonCore",
            ":vtkCommonDataModel",
            ":vtkCommonExecutionModel",
            ":vtkCommonMisc",
            ":vtkCommonSystem",
            ":vtkCommonTransforms",
            ":vtkFiltersGeneral",
            ":vtkFiltersHybrid",
            ":vtkImagingCore",
            ":vtkIOCore",
            ":vtkIOImage",
            ":vtkIOLegacy",
            ":vtkRenderingCore",
            ":vtksys",
            "@zlib",
        ],
    )

    vtk_io_image_deps = [
        ":vtkCommonCore",
        ":vtkCommonDataModel",
        ":vtkCommonExecutionModel",
        ":vtkCommonMath",
        ":vtkCommonMisc",
        ":vtkCommonSystem",
        ":vtkCommonTransforms",
        ":vtkDICOMParser",
        ":vtkImagingCore",
        ":vtkmetaio",
        ":vtksys",
        "@libjpeg",
        "@libpng",
        "@libtiff",
        "@zlib",
    ]
    if not os_result.is_macos:
        vtk_io_image_deps.append(":vtkpugixml")
    file_content += _vtk_cc_library(
        os_result,
        "vtkIOImage",
        hdrs = [
            "vtkBMPReader.h",
            "vtkBMPWriter.h",
            "vtkDEMReader.h",
            "vtkDICOMImageReader.h",
            "vtkGESignaReader.h",
            "vtkHDRReader.h",
            "vtkIOImageModule.h",
            "vtkImageExport.h",
            "vtkImageImport.h",
            "vtkImageImportExecutive.h",
            "vtkImageReader.h",
            "vtkImageReader2.h",
            "vtkImageReader2Collection.h",
            "vtkImageReader2Factory.h",
            "vtkImageWriter.h",
            "vtkJPEGReader.h",
            "vtkJPEGWriter.h",
            "vtkJSONImageWriter.h",
            "vtkMRCReader.h",
            "vtkMedicalImageProperties.h",
            "vtkMedicalImageReader2.h",
            "vtkMetaImageReader.h",
            "vtkMetaImageWriter.h",
            "vtkNIFTIImageHeader.h",
            "vtkNIFTIImageReader.h",
            "vtkNIFTIImageWriter.h",
            "vtkNrrdReader.h",
            "vtkOMETIFFReader.h",
            "vtkPNGReader.h",
            "vtkPNGWriter.h",
            "vtkPNMReader.h",
            "vtkPNMWriter.h",
            "vtkPostScriptWriter.h",
            "vtkSEPReader.h",
            "vtkSLCReader.h",
            "vtkTGAReader.h",
            "vtkTIFFReader.h",
            "vtkTIFFWriter.h",
            "vtkVolume16Reader.h",
            "vtkVolumeReader.h",
        ],
        deps = vtk_io_image_deps,
    )

    file_content += _vtk_cc_library(
        os_result,
        "vtkIOImport",
        hdrs = [
            "vtk3DS.h",
            "vtk3DSImporter.h",
            "vtkGLTFImporter.h",
            "vtkIOImportModule.h",
            "vtkImporter.h",
            "vtkOBJImporter.h",
            "vtkOBJImporterInternals.h",
            "vtkVRMLImporter.h",
        ],
        deps = [
            ":vtkCommonCore",
            ":vtkCommonDataModel",
            ":vtkCommonExecutionModel",
            ":vtkCommonMisc",
            ":vtkCommonTransforms",
            ":vtkFiltersCore",
            ":vtkFiltersSources",
            ":vtkImagingCore",
            ":vtkIOGeometry",
            ":vtkIOImage",
            ":vtkRenderingCore",
            ":vtksys",
        ],
    )

    file_content += _vtk_cc_library(
        os_result,
        "vtkIOLegacy",
        hdrs = [
            "vtkCompositeDataReader.h",
            "vtkCompositeDataWriter.h",
            "vtkDataObjectReader.h",
            "vtkDataObjectWriter.h",
            "vtkDataReader.h",
            "vtkDataSetReader.h",
            "vtkDataSetWriter.h",
            "vtkDataWriter.h",
            "vtkGenericDataObjectReader.h",
            "vtkGenericDataObjectWriter.h",
            "vtkGraphReader.h",
            "vtkGraphWriter.h",
            "vtkIOLegacyModule.h",
            "vtkPixelExtentIO.h",
            "vtkPolyDataReader.h",
            "vtkPolyDataWriter.h",
            "vtkRectilinearGridReader.h",
            "vtkRectilinearGridWriter.h",
            "vtkSimplePointsReader.h",
            "vtkSimplePointsWriter.h",
            "vtkStructuredGridReader.h",
            "vtkStructuredGridWriter.h",
            "vtkStructuredPointsReader.h",
            "vtkStructuredPointsWriter.h",
            "vtkTableReader.h",
            "vtkTableWriter.h",
            "vtkTreeReader.h",
            "vtkTreeWriter.h",
            "vtkUnstructuredGridReader.h",
            "vtkUnstructuredGridWriter.h",
        ],
        deps = [
            ":vtkCommonCore",
            ":vtkCommonDataModel",
            ":vtkCommonExecutionModel",
            ":vtkCommonMisc",
            ":vtkIOCore",
            ":vtksys",
        ],
    )

    file_content += _vtk_cc_library(
        os_result,
        "vtkIOXMLParser",
        hdrs = [
            "vtkIOXMLParserModule.h",
            "vtkXMLDataParser.h",
            "vtkXMLParser.h",
            "vtkXMLUtilities.h",
        ],
        deps = [
            ":vtkCommonCore",
            ":vtkCommonDataModel",
            ":vtkIOCore",
            ":vtksys",
            "@expat",
        ],
    )

    file_content += _vtk_cc_library(
        os_result,
        "vtkIOXML",
        hdrs = [
            "vtkIOXMLModule.h",
            "vtkRTXMLPolyDataReader.h",
            "vtkXMLCompositeDataReader.h",
            "vtkXMLCompositeDataWriter.h",
            "vtkXMLDataObjectWriter.h",
            "vtkXMLDataReader.h",
            "vtkXMLDataSetWriter.h",
            "vtkXMLFileReadTester.h",
            "vtkXMLGenericDataObjectReader.h",
            "vtkXMLHierarchicalBoxDataFileConverter.h",
            "vtkXMLHierarchicalBoxDataReader.h",
            "vtkXMLHierarchicalBoxDataWriter.h",
            "vtkXMLHierarchicalDataReader.h",
            "vtkXMLHyperTreeGridReader.h",
            "vtkXMLHyperTreeGridWriter.h",
            "vtkXMLImageDataReader.h",
            "vtkXMLImageDataWriter.h",
            "vtkXMLMultiBlockDataReader.h",
            "vtkXMLMultiBlockDataWriter.h",
            "vtkXMLMultiGroupDataReader.h",
            "vtkXMLPDataObjectReader.h",
            "vtkXMLPDataReader.h",
            "vtkXMLPHyperTreeGridReader.h",
            "vtkXMLPImageDataReader.h",
            "vtkXMLPPolyDataReader.h",
            "vtkXMLPRectilinearGridReader.h",
            "vtkXMLPStructuredDataReader.h",
            "vtkXMLPStructuredGridReader.h",
            "vtkXMLPTableReader.h",
            "vtkXMLPUnstructuredDataReader.h",
            "vtkXMLPUnstructuredGridReader.h",
            "vtkXMLPartitionedDataSetCollectionReader.h",
            "vtkXMLPartitionedDataSetReader.h",
            "vtkXMLPolyDataReader.h",
            "vtkXMLPolyDataWriter.h",
            "vtkXMLReader.h",
            "vtkXMLRectilinearGridReader.h",
            "vtkXMLRectilinearGridWriter.h",
            "vtkXMLStructuredDataReader.h",
            "vtkXMLStructuredDataWriter.h",
            "vtkXMLStructuredGridReader.h",
            "vtkXMLStructuredGridWriter.h",
            "vtkXMLTableReader.h",
            "vtkXMLTableWriter.h",
            "vtkXMLUniformGridAMRReader.h",
            "vtkXMLUniformGridAMRWriter.h",
            "vtkXMLUnstructuredDataReader.h",
            "vtkXMLUnstructuredDataWriter.h",
            "vtkXMLUnstructuredGridReader.h",
            "vtkXMLUnstructuredGridWriter.h",
            "vtkXMLWriter.h",
            "vtkXMLWriterBase.h",
            "vtkXMLWriterC.h",
        ],
        deps = [
            ":vtkCommonCore",
            ":vtkCommonDataModel",
            ":vtkCommonExecutionModel",
            ":vtkCommonMisc",
            ":vtkCommonSystem",
            ":vtkIOCore",
            ":vtkIOXMLParser",
            ":vtksys",
        ],
    )

    file_content += _vtk_cc_library(
        os_result,
        "vtkRenderingCore",
        hdrs = [
            "vtkAbstractHyperTreeGridMapper.h",
            "vtkAbstractInteractionDevice.h",
            "vtkAbstractMapper.h",
            "vtkAbstractMapper3D.h",
            "vtkAbstractPicker.h",
            "vtkAbstractPropPicker.h",
            "vtkAbstractRenderDevice.h",
            "vtkAbstractVolumeMapper.h",
            "vtkActor.h",
            "vtkActor2D.h",
            "vtkActor2DCollection.h",
            "vtkActorCollection.h",
            "vtkAreaPicker.h",
            "vtkAssembly.h",
            "vtkAssemblyNode.h",
            "vtkAssemblyPath.h",
            "vtkAssemblyPaths.h",
            "vtkAvatar.h",
            "vtkBackgroundColorMonitor.h",
            "vtkBillboardTextActor3D.h",
            "vtkCIEDE2000.h",
            "vtkCamera.h",
            "vtkCameraActor.h",
            "vtkCameraInterpolator.h",
            "vtkCellCenterDepthSort.h",
            "vtkCellPicker.h",
            "vtkColorTransferFunction.h",
            "vtkCompositeDataDisplayAttributes.h",
            "vtkCompositeDataDisplayAttributesLegacy.h",
            "vtkCompositePolyDataMapper.h",
            "vtkCoordinate.h",
            "vtkCuller.h",
            "vtkCullerCollection.h",
            "vtkDataSetMapper.h",
            "vtkDiscretizableColorTransferFunction.h",
            "vtkDistanceToCamera.h",
            "vtkFXAAOptions.h",
            "vtkFlagpoleLabel.h",
            "vtkFollower.h",
            "vtkFrameBufferObjectBase.h",
            "vtkFrustumCoverageCuller.h",
            "vtkGPUInfo.h",
            "vtkGPUInfoList.h",
            "vtkGPUInfoListArray.h",
            "vtkGenericVertexAttributeMapping.h",
            "vtkGlyph3DMapper.h",
            "vtkGraphMapper.h",
            "vtkGraphToGlyphs.h",
            "vtkGraphicsFactory.h",
            "vtkHardwareSelector.h",
            "vtkHardwareWindow.h",
            "vtkHierarchicalPolyDataMapper.h",
            "vtkImageActor.h",
            "vtkImageMapper.h",
            "vtkImageMapper3D.h",
            "vtkImageProperty.h",
            "vtkImageSlice.h",
            "vtkImageSliceMapper.h",
            "vtkInteractorEventRecorder.h",
            "vtkInteractorObserver.h",
            "vtkInteractorStyle.h",
            "vtkInteractorStyle3D.h",
            "vtkInteractorStyleSwitchBase.h",
            "vtkLODProp3D.h",
            "vtkLabeledContourMapper.h",
            "vtkLight.h",
            "vtkLightActor.h",
            "vtkLightCollection.h",
            "vtkLightKit.h",
            "vtkLogLookupTable.h",
            "vtkLookupTableWithEnabling.h",
            "vtkMapArrayValues.h",
            "vtkMapper.h",
            "vtkMapper2D.h",
            "vtkMapperCollection.h",
            "vtkNoise200x200.h",
            "vtkObserverMediator.h",
            "vtkPicker.h",
            "vtkPickingManager.h",
            "vtkPointGaussianMapper.h",
            "vtkPointPicker.h",
            "vtkPolyDataMapper.h",
            "vtkPolyDataMapper2D.h",
            "vtkProp.h",
            "vtkProp3D.h",
            "vtkProp3DCollection.h",
            "vtkProp3DFollower.h",
            "vtkPropAssembly.h",
            "vtkPropCollection.h",
            "vtkPropPicker.h",
            "vtkProperty.h",
            "vtkProperty2D.h",
            "vtkPythagoreanQuadruples.h",
            "vtkRayCastStructures.h",
            "vtkRenderPass.h",
            "vtkRenderState.h",
            "vtkRenderTimerLog.h",
            "vtkRenderWidget.h",
            "vtkRenderWindow.h",
            "vtkRenderWindowCollection.h",
            "vtkRenderWindowInteractor.h",
            "vtkRenderWindowInteractor3D.h",
            "vtkRenderedAreaPicker.h",
            "vtkRenderer.h",
            "vtkRendererCollection.h",
            "vtkRendererDelegate.h",
            "vtkRendererSource.h",
            "vtkRenderingCoreEnums.h",
            "vtkRenderingCoreModule.h",
            "vtkResizingWindowToImageFilter.h",
            "vtkScenePicker.h",
            "vtkSelectVisiblePoints.h",
            "vtkShaderProperty.h",
            "vtkSkybox.h",
            "vtkStateStorage.h",
            "vtkStereoCompositor.h",
            "vtkStringToImage.h",
            "vtkTDxConfigure.h",
            "vtkTDxInteractorStyle.h",
            "vtkTDxInteractorStyleCamera.h",
            "vtkTDxInteractorStyleSettings.h",
            "vtkTDxMotionEventInfo.h",
            "vtkTextActor.h",
            "vtkTextActor3D.h",
            "vtkTextMapper.h",
            "vtkTextProperty.h",
            "vtkTextPropertyCollection.h",
            "vtkTextRenderer.h",
            "vtkTexture.h",
            "vtkTexturedActor2D.h",
            "vtkTransformCoordinateSystems.h",
            "vtkTransformInterpolator.h",
            "vtkTupleInterpolator.h",
            "vtkUniforms.h",
            "vtkViewDependentErrorMetric.h",
            "vtkViewport.h",
            "vtkVisibilitySort.h",
            "vtkVolume.h",
            "vtkVolumeCollection.h",
            "vtkVolumeProperty.h",
            "vtkWindowLevelLookupTable.h",
            "vtkWindowToImageFilter.h",
            "vtkWorldPointPicker.h",
        ],
        deps = [
            ":vtkCommonColor",
            ":vtkCommonComputationalGeometry",
            ":vtkCommonCore",
            ":vtkCommonDataModel",
            ":vtkCommonExecutionModel",
            ":vtkCommonMath",
            ":vtkCommonSystem",
            ":vtkCommonTransforms",
            ":vtkFiltersCore",
            ":vtkFiltersGeneral",
            ":vtkFiltersGeometry",
            ":vtkFiltersSources",
            ":vtksys",
        ],
    )

    file_content += _vtk_cc_library(
        os_result,
        "vtkRenderingContext2D",
        hdrs = [
            "vtkAbstractContextBufferId.h",
            "vtkAbstractContextItem.h",
            "vtkBlockItem.h",
            "vtkBrush.h",
            "vtkContext2D.h",
            "vtkContext3D.h",
            "vtkContextActor.h",
            "vtkContextClip.h",
            "vtkContextDevice2D.h",
            "vtkContextDevice3D.h",
            "vtkContextItem.h",
            "vtkContextKeyEvent.h",
            "vtkContextMapper2D.h",
            "vtkContextMouseEvent.h",
            "vtkContextScene.h",
            "vtkContextTransform.h",
            "vtkImageItem.h",
            "vtkLabeledContourPolyDataItem.h",
            "vtkMarkerUtilities.h",
            "vtkPen.h",
            "vtkPolyDataItem.h",
            "vtkPropItem.h",
            "vtkRenderingContext2DModule.h",
            "vtkTooltipItem.h",
        ],
        deps = [
            ":vtkCommonCore",
            ":vtkCommonDataModel",
            ":vtkCommonExecutionModel",
            ":vtkCommonMath",
            ":vtkCommonSystem",
            ":vtkCommonTransforms",
            ":vtkFiltersGeneral",
            ":vtkRenderingCore",
            ":vtkRenderingFreeType",
        ],
    )

    file_content += _vtk_cc_library(
        os_result,
        "vtkRenderingFreeType",
        hdrs = [
            "vtkFreeTypeStringToImage.h",
            "vtkFreeTypeTools.h",
            "vtkMathTextFreeTypeTextRenderer.h",
            "vtkMathTextUtilities.h",
            "vtkRenderingFreeTypeModule.h",
            "vtkScaledTextActor.h",
            "vtkTextRendererStringToImage.h",
            "vtkVectorText.h",
        ],
        deps = [
            ":vtkCommonCore",
            ":vtkCommonDataModel",
            ":vtkCommonExecutionModel",
            ":vtkFiltersGeneral",
            ":vtkRenderingCore",
        ],
    )

    vtk_rendering_ui_hdrs = [
        "vtkGenericRenderWindowInteractor.h",
        "vtkRenderingUIModule.h",
    ]
    if not os_result.is_macos:
        vtk_rendering_ui_hdrs.append("vtkXRenderWindowInteractor.h")
    file_content += _vtk_cc_library(
        os_result,
        "vtkRenderingUI",
        hdrs = vtk_rendering_ui_hdrs,
        deps = [
            ":vtkRenderingCore",
        ],
    )

    file_content += _vtk_cc_library(
        os_result,
        "vtkRenderingVtkJS",
        hdrs = [
            "vtkRenderingVtkJSModule.h",
            "vtkVtkJSSceneGraphSerializer.h",
            "vtkVtkJSViewNodeFactory.h",
        ],
        deps = [
            ":vtkCommonCore",
            ":vtkCommonDataModel",
            ":vtkCommonExecutionModel",
            ":vtkRenderingSceneGraph",
            ":vtkRenderingCore",
            ":vtkRenderingOpenGL2",
        ],
    )

    vtk_rendering_opengl2_hdrs = [
        "vtkCameraPass.h",
        "vtkClearRGBPass.h",
        "vtkClearZPass.h",
        "vtkCompositeMapperHelper2.h",
        "vtkCompositePolyDataMapper2.h",
        "vtkCompositePolyDataMapper2Internal.h",
        "vtkDataTransferHelper.h",
        "vtkDefaultPass.h",
        "vtkDepthImageProcessingPass.h",
        "vtkDepthOfFieldPass.h",
        "vtkDepthPeelingPass.h",
        "vtkDualDepthPeelingPass.h",
        "vtkDummyGPUInfoList.h",
        "vtkEDLShading.h",
        "vtkEquirectangularToCubeMapTexture.h",
        "vtkFramebufferPass.h",
        "vtkGaussianBlurPass.h",
        "vtkGenericOpenGLRenderWindow.h",
        "vtkHiddenLineRemovalPass.h",
        "vtkImageProcessingPass.h",
        "vtkLightingMapPass.h",
        "vtkLightsPass.h",
        "vtkOpaquePass.h",
        "vtkOpenGLActor.h",
        "vtkOpenGLBillboardTextActor3D.h",
        "vtkOpenGLBufferObject.h",
        "vtkOpenGLCamera.h",
        "vtkOpenGLCellToVTKCellMap.h",
        "vtkOpenGLError.h",
        "vtkOpenGLFXAAFilter.h",
        "vtkOpenGLFXAAPass.h",
        "vtkOpenGLFluidMapper.h",
        "vtkOpenGLFramebufferObject.h",
        "vtkOpenGLGL2PSHelper.h",
        "vtkOpenGLGlyph3DHelper.h",
        "vtkOpenGLGlyph3DMapper.h",
        "vtkOpenGLHardwareSelector.h",
        "vtkOpenGLHelper.h",
        "vtkOpenGLImageAlgorithmHelper.h",
        "vtkOpenGLImageMapper.h",
        "vtkOpenGLImageSliceMapper.h",
        "vtkOpenGLIndexBufferObject.h",
        "vtkOpenGLInstanceCulling.h",
        "vtkOpenGLLabeledContourMapper.h",
        "vtkOpenGLLight.h",
        "vtkOpenGLPointGaussianMapper.h",
        "vtkOpenGLPolyDataMapper.h",
        "vtkOpenGLPolyDataMapper2D.h",
        "vtkOpenGLProperty.h",
        "vtkOpenGLQuadHelper.h",
        "vtkOpenGLRenderPass.h",
        "vtkOpenGLRenderTimer.h",
        "vtkOpenGLRenderTimerLog.h",
        "vtkOpenGLRenderUtilities.h",
        "vtkOpenGLRenderWindow.h",
        "vtkOpenGLRenderer.h",
        "vtkOpenGLShaderCache.h",
        "vtkOpenGLShaderProperty.h",
        "vtkOpenGLSkybox.h",
        "vtkOpenGLSphereMapper.h",
        "vtkOpenGLState.h",
        "vtkOpenGLStickMapper.h",
        "vtkOpenGLTextActor.h",
        "vtkOpenGLTextActor3D.h",
        "vtkOpenGLTextMapper.h",
        "vtkOpenGLTexture.h",
        "vtkOpenGLUniforms.h",
        "vtkOpenGLVertexArrayObject.h",
        "vtkOpenGLVertexBufferObject.h",
        "vtkOpenGLVertexBufferObjectCache.h",
        "vtkOpenGLVertexBufferObjectGroup.h",
        "vtkOrderIndependentTranslucentPass.h",
        "vtkOutlineGlowPass.h",
        "vtkOverlayPass.h",
        "vtkPBRIrradianceTexture.h",
        "vtkPBRLUTTexture.h",
        "vtkPBRPrefilterTexture.h",
        "vtkPanoramicProjectionPass.h",
        "vtkPixelBufferObject.h",
        "vtkPointFillPass.h",
        "vtkRenderPassCollection.h",
        "vtkRenderStepsPass.h",
        "vtkRenderbuffer.h",
        "vtkRenderingOpenGL2Module.h",
        "vtkRenderingOpenGLConfigure.h",
        "vtkSSAAPass.h",
        "vtkSSAOPass.h",
        "vtkSequencePass.h",
        "vtkShader.h",
        "vtkShaderProgram.h",
        "vtkShadowMapBakerPass.h",
        "vtkShadowMapPass.h",
        "vtkSimpleMotionBlurPass.h",
        "vtkSobelGradientMagnitudePass.h",
        "vtkTextureObject.h",
        "vtkTextureUnitManager.h",
        "vtkToneMappingPass.h",
        "vtkTransformFeedback.h",
        "vtkTranslucentPass.h",
        "vtkValuePass.h",
        "vtkVolumetricPass.h",
    ]
    if not os_result.is_macos:
        vtk_rendering_opengl2_hdrs.append("vtkXOpenGLRenderWindow.h")

    if os_result.is_manylinux:
        vtk_glew_library = ":vtkglew"
        vtk_opengl_linkopts = ["-lX11", "-lXt", "-lGLX"]
    else:
        vtk_glew_library = "@glew"
        vtk_opengl_linkopts = []

    file_content += _vtk_cc_library(
        os_result,
        "vtkRenderingOpenGL2",
        visibility = ["//visibility:public"],
        hdrs = vtk_rendering_opengl2_hdrs,
        deps = [
            ":vtkCommonCore",
            ":vtkCommonDataModel",
            ":vtkCommonExecutionModel",
            ":vtkCommonMath",
            ":vtkCommonSystem",
            ":vtkCommonTransforms",
            ":vtkFiltersGeneral",
            ":vtkRenderingCore",
            ":vtkRenderingUI",
            ":vtksys",
            vtk_glew_library,
            "@opengl",
        ],
        linkopts = vtk_opengl_linkopts,
    )

    file_content += _vtk_cc_library(
        os_result,
        "vtkRenderingSceneGraph",
        hdrs = [
            "vtkActorNode.h",
            "vtkCameraNode.h",
            "vtkLightNode.h",
            "vtkMapperNode.h",
            "vtkPolyDataMapperNode.h",
            "vtkRendererNode.h",
            "vtkRenderingSceneGraphModule.h",
            "vtkViewNode.h",
            "vtkViewNodeFactory.h",
            "vtkVolumeMapperNode.h",
            "vtkVolumeNode.h",
            "vtkWindowNode.h",
        ],
        deps = [
            ":vtkCommonCore",
            ":vtkCommonDataModel",
            ":vtkCommonMath",
            ":vtkRenderingCore",
        ],
    )

    # Glob all files for the data dependency of //tools:drake_visualizer.
    file_content += """
filegroup(
    name = "vtk",
    srcs = glob(["**/*"], exclude=["BUILD.bazel", "WORKSPACE"]),
    visibility = ["//visibility:public"],
)
"""

    if os_result.is_macos:
        # Use Homebrew VTK.
        files_to_install = []
    else:
        # Install all files.
        files_to_install = [":vtk"]

    file_content += """
load("@drake//tools/install:install.bzl", "install_files")
install_files(
    name = "install",
    dest = ".",
    files = {},
    visibility = ["//visibility:public"],
)
""".format(files_to_install)

    repository_ctx.file(
        "BUILD.bazel",
        content = file_content,
        executable = False,
    )

vtk_repository = repository_rule(
    attrs = {
        "mirrors": attr.string_list_dict(),
    },
    implementation = _impl,
)
