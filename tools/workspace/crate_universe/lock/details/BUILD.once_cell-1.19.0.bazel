###############################################################################
# @generated
# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To
# regenerate this file, run the following:
#
#     tools/workspace/crate_universe/upgrade.sh
###############################################################################

load("@rules_license//rules:license.bzl", "license")
load("@rules_license//rules:package_info.bzl", "package_info")
load("@rules_rust//rust:defs.bzl", "rust_library")

package(
    default_package_metadata = [
        ":license",
        ":package_info",
    ],
    default_visibility = ["//visibility:public"],
)

package_info(
    name = "package_info",
    package_name = "once_cell",
    package_url = "https://github.com/matklad/once_cell",
    package_version = "1.19.0",
)

license(
    name = "license",
    license_kinds = [
        "@rules_license//licenses/spdx:Apache-2.0",
        "@rules_license//licenses/spdx:MIT",
    ],
    license_text = "LICENSE-APACHE",
)

rust_library(
    name = "once_cell",
    srcs = glob(
        include = ["**/*.rs"],
        allow_empty = True,
    ),
    compile_data = glob(
        include = ["**"],
        allow_empty = True,
        exclude = [
            "**/* *",
            ".tmp_git_root/**/*",
            "BUILD",
            "BUILD.bazel",
            "WORKSPACE",
            "WORKSPACE.bazel",
        ],
    ),
    crate_features = select({
        "@rules_rust//rust/platform:aarch64-apple-darwin": [
            "alloc",  # aarch64-apple-darwin
            "default",  # aarch64-apple-darwin
            "race",  # aarch64-apple-darwin
            "std",  # aarch64-apple-darwin
        ],
        "@rules_rust//rust/platform:aarch64-pc-windows-msvc": [
            "alloc",  # aarch64-pc-windows-msvc
            "default",  # aarch64-pc-windows-msvc
            "race",  # aarch64-pc-windows-msvc
            "std",  # aarch64-pc-windows-msvc
        ],
        "@rules_rust//rust/platform:aarch64-unknown-linux-gnu": [
            "alloc",  # aarch64-unknown-linux-gnu
            "default",  # aarch64-unknown-linux-gnu
            "race",  # aarch64-unknown-linux-gnu
            "std",  # aarch64-unknown-linux-gnu
        ],
        "@rules_rust//rust/platform:aarch64-unknown-nixos-gnu": [
            "alloc",  # aarch64-unknown-nixos-gnu
            "default",  # aarch64-unknown-nixos-gnu
            "race",  # aarch64-unknown-nixos-gnu
            "std",  # aarch64-unknown-nixos-gnu
        ],
        "@rules_rust//rust/platform:arm-unknown-linux-gnueabi": [
            "alloc",  # arm-unknown-linux-gnueabi
            "default",  # arm-unknown-linux-gnueabi
            "race",  # arm-unknown-linux-gnueabi
            "std",  # arm-unknown-linux-gnueabi
        ],
        "@rules_rust//rust/platform:i686-pc-windows-msvc": [
            "alloc",  # i686-pc-windows-msvc
            "default",  # i686-pc-windows-msvc
            "race",  # i686-pc-windows-msvc
            "std",  # i686-pc-windows-msvc
        ],
        "@rules_rust//rust/platform:i686-unknown-linux-gnu": [
            "alloc",  # i686-unknown-linux-gnu
            "default",  # i686-unknown-linux-gnu
            "race",  # i686-unknown-linux-gnu
            "std",  # i686-unknown-linux-gnu
        ],
        "@rules_rust//rust/platform:powerpc-unknown-linux-gnu": [
            "alloc",  # powerpc-unknown-linux-gnu
            "default",  # powerpc-unknown-linux-gnu
            "race",  # powerpc-unknown-linux-gnu
            "std",  # powerpc-unknown-linux-gnu
        ],
        "@rules_rust//rust/platform:s390x-unknown-linux-gnu": [
            "alloc",  # s390x-unknown-linux-gnu
            "default",  # s390x-unknown-linux-gnu
            "race",  # s390x-unknown-linux-gnu
            "std",  # s390x-unknown-linux-gnu
        ],
        "@rules_rust//rust/platform:x86_64-apple-darwin": [
            "alloc",  # x86_64-apple-darwin
            "default",  # x86_64-apple-darwin
            "race",  # x86_64-apple-darwin
            "std",  # x86_64-apple-darwin
        ],
        "@rules_rust//rust/platform:x86_64-pc-windows-msvc": [
            "alloc",  # x86_64-pc-windows-msvc
            "default",  # x86_64-pc-windows-msvc
            "race",  # x86_64-pc-windows-msvc
            "std",  # x86_64-pc-windows-msvc
        ],
        "@rules_rust//rust/platform:x86_64-unknown-freebsd": [
            "alloc",  # x86_64-unknown-freebsd
            "default",  # x86_64-unknown-freebsd
            "race",  # x86_64-unknown-freebsd
            "std",  # x86_64-unknown-freebsd
        ],
        "@rules_rust//rust/platform:x86_64-unknown-linux-gnu": [
            "alloc",  # x86_64-unknown-linux-gnu
            "default",  # x86_64-unknown-linux-gnu
            "race",  # x86_64-unknown-linux-gnu
            "std",  # x86_64-unknown-linux-gnu
        ],
        "@rules_rust//rust/platform:x86_64-unknown-nixos-gnu": [
            "alloc",  # x86_64-unknown-nixos-gnu
            "default",  # x86_64-unknown-nixos-gnu
            "race",  # x86_64-unknown-nixos-gnu
            "std",  # x86_64-unknown-nixos-gnu
        ],
        "//conditions:default": [],
    }),
    crate_root = "src/lib.rs",
    edition = "2021",
    rustc_flags = [
        "--cap-lints=allow",
    ],
    tags = [
        "cargo-bazel",
        "crate-name=once_cell",
        "manual",
        "noclippy",
        "norustfmt",
    ],
    target_compatible_with = select({
        "@rules_rust//rust/platform:aarch64-apple-darwin": [],
        "@rules_rust//rust/platform:aarch64-apple-ios": [],
        "@rules_rust//rust/platform:aarch64-apple-ios-sim": [],
        "@rules_rust//rust/platform:aarch64-linux-android": [],
        "@rules_rust//rust/platform:aarch64-pc-windows-msvc": [],
        "@rules_rust//rust/platform:aarch64-unknown-fuchsia": [],
        "@rules_rust//rust/platform:aarch64-unknown-linux-gnu": [],
        "@rules_rust//rust/platform:aarch64-unknown-nixos-gnu": [],
        "@rules_rust//rust/platform:aarch64-unknown-nto-qnx710": [],
        "@rules_rust//rust/platform:arm-unknown-linux-gnueabi": [],
        "@rules_rust//rust/platform:armv7-linux-androideabi": [],
        "@rules_rust//rust/platform:armv7-unknown-linux-gnueabi": [],
        "@rules_rust//rust/platform:i686-apple-darwin": [],
        "@rules_rust//rust/platform:i686-linux-android": [],
        "@rules_rust//rust/platform:i686-pc-windows-msvc": [],
        "@rules_rust//rust/platform:i686-unknown-freebsd": [],
        "@rules_rust//rust/platform:i686-unknown-linux-gnu": [],
        "@rules_rust//rust/platform:powerpc-unknown-linux-gnu": [],
        "@rules_rust//rust/platform:riscv32imc-unknown-none-elf": [],
        "@rules_rust//rust/platform:riscv64gc-unknown-none-elf": [],
        "@rules_rust//rust/platform:s390x-unknown-linux-gnu": [],
        "@rules_rust//rust/platform:thumbv7em-none-eabi": [],
        "@rules_rust//rust/platform:thumbv8m.main-none-eabi": [],
        "@rules_rust//rust/platform:wasm32-unknown-unknown": [],
        "@rules_rust//rust/platform:wasm32-wasip1": [],
        "@rules_rust//rust/platform:x86_64-apple-darwin": [],
        "@rules_rust//rust/platform:x86_64-apple-ios": [],
        "@rules_rust//rust/platform:x86_64-linux-android": [],
        "@rules_rust//rust/platform:x86_64-pc-windows-msvc": [],
        "@rules_rust//rust/platform:x86_64-unknown-freebsd": [],
        "@rules_rust//rust/platform:x86_64-unknown-fuchsia": [],
        "@rules_rust//rust/platform:x86_64-unknown-linux-gnu": [],
        "@rules_rust//rust/platform:x86_64-unknown-nixos-gnu": [],
        "@rules_rust//rust/platform:x86_64-unknown-none": [],
        "//conditions:default": ["@platforms//:incompatible"],
    }),
    version = "1.19.0",
)
