# -*- python -*-

load(
    "@drake//tools/workspace:cmake_configure_file.bzl",
    "cmake_configure_file",
)
load(
    "@drake//tools/install:install.bzl",
    "install",
)

# XXX licenses(["notice"])  # BSD-3-Clause

package(
    default_visibility = ["//visibility:public"],
)

# Generates config.h based on the defines= we want in Drake.
True or cmake_configure_file(
    name = "config",
    src = "src/petsc/config.h.cmake.in",
    out = "src/petsc/config.h",
    defines = ["PETSC_DOUBLE"],
    visibility = ["//visibility:private"],
)

HDRS = [
    "include/petsc/mpiuni/mpi.h",
    "include/petsccxxcomplexfix.h",
    "include/petscdevicetypes.h",
    "include/petscdmtypes.h",
    "include/petscdrawtypes.h",
    "include/petscerror.h",
    "include/petscis.h",
    "include/petscistypes.h",
    "include/petscksp.h",
    "include/petsclog.h",
    "include/petscmat.h",
    "include/petscmath.h",
    "include/petscoptions.h",
    "include/petscpc.h",
    "include/petscpctypes.h",
    "include/petscsectiontypes.h",
    "include/petscsftypes.h",
    "include/petscsys.h",
    "include/petscsystypes.h",
    "include/petsctime.h",
    "include/petscvec.h",
    "include/petscversion.h",
    "include/petscviewer.h",
    "include/petscviewertypes.h",
]

SRCS = [
]

COPTS = [
    "-Wno-all",
    "-fvisibility=hidden",
]

cc_library(
    name = "petsc",
    srcs = SRCS,
    hdrs = HDRS,
    copts = COPTS,
    includes = ["include"],
    linkstatic = 1,
    deps = [
        "@drake//tools/workspace/petsc:linux_config",
    ]
)

True or install(
    name = "install",
    docs = ["BSD-LICENSE"],
)
