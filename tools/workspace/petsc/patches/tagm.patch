--- src/sys/objects/tagm.c
+++ src/sys/objects/tagm.c
@@ -66,14 +66,14 @@ PetscErrorCode  PetscCommGetNewTag(MPI_Comm comm,PetscMPIInt *tag)
   ierr = MPI_Comm_get_attr(comm,Petsc_Counter_keyval,&counter,&flg);CHKERRMPI(ierr);
   if (!flg) SETERRQ(PETSC_COMM_SELF,PETSC_ERR_ARG_CORRUPT,"Bad MPI communicator supplied; must be a PETSc communicator");
 
-  if (counter->tag < 1) {
-    ierr = PetscInfo1(NULL,"Out of tags for object, starting to recycle. Comm reference count %d\n",counter->refcount);CHKERRQ(ierr);
+  if (atomic_load(&counter->atomic_tag) < 1) {
+    ierr = PetscInfo1(NULL,"Out of tags for object, starting to recycle. Comm reference count %d\n",atomic_load(&counter->atomic_refcount));CHKERRQ(ierr);
     ierr = MPI_Comm_get_attr(MPI_COMM_WORLD,MPI_TAG_UB,&maxval,&flg);CHKERRMPI(ierr);
     if (!flg) SETERRQ(PETSC_COMM_SELF,PETSC_ERR_LIB,"MPI error: MPI_Comm_get_attr() is not returning a MPI_TAG_UB");
-    counter->tag = *maxval - 128; /* hope that any still active tags were issued right at the beginning of the run */
+    atomic_store(&counter->atomic_tag, *maxval - 128); /* hope that any still active tags were issued right at the beginning of the run */
   }
 
-  *tag = counter->tag--;
+  *tag = atomic_fetch_sub(&counter->atomic_tag,1);
   if (PetscDefined(USE_DEBUG)) {
     /*
      Hanging here means that some processes have called PetscCommGetNewTag() and others have not.
@@ -126,7 +126,7 @@ PetscErrorCode  PetscCommDuplicate(MPI_Comm comm_in,MPI_Comm *comm_out,PetscMPII
       ierr = MPI_Comm_get_attr(MPI_COMM_WORLD,MPI_TAG_UB,&maxval,&flg);CHKERRMPI(ierr);
       if (!flg) SETERRQ(PETSC_COMM_SELF,PETSC_ERR_LIB,"MPI error: MPI_Comm_get_attr() is not returning a MPI_TAG_UB");
       ierr = PetscNew(&counter);CHKERRQ(ierr); /* all fields of counter are zero'ed */
-      counter->tag = *maxval;
+      atomic_store(&counter->atomic_tag, *maxval);
       ierr = MPI_Comm_set_attr(*comm_out,Petsc_Counter_keyval,counter);CHKERRMPI(ierr);
       ierr = PetscInfo3(NULL,"Duplicating a communicator %ld %ld max tags = %d\n",(long)comm_in,(long)*comm_out,*maxval);CHKERRQ(ierr);
 
@@ -153,16 +153,16 @@ PetscErrorCode  PetscCommDuplicate(MPI_Comm comm_in,MPI_Comm *comm_out,PetscMPII
     ierr = MPI_Barrier(comm_in);CHKERRMPI(ierr);
   }
 
-  if (counter->tag < 1) {
-    ierr = PetscInfo1(NULL,"Out of tags for object, starting to recycle. Comm reference count %d\n",counter->refcount);CHKERRQ(ierr);
+  if (atomic_load(&counter->atomic_tag) < 1) {
+    ierr = PetscInfo1(NULL,"Out of tags for object, starting to recycle. Comm reference count %d\n",atomic_load(&counter->atomic_refcount));CHKERRQ(ierr);
     ierr = MPI_Comm_get_attr(MPI_COMM_WORLD,MPI_TAG_UB,&maxval,&flg);CHKERRMPI(ierr);
     if (!flg) SETERRQ(PETSC_COMM_SELF,PETSC_ERR_LIB,"MPI error: MPI_Comm_get_attr() is not returning a MPI_TAG_UB");
-    counter->tag = *maxval - 128; /* hope that any still active tags were issued right at the beginning of the run */
+    atomic_store(&counter->atomic_tag,  *maxval - 128); /* hope that any still active tags were issued right at the beginning of the run */
   }
 
-  if (first_tag) *first_tag = counter->tag--;
+  if (first_tag) *first_tag = atomic_fetch_sub(&counter->atomic_tag,1);
 
-  counter->refcount++; /* number of references to this comm */
+  atomic_fetch_add(&counter->atomic_refcount,1); /* number of references to this comm */
   ierr = PetscSpinlockUnlock(&PetscCommSpinLock);CHKERRQ(ierr);
   PetscFunctionReturn(0);
 }
@@ -199,9 +199,7 @@ PetscErrorCode  PetscCommDestroy(MPI_Comm *comm)
     if (!flg) SETERRQ(PETSC_COMM_SELF,PETSC_ERR_ARG_CORRUPT,"Inner MPI_Comm does not have expected tag/name counter, problem with corrupted memory");
   }
 
-  counter->refcount--;
-
-  if (!counter->refcount) {
+  if (!atomic_fetch_sub(&counter->atomic_refcount,1)) {
     /* if MPI_Comm has outer comm then remove reference to inner MPI_Comm from outer MPI_Comm */
     ierr = MPI_Comm_get_attr(icomm,Petsc_OuterComm_keyval,&ucomm,&flg);CHKERRMPI(ierr);
     if (flg) {
