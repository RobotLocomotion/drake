--- src/mat/impls/sbaij/seq/sbaijfact2.c
+++ src/mat/impls/sbaij/seq/sbaijfact2.c
@@ -1263,16 +1263,15 @@ PetscErrorCode MatForwardSolve_SeqSBAIJ_3_NaturalOrdering(const PetscInt *ai,con
     x0 = xp[0]; x1 = xp[1]; x2 = xp[2]; /* Dk*xk = k-th block of x */
     nz = ai[k+1] - ai[k];
     vj = aj + ai[k];
-    xp = x + (*vj)*3;
     PetscPrefetchBlock(vj+nz,nz,0,PETSC_PREFETCH_HINT_NTA);    /* Indices for the next row (assumes same size as this one) */
     PetscPrefetchBlock(v+9*nz,9*nz,0,PETSC_PREFETCH_HINT_NTA); /* Entries for the next row */
     while (nz--) {
+      xp = x + (*vj)*3;
       /* x(:) += U(k,:)^T*(Dk*xk) */
       xp[0] += v[0]*x0 + v[1]*x1 + v[2]*x2;
       xp[1] += v[3]*x0 + v[4]*x1 + v[5]*x2;
       xp[2] += v[6]*x0 + v[7]*x1 + v[8]*x2;
       vj++;
-      xp = x + (*vj)*3;
       v += 9;
     }
     /* xk = inv(Dk)*(Dk*xk) */
@@ -1299,16 +1298,16 @@ PetscErrorCode MatBackwardSolve_SeqSBAIJ_3_NaturalOrdering(const PetscInt *ai,co
     x0 = xp[0]; x1 = xp[1]; x2 = xp[2];  /* xk */
     nz = ai[k+1] - ai[k];
     vj = aj + ai[k];
-    xp = x + (*vj)*3;
     PetscPrefetchBlock(vj-nz,nz,0,PETSC_PREFETCH_HINT_NTA);    /* Indices for the next row (assumes same size as this one) */
     PetscPrefetchBlock(v-9*nz,9*nz,0,PETSC_PREFETCH_HINT_NTA); /* Entries for the next row */
     while (nz--) {
+      xp = x + (*vj)*3;
       /* xk += U(k,:)*x(:) */
       x0 += v[0]*xp[0] + v[3]*xp[1] + v[6]*xp[2];
       x1 += v[1]*xp[0] + v[4]*xp[1] + v[7]*xp[2];
       x2 += v[2]*xp[0] + v[5]*xp[1] + v[8]*xp[2];
       vj++;
-      v += 9; xp = x + (*vj)*3;
+      v += 9;
     }
     xp    = x + k*3;
     xp[0] = x0; xp[1] = x1; xp[2] = x2;
