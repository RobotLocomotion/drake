[vtk] GLTF loader doesn't error on extentionsUsed images

When images are only referenced by extensionsUsed that we're skipping
over anyway, we should not report false positive error messages. The
warning about the skipped extensionsUsed is sufficient on its own.

Also be sure to forward warnings and errors from the loader that's
nested inside the importer back to the importer proper.

--- IO/Geometry/vtkGLTFDocumentLoader.cxx
+++ IO/Geometry/vtkGLTFDocumentLoader.cxx
@@ -819,6 +819,13 @@ bool vtkGLTFDocumentLoader::LoadImageData()
     {
       reader = vtkSmartPointer<vtkPNGReader>::New();
     }
+    else
+    {
+      // Leave the image.ImageData as nullptr and skip this.  We must not report
+      // any error here: it is perfectly valid to declare images other than jpeg
+      // or png, so long as they are never referenced by the scene.
+      continue;
+    }
 
     // If image is defined via bufferview index
     if (image.BufferView >= 0 &&

--- IO/Geometry/vtkGLTFDocumentLoaderInternals.cxx
+++ IO/Geometry/vtkGLTFDocumentLoaderInternals.cxx
@@ -616,13 +616,7 @@ bool vtkGLTFDocumentLoaderInternals::LoadImage(
   {
     image.MimeType.clear();
   }
-  else if (image.MimeType != "image/jpeg" && image.MimeType != "image/png")
-  {
-    vtkErrorWithObjectMacro(this->Self,
-      "Invalid image.mimeType value. Must be either image/jpeg or image/png for image "
-        << image.Name);
-    return false;
-  }
+
   // Read the bufferView index value, if it exists.
   image.BufferView = -1;
   if (vtkGLTFUtils::GetIntValue(root, "bufferView", image.BufferView))

--- IO/Geometry/vtkGLTFReader.cxx
+++ IO/Geometry/vtkGLTFReader.cxx
@@ -647,6 +647,12 @@ void vtkGLTFReader::StoreTextureData()
     if (loaderTexture.Source >= 0 && loaderTexture.Source < nbTextures)
     {
       readerTexture.Image = model->Images[loaderTexture.Source].ImageData;
+      if (readerTexture.Image == nullptr)
+      {
+        vtkErrorWithObjectMacro(this,
+          "A required image had an unsupported mimeType.");
+        continue;
+      }
     }
     else
     {

--- IO/Import/vtkGLTFImporter.cxx
+++ IO/Import/vtkGLTFImporter.cxx
@@ -381,6 +381,8 @@ int vtkGLTFImporter::ImportBegin()
   vtkNew<vtkEventForwarderCommand> forwarder;
   forwarder->SetTarget(this);
   this->Loader->AddObserver(vtkCommand::ProgressEvent, forwarder);
+  this->Loader->AddObserver(vtkCommand::WarningEvent, forwarder);
+  this->Loader->AddObserver(vtkCommand::ErrorEvent, forwarder);
 
   // Check extension
   std::vector<char> glbBuffer;
