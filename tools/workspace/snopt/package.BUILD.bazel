# -*- python -*-

config_setting(
    name = "debug",
    values = {"compilation_mode": "dbg"},
)

# Drake's binary releases are allowed to redistribute SNOPT only if SNOPT is
# not redistributed as a stand-alone package -- users must not use the SNOPT
# code on its own, but rather only through Drake's interfaces.  To that end,
# we (1) always link SNOPT statically, (2) use hidden symbol visibility, and
# (3) strip its symbols in release mode.
cc_library(
    name = "snopt_c",
    srcs = glob(
        ["csrc/*.c"],
        exclude = ["csrc/dummy.c"],
    ),
    hdrs = glob(["csrc/*.hh"]),
    copts = [
        "-w",
        # Hide symbols per note (2) above.
        "-fvisibility=hidden",
    ],
    linkopts = [
        "-lm",
    ] + select({
        ":debug": [],
        # Strip symbols in release mode per note (3) above.
        "//conditions:default": ["-s"],
    }),
    # Link statically per note (1) above.
    linkstatic = 1,
    # By convention, SNOPT header #includes are not fully qualified.
    strip_include_prefix = "csrc",
    visibility = ["//visibility:public"],
    deps = [":libf2c"],
    # Always link the entirety of SNOPT.
    alwayslink = 1,
)

# Different revisions of SNOPT have this folder in different places.
# TODO(jwnimmer-tri) Use a different value here, depending on what's needed for
# a specific version of snopt.
_LIBF2C = "libf2c/"

cc_binary(
    name = "arithchk",
    srcs = [_LIBF2C + "arithchk.c"],
    copts = [
        "-w",
        "-DNO_FPINIT",
    ],
    linkopts = ["-lm"],
)

genrule(
    name = "arith",
    srcs = [],
    outs = [_LIBF2C + "arith.h"],
    cmd = "$(location :arithchk) > $(@)",
    tools = [":arithchk"],
)

genrule(
    name = "f2c",
    srcs = [_LIBF2C + "f2c.h0"],
    outs = [_LIBF2C + "f2c.h"],
    cmd = "cp $< $(@)",
)

genrule(
    name = "sysdep1",
    srcs = [_LIBF2C + "sysdep1.h0"],
    outs = [_LIBF2C + "sysdep1.h"],
    cmd = "cp $< $(@)",
)

genrule(
    name = "signal1",
    srcs = [_LIBF2C + "signal1.h0"],
    outs = [_LIBF2C + "signal1.h"],
    cmd = "cp $< $(@)",
)

genrule(
    name = "math",
    srcs = [_LIBF2C + "math.h0"],
    outs = [_LIBF2C + "f2math.h"],
    cmd = "cp $< $(@)",
)

filegroup(
    name = "generated_headers",
    srcs = [
        _LIBF2C + "arith.h",
        _LIBF2C + "f2c.h",
        _LIBF2C + "f2math.h",
        _LIBF2C + "signal1.h",
        _LIBF2C + "sysdep1.h",
    ],
)

filegroup(
    name = "generated_public_headers",
    srcs = [_LIBF2C + "f2c.h"],
)

# Replace main.c, which causes tests that link to SNOPT to erroneously pass.
genrule(
    name = "main_",
    outs = [_LIBF2C + "main_.c"],
    cmd = "echo \"int xargc; char **xargv;\" > $(@)",
)

cc_library(
    name = "libf2c",
    srcs = [":main_"] + glob(
        [
            _LIBF2C + "*.c",
            _LIBF2C + "*.h",
        ],
        # Exclude optional sources and generator tools from the glob.
        exclude = [
            _LIBF2C + "main.c",
            _LIBF2C + "pow_qq.c",
            _LIBF2C + "qbitbits.c",
            _LIBF2C + "qbitshft.c",
            _LIBF2C + "*64*.c",
            _LIBF2C + "arithchk.c",
        ],
    ),
    hdrs = [":generated_headers"],
    copts = [
        "-DSkip_f2c_Undefs",
        "-w",
    ],
    # Link statically so that Fortran MAIN__ resolution works on gcc.
    linkstatic = 1,
    # By convention, SNOPT header #includes are not fully qualified.
    strip_include_prefix = _LIBF2C,
    visibility = ["//visibility:public"],
)
