# -*- bazel -*-

load(
    "@drake//tools/workspace:cmake_configure_file.bzl",
    "cmake_configure_file",
)
load(
    "@drake//tools/workspace:generate_export_header.bzl",
    "generate_export_header",
)

licenses(["notice"])  # Apache-2.0

package(
    # TODO(jwnimmer-tri) At the time when libdrake depends on libcmaes, we
    # will need to change this to public, add the rules to install the
    # license file(s), and add it to the drake/tools/wheel build.
    default_visibility = ["@//tools/workspace/libcmaes/dev:__pkg__"],
)

cmake_configure_file(
    name = "config",
    src = "include/libcmaes/libcmaes_config.h.cmake.in",
    out = "include/libcmaes/libcmaes_config.h",
    defines = [
        "HAVE_INTTYPES_H",
        "HAVE_MEMORY_H",
        "HAVE_STDINT_H",
        "HAVE_STDLIB_H",
        "HAVE_STRINGS_H",
        "HAVE_STRING_H",
        "HAVE_UNISTD_H",
        "LIBCMAES_VERSION_STRING=0.0.0",
    ],
    visibility = ["//visibility:private"],
)

generate_export_header(
    out = "include/libcmaes/cmaes_export.h",
    lib = "cmaes",
    static_define = "LIBCMAES_STATIC_DEFINE",
    visibility = ["//visibility:private"],
)

cc_library(
    name = "libcmaes",
    srcs = glob([
        "src/*.cc",
    ], exclude = [
        "src/surrogatestrategy.cc",
    ]),
    hdrs = [
        ":include/libcmaes/libcmaes_config.h",
        ":include/libcmaes/cmaes_export.h",
    ] + glob([
        "include/libcmaes/*.h",
    ], exclude = [
        "surrcmaes.h",
        "surrogatestrategy.h",
    ]),
    copts = [
        "-fno-openmp",
        # Ignore OpenMP-related warnings.
        "-Wno-unknown-pragmas",
    ],
    defines = ["LIBCMAES_STATIC_DEFINE"],
    deps = ["@eigen"],
    includes = ["include"],
    linkstatic = True,
)
