[openusd_internal] Polyfill boost::bad_get

Drake doesn't support Boost, so we need some other exception type.
We'll just choose something arbitrary from the standard library.

This use of Boost was proposed for removal upstream, but never merged.
It looks like maybe a larger rewrite is on the way which will make
this patch moot:

 https://github.com/PixarAnimationStudios/OpenUSD/pull/3027

As such, we do not plan to upstream this patch.

--- pxr/usd/sdf/parserHelpers.h
+++ pxr/usd/sdf/parserHelpers.h
@@ -31,7 +31,10 @@
 #include "pxr/base/gf/numericCast.h"
 #include "pxr/base/vt/value.h"
 
-#include <boost/variant/get.hpp>
+#include <stdexcept>
+namespace boost {
+  using bad_get = std::bad_cast;
+}
 
 #include <functional>
 #include <limits>
--- pxr/usd/sdf/textFileFormat.yy
+++ pxr/usd/sdf/textFileFormat.yy
@@ -53,9 +53,6 @@
 #include "pxr/base/gf/matrix4d.h"
 #include "pxr/base/tf/mallocTag.h"
 
-#include <boost/optional.hpp>
-#include <boost/variant.hpp>
-
 #include <functional>
 #include <sstream>
 #include <string>
@@ -68,7 +65,6 @@
 PXR_NAMESPACE_USING_DIRECTIVE
 
 using Sdf_ParserHelpers::Value;
-using boost::get;
 
 //--------------------------------------------------------------------
 // Helper macros/functions for handling errors
--- pxr/usd/sdf/textFileFormat.tab.cpp
+++ pxr/usd/sdf/textFileFormat.tab.cpp
@@ -131,9 +131,6 @@
 #include "pxr/base/gf/matrix4d.h"
 #include "pxr/base/tf/mallocTag.h"
 
-#include <boost/optional.hpp>
-#include <boost/variant.hpp>
-
 #include <functional>
 #include <sstream>
 #include <string>
@@ -146,7 +143,6 @@
 PXR_NAMESPACE_USING_DIRECTIVE
 
 using Sdf_ParserHelpers::Value;
-using boost::get;
 
 //--------------------------------------------------------------------
 // Helper macros/functions for handling errors
