[openusd_internal] Placate Clang 14 in C++20 mode

Apparently the overloading rules for operator== in C++20 when called
on two `const std::optional<SdfLayerHandle>` objects lead to ambiguous
overloads that Clang flags as a problem (but GCC doesn't notice).

We can avoid that problem by slightly re-spelling the code. It's not
clear if this is the best or ultimate fix (or something that we should
upstream), but it seems to make Clang happy for now.


diff --git pxr/usd/usd/stage.cpp pxr/usd/usd/stage.cpp
index 6b06547b5..c6fcf17e5 100644
--- pxr/usd/usd/stage.cpp
+++ pxr/usd/usd/stage.cpp
@@ -1161,7 +1161,9 @@ public:
         // the session layer or it matches, and we either don't care about the
         // path resolverContext or it matches.
         return _rootLayer == req->_rootLayer &&
-            (!_sessionLayer || (_sessionLayer == req->_sessionLayer)) &&
+            (!_sessionLayer ||
+             (req->_sessionLayer &&
+              *_sessionLayer == *req->_sessionLayer)) &&
             (!_pathResolverContext || (_pathResolverContext ==
                                        req->_pathResolverContext));
     }
