# This file is automatically generated by upgrade.py.

filegroup(
    name = "rustc",
    srcs = ["bin/rustc.exe"],
    visibility = ["//visibility:public"],
)

filegroup(
    name = "rustc_lib",
    srcs = glob(
        [
            "bin/*.dll",
            "lib/*.dll*",
            "lib/rustlib/aarch64-pc-windows-msvc/codegen-backends/*.dll",
            "lib/rustlib/aarch64-pc-windows-msvc/bin/rust-lld.exe",
            "lib/rustlib/aarch64-pc-windows-msvc/lib/*.dll*",
        ],
        allow_empty = True,
    ),
    visibility = ["//visibility:public"],
)

filegroup(
    name = "rustdoc",
    srcs = ["bin/rustdoc.exe"],
    visibility = ["//visibility:public"],
)

filegroup(
    name = "clippy_driver_bin",
    srcs = ["bin/clippy-driver.exe"],
    visibility = ["//visibility:public"],
)
filegroup(
    name = "cargo_clippy_bin",
    srcs = ["bin/cargo-clippy.exe"],
    visibility = ["//visibility:public"],
)

filegroup(
    name = "cargo",
    srcs = ["bin/cargo.exe"],
    visibility = ["//visibility:public"],
)
filegroup(
    name = "rustfmt_bin",
    srcs = ["bin/rustfmt.exe"],
    visibility = ["//visibility:public"],
)

sh_binary(
    name = "rustfmt",
    srcs = [":rustfmt_bin"],
    visibility = ["//visibility:public"],
)

filegroup(
    name = "llvm_cov_bin",
    srcs = ["lib/rustlib/aarch64-pc-windows-msvc/bin/llvm-cov.exe"],
    visibility = ["//visibility:public"],
)

filegroup(
    name = "llvm_profdata_bin",
    srcs = ["lib/rustlib/aarch64-pc-windows-msvc/bin/llvm-profdata.exe"],
    visibility = ["//visibility:public"],
)

load("@rules_rust//rust:toolchain.bzl", "rust_stdlib_filegroup")

rust_stdlib_filegroup(
    name = "rust_std-aarch64-pc-windows-msvc",
    srcs = glob(
        [
            "lib/rustlib/aarch64-pc-windows-msvc/lib/*.rlib",
            "lib/rustlib/aarch64-pc-windows-msvc/lib/*.dll*",
            "lib/rustlib/aarch64-pc-windows-msvc/lib/*.lib",
            "lib/rustlib/aarch64-pc-windows-msvc/lib/self-contained/**",
        ],
        # Some patterns (e.g. `lib/*.a`) don't match anything, see https://github.com/bazelbuild/rules_rust/pull/245
        allow_empty = True,
    ),
    visibility = ["//visibility:public"],
)

# For legacy support
alias(
    name = "rust_lib-aarch64-pc-windows-msvc",
    actual = "rust_std-aarch64-pc-windows-msvc",
    visibility = ["//visibility:public"],
)

load("@rules_rust//rust:toolchain.bzl", "rust_toolchain")

rust_toolchain(
    name = "rust_toolchain",
    rust_doc = "//:rustdoc",
    rust_std = "//:rust_std-aarch64-pc-windows-msvc",
    rustc = "//:rustc",
    rustfmt = "//:rustfmt_bin",
    cargo = "//:cargo",
    clippy_driver = "//:clippy_driver_bin",
    cargo_clippy = "//:cargo_clippy_bin",
    llvm_cov = "//:llvm_cov_bin",
    llvm_profdata = "//:llvm_profdata_bin",
    rustc_lib = "//:rustc_lib",
    allocator_library = "@rules_rust//ffi/cc/allocator_library",
    global_allocator_library = "@rules_rust//ffi/cc/global_allocator_library",
    binary_ext = ".exe",
    staticlib_ext = ".lib",
    dylib_ext = ".dll",
    stdlib_linkflags = ["advapi32.lib", "ws2_32.lib", "userenv.lib", "Bcrypt.lib"],
    default_edition = "",
    exec_triple = "aarch64-pc-windows-msvc",
    target_triple = "aarch64-pc-windows-msvc",
    visibility = ["//visibility:public"],
    extra_rustc_flags = [],
    extra_exec_rustc_flags = [],
    opt_level = None,
)
