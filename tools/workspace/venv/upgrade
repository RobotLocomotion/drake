#!/bin/bash
#
# Drake script to upgrade our requirements lockfile.
# - Users should make edits to requirements.in, and then
# - run this script to compile requirements.in to requirements.txt, and then
# - run ./sync to upgrade the venv to match the new requirements.txt.

set -eux -o pipefail

generate_requirements() {
    out_name="$1"
    shift 1

    cd "$workspace_root"
    cat "$@" > "$tmpdir/requirements.in"

    # Operate in temporary directory.
    cd "$tmpdir"

    # Remove any existing lockfile to avoid it being used as a baseline.
    rm -f requirements.txt

    # Compile requirements.in to its locked form of requirements.txt.
    "$venv_root"/venv.jazzband/bin/pip-compile requirements.in --verbose

    # Edit the comment atop the file that explains how to upgrade.
    echo '# This file is generated by' \
         'drake/tools/workspace/venv/upgrade;' \
         'do not edit' > requirements.tmp
    tail -n+6 requirements.txt >> requirements.tmp
    mv requirements.tmp "$workspace_root/$out_name"
}

# Chdir to the Drake root.
cd "$(dirname $0)/../../.."
workspace_root="$(pwd)"
venv_root="$workspace_root/bazel-venv"

# Create temporary directory.
tmpdir="$(mktemp -d)"
tmpdir="$(cd "$tmpdir" && pwd)"
trap 'rm -rf "$tmpdir"' EXIT

generate_requirements \
    requirements-without-test.txt \
    requirements-base.in

generate_requirements \
    requirements-with-test.txt \
    requirements-base.in \
    requirements-test.in
