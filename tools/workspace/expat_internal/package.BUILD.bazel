# -*- bazel -*-

load("@drake//tools/skylark:cc.bzl", "cc_library")
load(
    "@drake//tools/workspace:cmake_configure_file.bzl",
    "cmake_configure_file",
)
load("@drake//tools/install:install.bzl", "install")
load(
    "@drake//tools/skylark:drake_cc.bzl",
    "cc_linkonly_library",
)

licenses(["notice"])  # MIT

package(default_visibility = ["//visibility:private"])

# Group the headers exported by this library.
cc_library(
    name = "hdrs",
    hdrs = ["expat/lib/expat.h"],
)

# Compile the code (using both its exported headers and its private headers).
cc_library(
    name = "compiled",
    srcs = glob(
        ["expat/lib/*.c"],
        allow_empty = False,
    ),
    hdrs = glob(["expat/lib/*.h"], allow_empty = False) + [
        "expat/lib/xmltok_impl.c",
        "expat/lib/xmltok_ns.c",
    ],
    copts = [
        "-Wno-all",
        "-fvisibility=hidden",
    ],
    defines = [
        "XML_GE=1",
    ],
    includes = [
        "expat/lib",
    ],
    linkstatic = True,
    deps = [":hdrs"],
)

# Strip the private headers out; we just want the object code.
cc_linkonly_library(
    name = "archive",
    deps = [":compiled"],
)

# Combine the public headers with the object code.
# This does not provide the private headers.
cc_library(
    name = "expat",
    linkstatic = True,
    deps = [
        ":archive",
        ":hdrs",
    ],
    visibility = ["//visibility:public"],
)

install(
    name = "install",
    docs = ["COPYING"],
    visibility = ["//visibility:public"],
)
