Address discrepancy between cpplint upstream and Google styleguide.

Google styleguide allows for certain simple if statements to fit on
one line with spaces between the curly braces. While this is technically
a violation of the general styleguide, Google permits this exception
"for historical reasons." Nevertheless, cpplint does not allow this.

The fix basically adds a "made-up" error category and diverts the
expressions that trigger the aforementioned cases out of the more
general "whitespace/newline" category. The "made-up" name is then
added to the "_DEFAULT_FILTERS" list, effectively suppressing the
error violations in these specific cases.

Reason for not upstreaming this patch: patch intended for Drake-specific
error suppression.

--- cpplint.py
+++ cpplint.py
@@ -356,6 +356,7 @@ _ERROR_CATEGORIES = [
     "whitespace/indent_namespace",
     "whitespace/line_length",
     "whitespace/newline",
+    "whitespace/newline_controlled_statement",
     "whitespace/operators",
     "whitespace/parens",
     "whitespace/semicolon",
@@ -411,6 +412,7 @@ _OTHER_NOLINT_CATEGORY_PREFIXES = [
 _DEFAULT_FILTERS = [
     "-build/include_alpha",
     "-readability/fn_size",
+    "-whitespace/newline_controlled_statement",
 ]

 # The default list of categories suppressed for C (not C++) files.
@@ -4700,7 +4702,7 @@ def CheckBraces(filename, clean_lines, linenum, error):
             error(
                 filename,
                 linenum,
-                "whitespace/newline",
+                "whitespace/newline_controlled_statement",
                 4,
                 "An else should appear on the same line as the preceding }",
             )
@@ -4756,7 +4758,7 @@ def CheckBraces(filename, clean_lines, linenum, error):
         error(
             filename,
             linenum,
-            "whitespace/newline",
+            "whitespace/newline_controlled_statement",
             5,
             f"Controlled statements inside brackets of {keyword.group(1)} clause"
             " should be on a separate line",
