Change the global singleton into a bomb.

Use the default config when parsing the built-in root.sdf, and
in the gz_sdf command-line tool.

Reasoning for not upstreaming this patch: Drake-specific build option.

--- src/ParserConfig.cc
+++ src/ParserConfig.cc
@@ -83,8 +83,7 @@ ParserConfig::ParserConfig()
 /////////////////////////////////////////////////
 ParserConfig &ParserConfig::GlobalConfig()
 {
-  static auto *defaultConfig = new ParserConfig;
-  return *defaultConfig;
+  throw std::runtime_error("Drake must never use ParserConfig::GlobalConfig()");
 }
 
 /////////////////////////////////////////////////
--- src/Root.cc
+++ src/Root.cc
@@ -218,7 +218,7 @@ Errors Root::LoadSdfString(const std::string &_sdf, const ParserConfig &_config)
 {
   Errors errors;
   SDFPtr sdfParsed(new SDF());
-  init(sdfParsed);
+  init(sdfParsed, sdf::ParserConfig{});
 
   // Read an SDF string, and store the result in sdfParsed.
   if (!readString(_sdf, _config, sdfParsed, errors))
--- src/cmd/gz.cc
+++ src/cmd/gz.cc
@@ -51,7 +51,7 @@ namespace sdf
     int result = 0;
 
     sdf::Root root;
-    sdf::Errors errors = root.Load(_path);
+    sdf::Errors errors = root.Load(_path, sdf::ParserConfig{});
     if (!errors.empty())
     {
       for (auto &error : errors)
@@ -94,14 +94,18 @@ namespace sdf
 
     sdf::SDFPtr sdf(new sdf::SDF());
 
-    if (!sdf::init(sdf))
+    if (!sdf::init(sdf, sdf::ParserConfig{}))
     {
       std::cerr << "Error: SDF schema initialization failed.\n";
       return -1;
     }
 
-    if (!sdf::readFile(_path, sdf))
+    if (!sdf::readFile(_path, sdf::ParserConfig{}, sdf, errors))
     {
+      for (auto &error : errors)
+      {
+        std::cerr << error << std::endl;
+      }
       std::cerr << "Error: SDF parsing the xml failed.\n";
       return -1;
     }
@@ -122,7 +127,7 @@ namespace sdf
     {
       sdf->Version(_version);
     }
-    if (!sdf::init(sdf))
+    if (!sdf::init(sdf, sdf::ParserConfig{}))
     {
       std::cerr << "Error: SDF schema initialization failed.\n";
       return -1;
@@ -195,7 +200,7 @@ namespace sdf
     }
 
     sdf::Root root;
-    sdf::Errors errors = root.Load(_path);
+    sdf::Errors errors = root.Load(_path, sdf::ParserConfig{});
     if (!errors.empty())
     {
       std::cerr << errors << std::endl;
@@ -260,7 +265,7 @@ namespace sdf
     }
 
     sdf::Root root;
-    sdf::Errors errors = root.Load(_path);
+    sdf::Errors errors = root.Load(_path, sdf::ParserConfig{});
     if (!errors.empty())
     {
       std::cerr << errors << std::endl;
