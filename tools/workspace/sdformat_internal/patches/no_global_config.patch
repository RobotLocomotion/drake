Change the global singleton into a bomb.

Use the default config when parsing the built-in root.sdf, and
in the gz_sdf command-line tool.

Reasoning for not upstreaming this patch: Drake-specific build option.

--- src/ParserConfig.cc
+++ src/ParserConfig.cc
@@ -65,8 +65,7 @@
 /////////////////////////////////////////////////
 ParserConfig &ParserConfig::GlobalConfig()
 {
-  static auto *defaultConfig = new ParserConfig;
-  return *defaultConfig;
+  throw std::runtime_error("Drake must never use ParserConfig::GlobalConfig()");
 }
 
 /////////////////////////////////////////////////
--- src/Root.cc
+++ src/Root.cc
@@ -179,7 +179,7 @@
 {
   Errors errors;
   SDFPtr sdfParsed(new SDF());
-  init(sdfParsed);
+  init(sdfParsed, sdf::ParserConfig{});
 
   // Read an SDF string, and store the result in sdfParsed.
   if (!readString(_sdf, _config, sdfParsed, errors))
--- src/gz.cc
+++ src/gz.cc
@@ -44,7 +44,7 @@ extern "C" SDFORMAT_VISIBLE int cmdCheck(const char *_path)
   int result = 0;
 
   sdf::Root root;
-  sdf::Errors errors = root.Load(_path);
+  sdf::Errors errors = root.Load(_path, sdf::ParserConfig{});
   if (!errors.empty())
   {
     for (auto &error : errors)
@@ -87,14 +87,18 @@ extern "C" SDFORMAT_VISIBLE int cmdCheck(const char *_path)
 
   sdf::SDFPtr sdf(new sdf::SDF());
 
-  if (!sdf::init(sdf))
+  if (!sdf::init(sdf, sdf::ParserConfig{}))
   {
     std::cerr << "Error: SDF schema initialization failed.\n";
     return -1;
   }
 
-  if (!sdf::readFile(_path, sdf))
+  if (!sdf::readFile(_path, sdf::ParserConfig{}, sdf, errors))
   {
+    for (auto &error : errors)
+    {
+      std::cerr << error << std::endl;
+    }
     std::cerr << "Error: SDF parsing the xml failed.\n";
     return -1;
   }
@@ -127,7 +131,7 @@ extern "C" SDFORMAT_VISIBLE int cmdDescribe(const char *_version)
   {
     sdf->Version(_version);
   }
-  if (!sdf::init(sdf))
+  if (!sdf::init(sdf, sdf::ParserConfig{}))
   {
     std::cerr << "Error: SDF schema initialization failed.\n";
     return -1;
@@ -202,7 +206,7 @@ extern "C" SDFORMAT_VISIBLE int cmdGraph(
   }
 
   sdf::Root root;
-  sdf::Errors errors = root.Load(_path);
+  sdf::Errors errors = root.Load(_path, sdf::ParserConfig{});
   if (!errors.empty())
   {
     std::cerr << errors << std::endl;
@@ -268,7 +272,7 @@ extern "C" SDFORMAT_VISIBLE int cmdInertialStats(
   }
 
   sdf::Root root;
-  sdf::Errors errors = root.Load(_path);
+  sdf::Errors errors = root.Load(_path, sdf::ParserConfig{});
   if (!errors.empty())
   {
     std::cerr << errors << std::endl;
