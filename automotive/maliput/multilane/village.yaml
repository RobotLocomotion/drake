# -*- yaml -*-
---
# distances are meters; angles are degrees.
maliput_multilane_builder:
  id: "maliput_village"
  lane_width: 4
  right_shoulder: 2
  left_shoulder: 2
  elevation_bounds: [0, 5]
  linear_tolerance: .01
  angular_tolerance: 0.5
  points:
    A-St_wend:
      xypoint: [-50, 60, 0]
      zpoint: [0, 0, 0, 0]
    B-St_wend:
      xypoint: [-70, 0, 0]
      zpoint: [5, 0, 0, 0]
    C-St_wend:
      xypoint: [-50, -60, 0]
      zpoint: [7, 0, 0, 0]

    X-Ave_nend:
      xypoint: [-60, 50, -90]
      zpoint: [0, 0, 0, 0]
    Y-Ave_nend:
      xypoint: [0, 70, -90]
      zpoint: [0, 0, 0, 0]
    Z-Ave_nend:
      xypoint: [60, 50, -90]
      zpoint: [0, 0, 0, 0]

    Express_s0:
      xypoint: [-70, 120, 0]
      zpoint: [0, 0, 0, 0]

  connections:
    # Main Streets
    A-St_blk1:
      lanes: [1, 0, 0]
      start: ["ref", "points.A-St_wend.forward"]
      length: 40
      z_end: ["ref", [0, 0, 0, 0]]
    A-St_isY:
      lanes: [1, 0, 0]
      start: ["ref", "connections.A-St_blk1.end.ref.forward"]
      length: 20
      z_end: ["ref", [0, 0, 0, 0]]
    A-St_blk2:
      lanes: [1, 0, 0]
      start: ["ref", "connections.A-St_isY.end.ref.forward"]
      length: 40
      z_end: ["ref", [0, 0, 0, 0]]

    B-St_isX:
      lanes: [1, 0, 0]
      start: ["ref", "points.B-St_wend.forward"]
      length: 20
      z_end: ["ref", [5, 0, 0, 0]]
    B-St_blk1:
      lanes: [1, 0, 0]
      start: ["ref", "connections.B-St_isX.end.ref.forward"]
      length: 40
      z_end: ["ref", [0, 0, 0, 0]]
    B-St_isY:
      lanes: [1, 0, 0]
      start: ["ref", "connections.B-St_blk1.end.ref.forward"]
      length: 20
      z_end: ["ref", [0, 0, 0, 0]]
    B-St_blk2:
      lanes: [1, 0, 0]
      start: ["ref", "connections.B-St_isY.end.ref.forward"]
      length: 40
      z_end: ["ref", [0, 0, 0, 0]]
    B-St_isZ:
      lanes: [1, 0, 0]
      start: ["ref", "connections.B-St_blk2.end.ref.forward"]
      length: 20
      z_end: ["ref", [0, 0, 0, 0]]

    C-St_blk1:
      lanes: [1, 0, 0]
      start: ["ref", "points.C-St_wend.forward"]
      length: 40
      z_end: ["ref", [5, 0, 0, 0]]
    C-St_isY:
      lanes: [1, 0, 0]
      start: ["ref", "connections.C-St_blk1.end.ref.forward"]
      length: 20
      z_end: ["ref", [5, 0, 0, 0]]
    C-St_blk2:
      lanes: [1, 0, 0]
      start: ["ref", "connections.C-St_isY.end.ref.forward"]
      length: 40
      z_end: ["ref", [0, 0, 0, 0]]

    X-Ave_blk1:
      lanes: [1, 0, 0]
      start: ["ref", "points.X-Ave_nend.forward"]
      length: 40
      z_end: ["ref", [5, 0, 0, 0]]
    X-Ave_isB:
      lanes: [1, 0, 0]
      start: ["ref", "connections.X-Ave_blk1.end.ref.forward"]
      length: 20
      z_end: ["ref", [5, 0, 0, 0]]
    X-Ave_blk2:
      lanes: [1, 0, 0]
      start: ["ref", "connections.X-Ave_isB.end.ref.forward"]
      length: 40
      z_end: ["ref", [7, 0, 0, 0]]

    Y-Ave_isA:
      lanes: [1, 0, 0]
      start: ["ref", "points.Y-Ave_nend.forward"]
      length: 20
      z_end: ["ref", [0, 0, 0, 0]]
    Y-Ave_blk1:
      lanes: [1, 0, 0]
      start: ["ref", "connections.Y-Ave_isA.end.ref.forward"]
      length: 40
      z_end: ["ref", [0, 0, 0, 0]]
    Y-Ave_isB:
      lanes: [1, 0, 0]
      start: ["ref", "connections.Y-Ave_blk1.end.ref.forward"]
      length: 20
      z_end: ["ref", [0, 0, 0, 0]]
    Y-Ave_blk2:
      lanes: [1, 0, 0]
      start: ["ref", "connections.Y-Ave_isB.end.ref.forward"]
      length: 40
      z_end: ["ref", [5, 0, 0, 0]]
    Y-Ave_isC:
      lanes: [1, 0, 0]
      start: ["ref", "connections.Y-Ave_blk2.end.ref.forward"]
      length: 20
      z_end: ["ref", [5, 0, 0, 0]]

    Z-Ave_blk1:
      lanes: [1, 0, 0]
      start: ["ref", "points.Z-Ave_nend.forward"]
      length: 40
      z_end: ["ref", [0, 0, 0, 0]]
    Z-Ave_isB:
      lanes: [1, 0, 0]
      start: ["ref", "connections.Z-Ave_blk1.end.ref.forward"]
      length: 20
      z_end: ["ref", [0, 0, 0, 0]]
    Z-Ave_blk2:
      lanes: [1, 0, 0]
      start: ["ref", "connections.Z-Ave_isB.end.ref.forward"]
      length: 40
      z_end: ["ref", [0, 0, 0, 0]]

    # The Expressway
    Express_N1:
      lanes: [1, 0, 0]
      start: ["ref", "points.Express_s0.forward"]
      length: 20
      z_end: ["ref", [0, 0, 0, 0]]
    Express_N2:
      lanes: [1, 0, 0]
      start: ["ref", "connections.Express_N1.end.ref.forward"]
      length: 120
      z_end: ["ref", [0, 0, 0, 0]]
    Express_NE_a:
      lanes: [1, 0, 0]
      start: ["ref", "connections.Express_N2.end.ref.forward"]
      arc: [60, -45]
      z_end: ["ref", [0, 0, 20, 0]]
    Express_NE_b:
      lanes: [1, 0, 0]
      start: ["ref", "connections.Express_NE_a.end.ref.forward"]
      arc: [60, -45]
      z_end: ["ref", [0, 0, 0, 0]]
    Express_E:
      lanes: [1, 0, 0]
      start: ["ref", "connections.Express_NE_b.end.ref.forward"]
      length: 120
      z_end: ["ref", [0, 0, 0, 0]]
    Express_ES_a:
      lanes: [1, 0, 0]
      start: ["ref", "connections.Express_E.end.ref.forward"]
      arc: [60, -45]
      z_end: ["ref", [0, 0, 20, 0]]
    Express_ES_b:
      lanes: [1, 0, 0]
      start: ["ref", "connections.Express_ES_a.end.ref.forward"]
      arc: [60, -45]
      z_end: ["ref", [0, 0, 0, 0]]
    Express_S1:
      lanes: [1, 0, 0]
      start: ["ref", "connections.Express_ES_b.end.ref.forward"]
      length: 120
      z_end: ["ref", [0, 0, 0, 0]]
    Express_S2:
      lanes: [1, 0, 0]
      start: ["ref", "connections.Express_S1.end.ref.forward"]
      length: 20
      z_end: ["ref", [0, 0, 0, 0]]
    Express_SW_a:
      lanes: [1, 0, 0]
      start: ["ref", "connections.Express_S2.end.ref.forward"]
      arc: [60, -45]
      z_end: ["ref", [0, 0, 20, 0]]
    Express_SW_b:
      lanes: [1, 0, 0]
      start: ["ref", "connections.Express_SW_a.end.ref.forward"]
      arc: [60, -45]
      z_end: ["ref", [0, 0, 0, 0]]
    Express_W_a:
      lanes: [1, 0, 0]
      start: ["ref", "connections.Express_SW_b.end.ref.forward"]
      length: 100
      z_end: ["ref", [0, 0, 0, 0]]
    Express_W_b:
      lanes: [1, 0, 0]
      start: ["ref", "connections.Express_W_a.end.ref.forward"]
      length: 20
      z_end: ["ref", [0, 0, 0, 0]]
    Express_WN_a:
      lanes: [1, 0, 0]
      start: ["ref", "connections.Express_W_b.end.ref.forward"]
      arc: [60, -45]
      z_end: ["ref", [0, 0, 20, 0]]
    Express_WN_b:
      lanes: [1, 0, 0]
      start: ["ref", "connections.Express_WN_a.end.ref.forward"]
      arc: [60, -45]
      explicit_end: ["ref", "connections.Express_N1.start.ref.forward"]

    Express_NRamp:
      lanes: [1, 0, 0]
      start: ["ref", "connections.Express_N2.start.ref.forward"]
      arc: [50, -90]
      explicit_end: ["ref", "connections.Y-Ave_isA.start.ref.forward"]

    Express_ERamp:
      lanes: [1, 0, 0]
      start: ["ref", "connections.Express_NE_b.end.ref.forward"]
      arc: [60, -90]
      explicit_end: ["ref", "connections.B-St_isZ.end.ref.reverse"]

    Express_SRamp_a:
      lanes: [1, 0, 0]
      start: ["ref", "connections.Y-Ave_isC.end.ref.forward"]
      arc: [50, -60]
      z_end: ["ref", [0, 0, 0, 0]]
    Express_SRamp_b:
      lanes: [1, 0, 0]
      start: ["ref", "connections.Express_SRamp_a.end.ref.forward"]
      arc: [50, -30]
      explicit_end: ["ref", "connections.Express_S2.start.ref.forward"]

    Express_WRamp_a:
      lanes: [1, 0, 0]
      start: ["ref", "connections.B-St_isX.start.ref.reverse"]
      arc: [60, -60]
      z_end: ["ref", [0, 0, 0, 0]]
    Express_WRamp_b:
      lanes: [1, 0, 0]
      start: ["ref", "connections.Express_WRamp_a.end.ref.forward"]
      arc: [60, -30]
      explicit_end: ["ref", "connections.Express_WN_a.start.ref.forward"]


    # Intersection connections
    A1-X1:
      lanes: [1, 0, 0]
      start: ["ref", "connections.A-St_blk1.start.ref.reverse"]
      arc: [10, 90]
      explicit_end: ["ref", "connections.X-Ave_blk1.start.ref.forward"]

    A1-YR:
      lanes: [1, 0, 0]
      start: ["ref", "connections.A-St_blk1.end.ref.forward"]
      arc: [10, 90]
      explicit_end: ["ref", "connections.Y-Ave_isA.start.ref.reverse"]
    A2-YR:
      lanes: [1, 0, 0]
      start: ["ref", "connections.A-St_blk2.start.ref.reverse"]
      arc: [10, -90]
      explicit_end: ["ref", "connections.Y-Ave_isA.start.ref.reverse"]
    A1-Y1:
      lanes: [1, 0, 0]
      start: ["ref", "connections.A-St_blk1.end.ref.forward"]
      arc: [10, -90]
      explicit_end: ["ref", "connections.Y-Ave_blk1.start.ref.forward"]
    A2-Y1:
      lanes: [1, 0, 0]
      start: ["ref", "connections.A-St_blk2.start.ref.reverse"]
      arc: [10, 90]
      explicit_end: ["ref", "connections.Y-Ave_blk1.start.ref.forward"]

    A2-Z1:
      lanes: [1, 0, 0]
      start: ["ref", "connections.A-St_blk2.end.ref.forward"]
      arc: [10, -90]
      explicit_end: ["ref", "connections.Z-Ave_blk1.start.ref.forward"]


    B1-X1:
      lanes: [1, 0, 0]
      start: ["ref", "connections.B-St_blk1.start.ref.reverse"]
      arc: [10, -90]
      explicit_end: ["ref", "connections.X-Ave_blk1.end.ref.reverse"]
    B1-X2:
      lanes: [1, 0, 0]
      start: ["ref", "connections.B-St_blk1.start.ref.reverse"]
      arc: [10, 90]
      explicit_end: ["ref", "connections.X-Ave_blk2.start.ref.forward"]
    BR-X1:
      lanes: [1, 0, 0]
      start: ["ref", "connections.B-St_isX.start.ref.forward"]
      arc: [10, 90]
      explicit_end: ["ref", "connections.X-Ave_blk1.end.ref.reverse"]
    BR-X2:
      lanes: [1, 0, 0]
      start: ["ref", "connections.B-St_isX.start.ref.forward"]
      arc: [10, -90]
      explicit_end: ["ref", "connections.X-Ave_blk2.start.ref.forward"]

    B1-Y1:
      lanes: [1, 0, 0]
      start: ["ref", "connections.B-St_blk1.end.ref.forward"]
      arc: [10, 90]
      explicit_end: ["ref", "connections.Y-Ave_blk1.end.ref.reverse"]
    B1-Y2:
      lanes: [1, 0, 0]
      start: ["ref", "connections.B-St_blk1.end.ref.forward"]
      arc: [10, -90]
      explicit_end: ["ref", "connections.Y-Ave_blk2.start.ref.forward"]
    B2-Y1:
      lanes: [1, 0, 0]
      start: ["ref", "connections.B-St_blk2.start.ref.forward"]
      arc: [10, -90]
      explicit_end: ["ref", "connections.Y-Ave_blk1.end.ref.reverse"]
    B2-Y2:
      lanes: [1, 0, 0]
      start: ["ref", "connections.B-St_blk2.start.ref.reverse"]
      arc: [10, 90]
      explicit_end: ["ref", "connections.Y-Ave_blk2.start.ref.forward"]

    B2-Z1:
      lanes: [1, 0, 0]
      start: ["ref", "connections.B-St_blk2.end.ref.forward"]
      arc: [10, 90]
      explicit_end: ["ref", "connections.Z-Ave_blk1.end.ref.reverse"]
    B2-Z2:
      lanes: [1, 0, 0]
      start: ["ref", "connections.B-St_blk2.end.ref.forward"]
      arc: [10, -90]
      explicit_end: ["ref", "connections.Z-Ave_blk2.start.ref.forward"]
    BR-Z1:
      lanes: [1, 0, 0]
      start: ["ref", "connections.B-St_isZ.end.ref.reverse"]
      arc: [10, -90]
      explicit_end: ["ref", "connections.Z-Ave_blk1.end.ref.reverse"]
    BR-Z2:
      lanes: [1, 0, 0]
      start: ["ref", "connections.B-St_isZ.end.ref.reverse"]
      arc: [10, 90]
      explicit_end: ["ref", "connections.Z-Ave_blk2.start.ref.forward"]


    C1-X2:
      lanes: [1, 0, 0]
      start: ["ref", "connections.C-St_blk1.start.ref.reverse"]
      arc: [10, -90]
      explicit_end: ["ref", "connections.X-Ave_blk2.end.ref.forward"]

    C1-Y2:
      lanes: [1, 0, 0]
      start: ["ref", "connections.C-St_blk1.end.ref.forward"]
      arc: [10, 90]
      explicit_end: ["ref", "connections.Y-Ave_blk2.end.ref.reverse"]
    C2-Y2:
      lanes: [1, 0, 0]
      start: ["ref", "connections.C-St_blk2.start.ref.reverse"]
      arc: [10, -90]
      explicit_end: ["ref", "connections.Y-Ave_blk2.end.ref.reverse"]
    C1-YR:
      lanes: [1, 0, 0]
      start: ["ref", "connections.C-St_blk1.end.ref.forward"]
      arc: [10, -90]
      explicit_end: ["ref", "connections.Y-Ave_isC.end.ref.forward"]
    C2-YR:
      lanes: [1, 0, 0]
      start: ["ref", "connections.C-St_blk2.start.ref.reverse"]
      arc: [10, 90]
      explicit_end: ["ref", "connections.Y-Ave_isC.end.ref.forward"]

    C2-Z2:
      lanes: [1, 0, 0]
      start: ["ref", "connections.C-St_blk2.end.ref.forward"]
      arc: [10, 90]
      explicit_end: ["ref", "connections.Z-Ave_blk2.end.ref.reverse"]

  groups:
    A12-YR1: [A-St_isY, Y-Ave_isA, A1-YR, A2-YR, A1-Y1, A2-Y1]

    B1R-X12: [B-St_isX, X-Ave_isB, B1-X1, B1-X2, BR-X1, BR-X2]

    B12-Y12: [B-St_isY, Y-Ave_isB, B1-Y1, B1-Y2, B2-Y1, B2-Y2]

    B2R-Z12: [B-St_isZ, Z-Ave_isB, B2-Z1, B2-Z2, BR-Z1, BR-Z2]

    C12-Y2R: [C-St_isY, Y-Ave_isC, C1-Y2, C2-Y2, C1-YR, C2-YR]

    Merge_WRamp: [Express_WRamp_b, Express_W_b]
