# -*- yaml -*-
---
# Implements a basic X-intersection between two 2-lane roads.
#
# Distances are meters; angles are degrees.
maliput_multilane_builder:
  id: "basic_two_lane_x_intersection"
  computation_policy: "prefer-accuracy"
  scale_length: 1
  lane_width: 3.75
  left_shoulder: 2.5
  right_shoulder: 2.5
  elevation_bounds: [0, 5]
  linear_tolerance: .01
  angular_tolerance: 0.5
  points:
    west_start_point:
      xypoint: [-59.375, -1.875, 0]  # x,y, heading
      zpoint: [0, 0, 0, 0]  # z, z_dot, theta (superelevation), theta_dot
    west_entry_point:
      xypoint: [-9.375, -1.875, 0]
      zpoint: [0, 0, 0, 0]
    east_entry_point:
      xypoint: [9.375, -1.875, 0]
      zpoint: [0, 0, 0, 0]
    east_start_point:
      xypoint: [59.375, -1.875, 0]
      zpoint: [0, 0, 0, 0]
    south_start_point:
      xypoint: [1.875, -59.375, 90]
      zpoint: [0, 0, 0, 0]
    south_entry_point:
      xypoint: [1.875, -9.375, 90]
      zpoint: [0, 0, 0, 0]
    north_entry_point:
      xypoint: [1.875, 9.375, 90]
      zpoint: [0, 0, 0, 0]
    north_start_point:
      xypoint: [1.875, 59.375, 90]
      zpoint: [0, 0, 0, 0]
  connections:
    # Straight through lanes.
    w_segment:
      lanes: [2, 0, 0]  # num_lanes, ref_lane, r_ref
      start: ["ref", "points.west_start_point.forward"]
      length: 50
      z_end: ["ref", [0, 0, 0]]
    ew_intersection_segment:
       lanes: [2, 0, 0]
       start: ["ref", "points.west_entry_point.forward"]
       length: 18.75
       z_end: ["ref", [0, 0, 0]]
    e_segment:
       lanes: [2, 0, 0]
       start: ["ref", "points.east_entry_point.forward"]
       length: 50
       z_end: ["ref", [0, 0, 0]]
    s_segment:
      lanes: [2, 0, 0]
      start: ["ref", "points.south_start_point.forward"]
      length: 50
      z_end: ["ref", [0, 0, 0]]
    ns_intersection_segment:
       lanes: [2, 0, 0]
       start: ["ref", "points.south_entry_point.forward"]
       length: 18.75
       z_end: ["ref", [0, 0, 0]]
    n_segment:
       lanes: [2, 0, 0]
       start: ["ref", "points.north_entry_point.forward"]
       length: 50
       z_end: ["ref", [0, 0, 0]]
    # Right turn lanes.
    east_right_turn_segment:
       lanes: [1, 0, 0]
       start: ["lane.0", "connections.ew_intersection_segment.start.0.forward"]
       arc: [7.5, -90]  # radius, d_theta
       explicit_end: ["lane.0", "connections.ns_intersection_segment.start.0.forward"]
    west_right_turn_segment:
       lanes: [1, 0, 0]
       start: ["lane.0", "connections.ew_intersection_segment.end.1.reverse"]
       arc: [7.5, -90]
       explicit_end: ["lane.0", "connections.ns_intersection_segment.end.0.forward"]
    north_right_turn_segment:
       lanes: [1, 0, 0]
       start: ["lane.0", "connections.ns_intersection_segment.start.0.forward"]
       arc: [7.5, -90]
       explicit_end: ["lane.0", "connections.ew_intersection_segment.end.0.forward"]
    south_right_turn_segment:
       lanes: [1, 0, 0]
       start: ["lane.0", "connections.ns_intersection_segment.end.1.reverse"]
       arc: [7.5, -90]
       explicit_end: ["lane.0", "connections.ew_intersection_segment.start.1.forward"]
    # Left turn lanes.
    east_left_turn_segment:
       lanes: [1, 0, 0]
       start: ["lane.0", "connections.ew_intersection_segment.start.0.forward"]
       arc: [11.25, 90]
       explicit_end: ["lane.0", "connections.ns_intersection_segment.end.0.forward"]
    west_left_turn_segment:
       lanes: [1, 0, 0]
       start: ["lane.0", "connections.ew_intersection_segment.end.1.reverse"]
       arc: [11.25, 90]
       explicit_end: ["lane.0", "connections.ns_intersection_segment.end.1.forward"]
    north_left_turn_segment:
       lanes: [1, 0, 0]
       start: ["lane.0", "connections.ns_intersection_segment.start.0.forward"]
       arc: [11.25, 90]
       explicit_end: ["lane.0", "connections.ew_intersection_segment.end.1.forward"]
    south_left_turn_segment:
       lanes: [1, 0, 0]
       start: ["lane.0", "connections.ns_intersection_segment.end.1.reverse"]
       arc: [11.25, 90]
       explicit_end: ["lane.0", "connections.ew_intersection_segment.start.0.forward"]

RoadRulebook:
  RightOfWayRules:
    # Straight-through rules have both Go and Stop states and yield to no other
    # rules.
    - ID: NorthStraight
      States:
        Go: []
        Stop: []
      Zone:
      - Lane: l:ns_intersection_segment_0
        SRange: [0, 18.75]
      ZoneType: StopExcluded
    - ID: SouthStraight
      States:
        Go: []
        Stop: []
      Zone:
      - Lane: l:ns_intersection_segment_1
    - ID: EastStraight
      States:
        Go: []
        Stop: []
      Zone:
      - Lane: l:ew_intersection_segment_0
    - ID: WestStraight
      States:
        Go: []
        Stop: []
      Zone:
      - Lane: l:ew_intersection_segment_1
    # Right-turn rules only have both Go and StopThenGo states to model an
    # intersection that allows turn-on-red. When in state Go, they yield to no
    # other rule since their original direction of travel will have right-of-way.
    # When in state StopThenGo, they yield to both perpendicular straight-through
    # rules and antiparallel left-turn rules since their original direction of
    # travel will not have right-of-way.
    - ID: NorthRightTurn
      States:
        Go: [SouthLeftTurn]
        StopThenGo: [EastStraight, SouthLeftTurn]
      Zone:
      - Lane: l:north_right_turn_segment_0
    - ID: SouthRightTurn
      States:
        Go: [NorthLeftTurn]
        StopThenGo: [WestStraight, NorthLeftTurn]
      Zone:
      - Lane: l:south_right_turn_segment_0
    - ID: EastRightTurn
      States:
        Go: [WestLeftTurn]
        StopThenGo: [SouthStraight, WestLeftTurn]
      Zone:
      - Lane: l:east_right_turn_segment_0
    - ID: WestRightTurn
      States:
        Go: [EastLeftTurn]
        StopThenGo: [NorthStraight, EastLeftTurn]
      Zone:
      - Lane: l:west_right_turn_segment_0
     # Left-turn rules have both Go and Stop states. They yield to antiparallel
     # straight-through rules.
    - ID: NorthLeftTurn
      States:
        Go: [SouthStraight]
        Stop: []
      Zone:
      - Lane: l:north_left_turn_segment_0
    - ID: SouthLeftTurn
      States:
        Go: [NorthStraight]
        Stop: []
      Zone:
      - Lane: l:south_left_turn_segment_0
    - ID: EastLeftTurn
      States:
        Go: [WestStraight]
        Stop: []
      Zone:
      - Lane: l:east_left_turn_segment_0
    - ID: WestLeftTurn
      States:
        Go: [EastStraight]
        Stop: []
      Zone:
      - Lane: l:west_left_turn_segment_0
  DirectionUsageRules:
    - ID: NorthRightTurn
      Zone:
        Lane: l:north_right_turn_segment_0
      States:
        - ID: default
          Severity: Strict
          Type: WithS
    - ID: NorthLeftTurn
      Zone:
        Lane: l:north_left_turn_segment_0
      States:
        - ID: default
          Severity: Strict
          Type: WithS
    - ID: SouthRightTurn
      Zone:
        Lane: l:south_right_turn_segment_0
      States:
        - ID: default
          Severity: Strict
          Type: WithS
    - ID: SouthLeftTurn
      Zone:
        Lane: l:south_left_turn_segment_0
      States:
        - ID: default
          Severity: Strict
          Type: WithS
    - ID: EastRightTurn
      Zone:
        Lane: l:east_right_turn_segment_0
      States:
        - ID: default
          Severity: Strict
          Type: WithS
    - ID: EastLeftTurn
      Zone:
        Lane: l:east_left_turn_segment_0
      States:
        - ID: default
          Severity: Strict
          Type: WithS
    - ID: WestRightTurn
      Zone:
        Lane: l:west_right_turn_segment_0
      States:
        - ID: default
          Severity: Strict
          Type: WithS
    - ID: WestLeftTurn
      Zone:
        Lane: l:west_left_turn_segment_0
      States:
        - ID: default
          Severity: Strict
          Type: WithS
    # The rightmost lane in a segment travels +S and the north/south
    # and east/west pairs have the same +S direction. Rules are defined in order
    # of increasing S.
    - ID: NorthApproach
      Zone:
        Lane: l:s_segment_0
        SRange: [0, 50.0]
      States:
        - ID: default
          Severity: Preferred
          Type: WithS
    - ID: NorthStraight
      Zone:
        Lane: l:ns_intersection_segment_0
        SRange: [0, 18.75]
      States:
        - ID: default
          Severity: Strict
          Type: WithS
    - ID: NorthExit
      Zone:
        Lane: l:n_segment_0
        SRange: [0, 50]
      States:
        - ID: default
          Severity: Preferred
          Type: WithS
    - ID: SouthApproach
      Zone:
        Lane: l:n_segment_1
      States:
        - ID: default
          Severity: Preferred
          Type: AgainstS
    - ID: SouthStraight
      Zone:
        Lane: l:ns_intersection_segment_1
      States:
        - ID: default
          Severity: Strict
          Type: AgainstS
    - ID: SouthExit
      Zone:
        Lane: l:s_segment_1
      States:
        - ID: default
          Severity: Preferred
          Type: AgainstS
    - ID: EastApproach
      Zone:
        Lane: l:w_segment_0
      States:
        - ID: default
          Severity: Preferred
          Type: WithS
    - ID: EastStraight
      Zone:
        Lane: l:ew_intersection_segment_0
      States:
        - ID: default
          Severity: Strict
          Type: WithS
    - ID: EastExit
      Zone:
        Lane: l:e_segment_0
      States:
        - ID: default
          Severity: Preferred
          Type: WithS
    - ID: WestEntrance
      Zone:
        Lane: l:e_segment_1
      States:
        - ID: default
          Severity: Preferred
          Type: AgainstS
    - ID: WestStraight
      Zone:
        Lane: l:ew_intersection_segment_1
      States:
        - ID: default
          Severity: Strict
          Type: AgainstS
    - ID: WestExit
      Zone:
        Lane: l:w_segment_1
      States:
        - ID: default
          Severity: Preferred
          Type: AgainstS

TrafficLights:
# The traffic light IDs denote the intersection entrance they regulate. For
# example, the "SouthFacing" traffic light is responsible for signaling
# vehicles that enter the intersection from the south (meaning the vehicles are
# facing north). In this intersection, a single traffic light is used for all
# vehicles at a particular entrance regardless of whether they are traveling
# straight through, making a left turn, or making a right turn while in the
# intersection.
#
# Most 2x2 intersections use bulb groups containing only three round bulbs: red,
# yellow, and green. To demonstrate the use of arrows, however, a yellow
# left-arrow bulb is included. It is positioned left of the green round bulb.
# The ASCII art diagram below shows the bulb configuration within a bulb group.
# It also shows the traffic light's frame when you are looking at the traffic
# light (the bulbs are facing you, the +X-axis is pointing out of the screen):
#
#                +Z
#                 ^
#                 |
#                 |
#              -------
#              |     |      Legend:
#              | (R) |        - (R): Round red bulb
#              |     |        - (Y): Round yellow bulb
#              -------        - (G): Round green bulb
#              |     |        - <Y-: Left arrow yellow bulb
#    <---------| (Y) |-----------------------------------------> +Y
#              |     |
#        -------------
#        |     |     |
#        | <Y- | (G) |
#        |     |     |
#        -------------
#                 |
#                 |
#                 V
#
# Notice that the X and Y axes of the traffic light's frame is chosen to be in
# the middle of the vertical stack of three bulbs. This is because the yellow
# left-arrow is optional. The intersection *could* be signalized without it. It
# simply tells left-turning vehicles to employ extra caution.
#
# The Z-offset of the traffic light's frame within the world frame is computed
# as follows. The goal is for the bottom edge of the traffic light to be about
# 18' above the ground. A typical traffic light is about 45" tall since each of
# the three bulbs is 14" tall plus 1.5" gaps between them. Thus, the traffic
# light's Z-offset above the road surface is 18 * 12 + (45 / 2) = 238.5"
# (6.0579 m). Assuming the road surface is at the world frame's Z = 0, the
# Z-component of the traffic light's pose within the world frame is also
# 6.0579 m.
#
# Since each traffic light only has one bulb group in this intersection, there
# is zero lateral and rotational offset between the traffic light's frame and
# the bulb group's frame.
#
# Within the bulb group frame, the positions of the bulbs are as follows:
#
#  - Round red light: This bulb is at the top of the stack, so it has a
#    position of x = 0 m, y = 0 m, and z = 45" / 2 - 14" / 2 = 15.5" (0.3937 m).
#
#  - Round yellow light: This bulb is in the middle of the stack, so it has a
#    position of x = 0 m, y = 0 m, and z = 0 m.
#
#  - Round green light: This bulb is in the bottom of the stack and is thus
#    opposite of the round red light. It has a position of x = 0, y = 0,
#    z = -0.3937 m.
#
#  - Yellow left-arrow: This bulb is to the left of the green round bulb. A 1.5"
#    gap separates the two bulbs. Thus it has a position of x = 0 m,
#    y = -14" - 1.5" = -15.5" (-0.3937 m), and z = -0.3937 m.
#
# The rotations of the bulb frames are all zero since the entire traffic light
# and its bulb group is already oriented such that their x-axes are pointing
# towards the intersection entrance to which they apply).
#
# The bounding boxes are omitted because the default values as defined by
# drake::maliput::api::rules::Bulb are sufficient.
- ID: SouthFacing
  Pose:
    orientation_road_network: [0.707107, 0, 0, -0.707107]  # RPY = (0, 0, -PI/2)
    position_road_network: [1.875, 9.375, 6.0579]
  BulbGroups:
   - ID: SouthFacingBulbs
     Pose:
       orientation_traffic_light: [1, 0, 0, 0]  # RPY = (0, 0, 0)
       position_traffic_light: [0, 0, 0]
     Bulbs:
     - ID: RedBulb
       Pose:
         orientation_bulb_group: [1, 0, 0, 0]  # RPY = (0, 0, 0)
         position_bulb_group: [0, 0, 0.3937]
       BoundingBox:
         min: [-0.0889, -0.1778, -0.1778]
         max: [0.0889, 0.1778, 0.1778]
       Color: Red
       Type: Round
       States: [On, Off]
     - ID: YellowBulb
       Pose:
         orientation_bulb_group: [1, 0, 0, 0]  # RPY = (0, 0, 0)
         position_bulb_group: [0, 0, 0]
       BoundingBox:
         min: [-0.0889, -0.1778, -0.1778]
         max: [0.0889, 0.1778, 0.1778]
       Color: Yellow
       Type: Round
       States: [On, Off]
     - ID: GreenBulb
       Pose:
         orientation_bulb_group: [1, 0, 0, 0]  # RPY = (0, 0, 0)
         position_bulb_group: [0, 0, -0.3937]
       BoundingBox:
         min: [-0.0889, -0.1778, -0.1778]
         max: [0.0889, 0.1778, 0.1778]
       Color: Green
       Type: Round
       States: [On, Off]
     - ID: YellowLeftArrowBulb
       Pose:
         orientation_bulb_group: [1, 0, 0, 0]  # RPY = (0, 0, 0)
         position_bulb_group: [0, -0.3937, -0.3937]
       BoundingBox:
         min: [-0.0889, -0.1778, -0.1778]
         max: [0.0889, 0.1778, 0.1778]
       Color: Yellow
       Type: Arrow
       ArrowOrientation: 3.14  # Points left.
       States: [Off, Blinking]
- ID: NorthFacing
  Pose:
    orientation_road_network: [0.707107, 0, 0, -0.707107]  # RPY = (0, 0, PI/2)
    position_road_network: [-1.875, -9.375, 6.0579]
  BulbGroups:
   - ID: NorthFacingBulbs
     Pose:
       orientation_traffic_light: [1, 0, 0, 0]  # RPY = (0, 0, 0)
       position_traffic_light: [0, 0, 0]
     Bulbs:
     - ID: RedBulb
       Pose:
         orientation_bulb_group: [1, 0, 0, 0]  # RPY = (0, 0, 0)
         position_bulb_group: [0, 0, 0.3937]
       Color: Red
       Type: Round
       States: [On, Off]
     - ID: YellowBulb
       Pose:
         orientation_bulb_group: [1, 0, 0, 0]  # RPY = (0, 0, 0)
         position_bulb_group: [0, 0, 0]
       Color: Yellow
       Type: Round
       States: [On, Off]
     - ID: GreenBulb
       Pose:
         orientation_bulb_group: [1, 0, 0, 0]  # RPY = (0, 0, 0)
         position_bulb_group: [0, 0, -0.3937]
       Color: Green
       Type: Round
     - ID: YellowLeftArrowBulb
       Pose:
         orientation_bulb_group: [1, 0, 0, 0]  # RPY = (0, 0, 0)
         position_bulb_group: [0, -0.3937, -0.3937]
       BoundingBox:
         min: [-0.0889, -0.1778, -0.1778]
         max: [0.0889, 0.1778, 0.1778]
       Color: Yellow
       Type: Arrow
       ArrowOrientation: 3.14  # Points left.
       States: [Off, Blinking]
- ID: WestFacing
  Pose:
    orientation_road_network: [0, 0, 0, 1]  # RPY = (0, 0, PI)
    position_road_network: [9.375, -1.875, 6.0579]
  BulbGroups:
   - ID: WestFacingBulbs
     Pose:
       orientation_traffic_light: [1, 0, 0, 0]  # RPY = (0, 0, 0)
       position_traffic_light: [0, 0, 0]
     Bulbs:
     - ID: RedBulb
       Pose:
         orientation_bulb_group: [1, 0, 0, 0]  # RPY = (0, 0, 0)
         position_bulb_group: [0, 0, 0.3937]
       Color: Red
       Type: Round
       States: [On, Off]
     - ID: YellowBulb
       Pose:
         orientation_bulb_group: [1, 0, 0, 0]  # RPY = (0, 0, 0)
         position_bulb_group: [0, 0, 0]
       Color: Yellow
       Type: Round
       States: [On, Off]
     - ID: GreenBulb
       Pose:
         orientation_bulb_group: [1, 0, 0, 0]  # RPY = (0, 0, 0)
         position_bulb_group: [0, 0, -0.3937]
       Color: Green
       Type: Round
       States: [On, Off]
     - ID: YellowLeftArrowBulb
       Pose:
         orientation_bulb_group: [1, 0, 0, 0]  # RPY = (0, 0, 0)
         position_bulb_group: [0, -0.3937, -0.3937]
       BoundingBox:
         min: [-0.0889, -0.1778, -0.1778]
         max: [0.0889, 0.1778, 0.1778]
       Color: Yellow
       Type: Arrow
       ArrowOrientation: 3.14  # Points left.
       States: [Off, Blinking]
- ID: EastFacing
  Pose:
    orientation_road_network: [1, 0, 0, 0]  # RPY = (0, 0, 0)
    position_road_network: [-9.375, 1.875, 6.0579]
  BulbGroups:
   - ID: EastFacingBulbs
     Pose:
       orientation_traffic_light: [1, 0, 0, 0]  # RPY = (0, 0, 0)
       position_traffic_light: [0, 0, 0]
     Bulbs:
     - ID: RedBulb
       Pose:
         orientation_bulb_group: [1, 0, 0, 0]  # RPY = (0, 0, 0)
         position_bulb_group: [0, 0, 0.3937]
       Color: Red
       Type: Round
       States: [On, Off]
     - ID: YellowBulb
       Pose:
         orientation_bulb_group: [1, 0, 0, 0]  # RPY = (0, 0, 0)
         position_bulb_group: [0, 0, 0]
       Color: Yellow
       Type: Round
       States: [On, Off]
     - ID: GreenBulb
       Pose:
         orientation_bulb_group: [1, 0, 0, 0]  # RPY = (0, 0, 0)
         position_bulb_group: [0, 0, -0.3937]
       Color: Green
       Type: Round
       States: [On, Off]
     - ID: YellowLeftArrowBulb
       Pose:
         orientation_bulb_group: [1, 0, 0, 0]  # RPY = (0, 0, 0)
         position_bulb_group: [0, -0.3937, -0.3937]
       BoundingBox:
         min: [-0.0889, -0.1778, -0.1778]
         max: [0.0889, 0.1778, 0.1778]
       Color: Yellow
       Type: Arrow
       ArrowOrientation: 3.14  # Points left.
       States: [Off, Blinking]

PhaseRings:
- ID: 2x2Intersection
  Rules: [NorthStraight, SouthStraight, EastStraight, WestStraight,
          NorthRightTurn, SouthRightTurn, EastRightTurn, WestRightTurn,
          NorthLeftTurn, SouthLeftTurn, EastLeftTurn, WestLeftTurn]
  Phases:
  - ID: NorthSouthPhase
    RightOfWayRuleStates: {NorthStraight: Go, SouthStraight: Go,
                           NorthLeftTurn: Go, SouthLeftTurn: Go,
                           NorthRightTurn: Go, SouthRightTurn: Go,
                           EastRightTurn: StopThenGo, WestRightTurn: StopThenGo}
    TrafficLightStates:
      SouthFacing:
        SouthFacingBulbs: {GreenBulb: On, YellowLeftArrowBulb: Blinking}
      NorthFacing:
        NorthFacingBulbs: {GreenBulb: On, YellowLeftArrowBulb: Blinking}
      EastFacing:
        EastFacingBulbs: {RedBulb: On}
      WestFacing:
        WestFacingBulbs: {RedBulb: On}
  - ID: EastWestPhase
    RightOfWayRuleStates: {EastStraight: Go, WestStraight: Go,
                           EastLeftTurn: Go, WestLeftTurn: Go,
                           EastRightTurn: Go, WestRightTurn: Go,
                           NorthRightTurn: StopThenGo, SouthRightTurn: StopThenGo}
    TrafficLightStates:
      SouthFacing:
        SouthFacingBulbs: {RedBulb: On}
      NorthFacing:
        NorthFacingBulbs: {RedBulb: On}
      EastFacing:
        EastFacingBulbs: {GreenBulb: On, YellowLeftArrowBulb: Blinking}
      WestFacing:
        WestFacingBulbs: {GreenBulb: On, YellowLeftArrowBulb: Blinking}
  PhaseTransitionGraph:
   NorthSouthPhase:
    - ID: EastWestPhase
      duration_until: 45
   EastWestPhase:
    - ID: NorthSouthPhase
