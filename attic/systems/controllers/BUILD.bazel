# -*- python -*-

load(
    "@drake//attic:build_macros.bzl",
    drake_cc_googletest = "attic_drake_cc_googletest",
    drake_cc_library = "attic_drake_cc_library",
    drake_cc_package_library = "attic_drake_cc_package_library",
)
load("//tools/lint:lint.bzl", "add_lint_tests")

package(default_visibility = ["//visibility:public"])

drake_cc_package_library(
    name = "controllers",
    deps = [
        ":rbt_inverse_dynamics",
        ":rbt_inverse_dynamics_controller",
    ],
)

drake_cc_library(
    name = "rbt_inverse_dynamics",
    srcs = ["rbt_inverse_dynamics.cc"],
    hdrs = ["rbt_inverse_dynamics.h"],
    deps = [
        "//attic/multibody:rigid_body_tree",
        "//systems/framework",
    ],
)

drake_cc_library(
    name = "rbt_inverse_dynamics_controller",
    srcs = ["rbt_inverse_dynamics_controller.cc"],
    hdrs = ["rbt_inverse_dynamics_controller.h"],
    deps = [
        ":rbt_inverse_dynamics",
        "//attic/multibody:rigid_body_tree",
        "//systems/controllers:pid_controller",
        "//systems/controllers:state_feedback_controller_interface",
        "//systems/framework",
        "//systems/primitives:adder",
        "//systems/primitives:constant_vector_source",
        "//systems/primitives:demultiplexer",
        "//systems/primitives:pass_through",
    ],
)

# === test/ ===

drake_cc_library(
    name = "rbt_compute_torque",
    testonly = 1,
    hdrs = ["test/rbt_compute_torque.h"],
    visibility = ["//visibility:private"],
    deps = [
        "//attic/multibody:rigid_body_tree",
    ],
)

drake_cc_googletest(
    name = "rbt_inverse_dynamics_test",
    data = [
        "//examples/simple_four_bar:models",
        "//manipulation/models/iiwa_description:models",
    ],
    deps = [
        ":rbt_compute_torque",
        ":rbt_inverse_dynamics",
        "//attic/multibody/parsers",
        "//common:find_resource",
        "//common/test_utilities:eigen_matrix_compare",
        "//systems/controllers/test_utilities",
    ],
)

drake_cc_googletest(
    name = "rbt_inverse_dynamics_controller_test",
    data = [
        "//manipulation/models/iiwa_description:models",
    ],
    deps = [
        ":rbt_compute_torque",
        ":rbt_inverse_dynamics_controller",
        "//attic/multibody/parsers",
        "//common:find_resource",
        "//common/test_utilities:eigen_matrix_compare",
        "//systems/controllers/test_utilities",
    ],
)

add_lint_tests(
    cpplint_data = ["//attic:CPPLINT.cfg"],
)
