#!/usr/bin/env groovy

// Load utils.
@UTILS_CONTENT@

node(getNodeLabel()) {
  // Define job properties. Other Jenkinsfiles which do not correspond to
  // multibranch pipelines (i.e., for non-experimental jobs) should inherit
  // properties from the original job definitions rather than calling
  // properties() here.
  def props = [
    parameters([
      string(name: 'ciSha', defaultValue: 'main',
        description: 'Commit SHA or branch name. ' +
          'For pull requests, enter branch name <code>pr/1234/head</code> ' +
          'or <code>pr/1234/merge</code> for pull request #1234. ' +
          'Defaults to <code>main</code>.'),
      ]
    ),
    buildDiscarder(
      logRotator(
        daysToKeepStr: '90',
        artifactDaysToKeepStr: '90'
      )
    )
  ]
  if (env.JOB_NAME.contains("cache-server-health-check")) {
    props << disableConcurrentBuilds()
  }
  properties(props)

  stage('test') {
    timeout(600) {
      ansiColor('xterm') {
        timestamps {
          try {
            // Use the CI branch parameter for checkout (defaults to main).
            def scmVars = utils.checkout(params.ciSha)
            utils.doMainBuild(scmVars)
          } finally {
            try {
              utils.checkBuildResult()
              utils.addCDashBadge()
            } finally {
              utils.cleanWorkspace()
            }
          }
        }
      }
    }
  }
}
