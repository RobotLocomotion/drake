include_directories ( .. )
include_directories (../constraint)
include_directories (../../controllers)
include_directories (${PROJECT_SOURCE_DIR}/systems/plants)
include_directories (${PROJECT_SOURCE_DIR}/systems/plants/joints)
include_directories (${PROJECT_SOURCE_DIR}/systems/trajectories)
include_directories (${PROJECT_SOURCE_DIR}/solvers/polynomial)

macro(add_constraint_mex)
  add_mex(${ARGV} ${ARGV}.cpp)
  target_link_libraries(${ARGV} drakeRBM drakeMexUtil drakeRigidBodyConstraint drakeConstructRigidBodyConstraint)
endmacro()

add_library(drakeRigidBodyConstraint SHARED RigidBodyConstraint.cpp)
target_link_libraries(drakeRigidBodyConstraint drakeRBM drakeGeometryUtil)
if (NOT MSVC)
  set_target_properties(drakeRigidBodyConstraint PROPERTIES COMPILE_FLAGS -fPIC )
endif()
pods_install_libraries(drakeRigidBodyConstraint)
pods_install_headers(RigidBodyConstraint.h DESTINATION drake)


if (MATLAB_FOUND)
  add_mex(drakeConstructRigidBodyConstraint SHARED constructPtrRigidBodyConstraint.cpp)
  target_link_libraries(drakeConstructRigidBodyConstraint drakeRigidBodyConstraint drakeRBM drakeMexUtil drakeGeometryUtil)
  add_constraint_mex(testSingleTimeKinCnstmex)
  add_constraint_mex(testMultipleTimeKinCnstmex)
  add_constraint_mex(testQuasiStaticConstraintmex)
  add_constraint_mex(testPostureConstraintmex)
  add_constraint_mex(testMultipleTimeLinearPostureConstraintmex)
  add_constraint_mex(testSingleTimeLinearPostureConstraintmex)
  add_constraint_mex(constraintTypemex)
  add_constraint_mex(constraintCategorymex)
  add_constraint_mex(constructPtrRigidBodyConstraintmex)
  add_constraint_mex(updatePtrRigidBodyConstraintmex)
endif()

add_executable(testConstraintConstructor test/testConstraintConstructor.cpp)
if (NOT MSVC)
  set_target_properties(testConstraintConstructor PROPERTIES COMPILE_FLAGS -fPIC)
endif()
target_link_libraries(testConstraintConstructor drakeRBM drakeRigidBodyConstraint)
add_test(NAME testConstraintConstructor WORKING_DIRECTORY "${CMAKE_CURRENT_SOURCE_DIR}/test" COMMAND testConstraintConstructor)
