load("//tools/lint:lint.bzl", "add_lint_tests")
load(
    "//tools/skylark:drake_cc.bzl",
    "drake_cc_googletest",
    "drake_cc_library",
    "drake_cc_package_library",
)

package(default_visibility = ["//visibility:public"])

drake_cc_package_library(
    name = "estimators",
    visibility = ["//visibility:public"],
    deps = [
        ":extended_kalman_filter",
        ":gaussian_state_observer",
        ":kalman_filter",
        ":luenberger_observer",
        ":unscented_kalman_filter",
    ],
)

drake_cc_library(
    name = "extended_kalman_filter",
    srcs = ["extended_kalman_filter.cc"],
    hdrs = ["extended_kalman_filter.h"],
    deps = [
        ":gaussian_state_observer",
        "//common:autodiff",
        "//math:autodiff",
        "//math:gradient",
        "//math:matrix_util",
    ],
)

drake_cc_library(
    name = "gaussian_state_observer",
    srcs = ["gaussian_state_observer.cc"],
    hdrs = ["gaussian_state_observer.h"],
    deps = [
        "//common:default_scalars",
        "//systems/framework",
    ],
)

drake_cc_library(
    name = "kalman_filter",
    srcs = ["kalman_filter.cc"],
    hdrs = ["kalman_filter.h"],
    deps = [
        ":luenberger_observer",
        "//math:continuous_algebraic_riccati_equation",
        "//math:discrete_algebraic_riccati_equation",
        "//systems/framework",
        "//systems/primitives:linear_system",
    ],
)

drake_cc_library(
    name = "luenberger_observer",
    srcs = ["luenberger_observer.cc"],
    hdrs = ["luenberger_observer.h"],
    deps = [
        "//common:default_scalars",
        "//systems/framework",
    ],
)

drake_cc_library(
    name = "unscented_kalman_filter",
    srcs = ["unscented_kalman_filter.cc"],
    hdrs = ["unscented_kalman_filter.h"],
    deps = [
        ":extended_kalman_filter",
        ":gaussian_state_observer",
        "//math:matrix_util",
    ],
)

# === test/ ===

drake_cc_googletest(
    name = "extended_kalman_filter_test",
    deps = [
        ":extended_kalman_filter",
        ":nonlinear_kalman_filter_test",
    ],
)

drake_cc_googletest(
    name = "kalman_filter_test",
    deps = [
        ":kalman_filter",
        "//common/test_utilities:eigen_matrix_compare",
    ],
)

drake_cc_googletest(
    name = "luenberger_observer_test",
    deps = [
        ":luenberger_observer",
        "//common:pointer_cast",
        "//common/test_utilities:eigen_matrix_compare",
        "//common/test_utilities:is_dynamic_castable",
        "//examples/pendulum:pendulum_plant",
        "//systems/framework/test_utilities:scalar_conversion",
        "//systems/primitives:linear_system",
    ],
)

drake_cc_library(
    name = "nonlinear_kalman_filter_test",
    testonly = 1,
    hdrs = ["test/nonlinear_kalman_filter_test.h"],
    visibility = ["//visibility:private"],
    deps = [
        ":kalman_filter",
        "//common/test_utilities:eigen_matrix_compare",
        "//systems/analysis:simulator",
        "//systems/estimators/test_utilities:stochastic_linear_system",
        "//systems/estimators/test_utilities:sum_matrix_columns_system",
        "//systems/framework:diagram_builder",
        "//systems/primitives:constant_vector_source",
        "//systems/primitives:linear_system",
    ],
)

drake_cc_googletest(
    name = "unscented_kalman_filter_test",
    deps = [
        ":nonlinear_kalman_filter_test",
        ":unscented_kalman_filter",
    ],
)

add_lint_tests(enable_clang_format_lint = False)
