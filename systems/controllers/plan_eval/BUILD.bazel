# -*- python -*-

load(
    "//tools:drake.bzl",
    "drake_cc_binary",
    "drake_cc_googletest",
    "drake_cc_library",
)
load("//tools/workspace/gurobi:gurobi.bzl", "gurobi_test_tags")
load("//tools/lint:lint.bzl", "add_lint_tests")

package(default_visibility = ["//visibility:public"])

drake_cc_library(
    name = "generic_plan",
    srcs = [
        "generic_plan.cc",
    ],
    hdrs = [
        "generic_plan.h",
    ],
    deps = [
        "//drake/manipulation/util:trajectory_utils",
        "//drake/multibody:rigid_body_tree_alias_groups",
        "//drake/systems/controllers:setpoint",
        "//drake/systems/controllers/qp_inverse_dynamics",
        "//drake/systems/controllers/qp_inverse_dynamics:param_parser",
        "//drake/systems/framework:value",
    ],
)

drake_cc_library(
    name = "test_common",
    testonly = 1,
    hdrs = [
        "test/test_common.h",
    ],
    deps = [
        "//drake/multibody:rigid_body_tree_alias_groups",
        "//drake/systems/controllers/qp_inverse_dynamics:param_parser",
    ],
)

drake_cc_library(
    name = "plan_eval_base_system",
    srcs = ["plan_eval_base_system.cc"],
    hdrs = ["plan_eval_base_system.h"],
    deps = [
        "//drake/multibody:rigid_body_tree_alias_groups",
        "//drake/systems/controllers:setpoint",
        "//drake/systems/controllers/qp_inverse_dynamics:param_parser",
        "//drake/systems/framework:leaf_system",
    ],
)

# === test/ ===

drake_cc_googletest(
    name = "generic_plan_test",
    data = [
        "//drake/manipulation/models/iiwa_description:models",
        "//drake/systems/controllers/qp_inverse_dynamics:test/iiwa.alias_groups",  # noqa
        "//drake/systems/controllers/qp_inverse_dynamics:test/iiwa.id_controller_config",  # noqa
    ],
    # TODO(clalancette) UBSan fails due to a bug in Protobuf 2.6 (the
    # workaround in later versions of Protobuf is described here:
    # https://github.com/google/protobuf/blob/master/src/google/protobuf/generated_message_util.h#L78
    # In the future we should add a codegen action to edit the generated file
    # include block to add a fixup header with the workaround at the end.
    tags = [
        "no_ubsan",
    ],
    deps = [
        ":generic_plan",
        ":test_common",
        "//drake/common:find_resource",
        "//drake/common/test_utilities:eigen_matrix_compare",
        "//drake/multibody:rigid_body_tree",
        "//drake/multibody/parsers",
    ],
)

add_lint_tests()
