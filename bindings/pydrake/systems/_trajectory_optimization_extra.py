# See `ExecuteExtraPythonCode` in `pydrake_pybind.h` for usage details and
# rationale.


# TODO(russt): This entire file can be removed after the deprecation period.

from pydrake.common.deprecation import deprecated_callable
import pydrake.solvers.mathematicalprogram as mp
from pydrake.solvers.mathematicalprogram import MathematicalProgram
from pydrake.systems.trajectory_optimization import MultipleShooting


def DRAKE_PERFECT_FORWARD_MATH_PROG(method_name):
    @deprecated_callable((f'Use trajopt.prog().{method_name}(...) instead of '
                          f'trajopt.{method_name}(...).'),
                         date="2022-05-01")
    def forward(self, *args, **kwargs):
        return getattr(MathematicalProgram, method_name)(self.prog(), *args,
                                                         **kwargs)

    setattr(MultipleShooting, method_name, forward)


DRAKE_PERFECT_FORWARD_MATH_PROG('__str__')
DRAKE_PERFECT_FORWARD_MATH_PROG('NewContinuousVariables')
DRAKE_PERFECT_FORWARD_MATH_PROG('NewBinaryVariables')
DRAKE_PERFECT_FORWARD_MATH_PROG('NewSymmetricContinuousVariables')
DRAKE_PERFECT_FORWARD_MATH_PROG('AddDecisionVariables')
DRAKE_PERFECT_FORWARD_MATH_PROG('NewFreePolynomial')
DRAKE_PERFECT_FORWARD_MATH_PROG('NewEvenDegreeFreePolynomial')
DRAKE_PERFECT_FORWARD_MATH_PROG('NewOddDegreeFreePolynomial')
DRAKE_PERFECT_FORWARD_MATH_PROG('NewNonnegativePolynomial')
DRAKE_PERFECT_FORWARD_MATH_PROG('NewSosPolynomial')
DRAKE_PERFECT_FORWARD_MATH_PROG('NewEvenDegreeNonnegativePolynomial')
DRAKE_PERFECT_FORWARD_MATH_PROG('NewEvenDegreeSosPolynomial')
DRAKE_PERFECT_FORWARD_MATH_PROG('MakePolynomial')
DRAKE_PERFECT_FORWARD_MATH_PROG('Reparse')
DRAKE_PERFECT_FORWARD_MATH_PROG('NewIndeterminates')
DRAKE_PERFECT_FORWARD_MATH_PROG('AddIndeterminates')
DRAKE_PERFECT_FORWARD_MATH_PROG('AddVisualizationCallback')
DRAKE_PERFECT_FORWARD_MATH_PROG('AddCost')
DRAKE_PERFECT_FORWARD_MATH_PROG('MakeCost')
DRAKE_PERFECT_FORWARD_MATH_PROG('AddLinearCost')
DRAKE_PERFECT_FORWARD_MATH_PROG('AddQuadraticCost')
DRAKE_PERFECT_FORWARD_MATH_PROG('AddQuadraticErrorCost')
DRAKE_PERFECT_FORWARD_MATH_PROG('Add2NormSquaredCost')
DRAKE_PERFECT_FORWARD_MATH_PROG('AddL2NormCost')
DRAKE_PERFECT_FORWARD_MATH_PROG('AddL2NormCostUsingConicConstraint')
DRAKE_PERFECT_FORWARD_MATH_PROG('AddPolynomialCost')
DRAKE_PERFECT_FORWARD_MATH_PROG('AddMaximizeLogDeterminantCost')
DRAKE_PERFECT_FORWARD_MATH_PROG('AddMaximizeGeometricMeanCost')
DRAKE_PERFECT_FORWARD_MATH_PROG('AddConstraint')
DRAKE_PERFECT_FORWARD_MATH_PROG('AddLinearConstraint')
DRAKE_PERFECT_FORWARD_MATH_PROG('AddLinearEqualityConstraint')
DRAKE_PERFECT_FORWARD_MATH_PROG('AddBoundingBoxConstraint')
DRAKE_PERFECT_FORWARD_MATH_PROG('AddLorentzConeConstraint')
DRAKE_PERFECT_FORWARD_MATH_PROG('AddRotatedLorentzConeConstraint')
DRAKE_PERFECT_FORWARD_MATH_PROG('AddLinearComplementarityConstraint')
DRAKE_PERFECT_FORWARD_MATH_PROG('AddPolynomialConstraint')
DRAKE_PERFECT_FORWARD_MATH_PROG('AddPositiveSemidefiniteConstraint')
DRAKE_PERFECT_FORWARD_MATH_PROG('AddLinearMatrixInequalityConstraint')
DRAKE_PERFECT_FORWARD_MATH_PROG(
    'AddPositiveDiagonallyDominantMatrixConstraint')
DRAKE_PERFECT_FORWARD_MATH_PROG('AddScaledDiagonallyDominantMatrixConstraint')
DRAKE_PERFECT_FORWARD_MATH_PROG('AddSosConstraint')
DRAKE_PERFECT_FORWARD_MATH_PROG('AddEqualityConstraintBetweenPolynomials')
DRAKE_PERFECT_FORWARD_MATH_PROG('AddExponentialConeConstraint')
DRAKE_PERFECT_FORWARD_MATH_PROG('GetInitialGuess')
DRAKE_PERFECT_FORWARD_MATH_PROG('SetInitialGuess')
DRAKE_PERFECT_FORWARD_MATH_PROG('SetInitialGuessForAllVariables')
DRAKE_PERFECT_FORWARD_MATH_PROG('SetDecisionVariableValueInVector')
DRAKE_PERFECT_FORWARD_MATH_PROG('SetSolverOption')
DRAKE_PERFECT_FORWARD_MATH_PROG('solver_options')
DRAKE_PERFECT_FORWARD_MATH_PROG('GetSolverOptionsDouble')
DRAKE_PERFECT_FORWARD_MATH_PROG('GetSolverOptionsInt')
DRAKE_PERFECT_FORWARD_MATH_PROG('GetSolverOptionsStr')
DRAKE_PERFECT_FORWARD_MATH_PROG('visualization_callbacks')
DRAKE_PERFECT_FORWARD_MATH_PROG('generic_costs')
DRAKE_PERFECT_FORWARD_MATH_PROG('generic_constraints')
DRAKE_PERFECT_FORWARD_MATH_PROG('linear_equality_constraints')
DRAKE_PERFECT_FORWARD_MATH_PROG('linear_costs')
DRAKE_PERFECT_FORWARD_MATH_PROG('quadratic_costs')
DRAKE_PERFECT_FORWARD_MATH_PROG('l2norm_costs')
DRAKE_PERFECT_FORWARD_MATH_PROG('linear_constraints')
DRAKE_PERFECT_FORWARD_MATH_PROG('lorentz_cone_constraints')
DRAKE_PERFECT_FORWARD_MATH_PROG('rotated_lorentz_cone_constraints')
DRAKE_PERFECT_FORWARD_MATH_PROG('positive_semidefinite_constraints')
DRAKE_PERFECT_FORWARD_MATH_PROG('linear_matrix_inequality_constraints')
DRAKE_PERFECT_FORWARD_MATH_PROG('exponential_cone_constraints')
DRAKE_PERFECT_FORWARD_MATH_PROG('bounding_box_constraints')
DRAKE_PERFECT_FORWARD_MATH_PROG('GetAllCosts')
DRAKE_PERFECT_FORWARD_MATH_PROG('GetAllLinearConstraints')
DRAKE_PERFECT_FORWARD_MATH_PROG('GetAllConstraints')
DRAKE_PERFECT_FORWARD_MATH_PROG('num_vars')
DRAKE_PERFECT_FORWARD_MATH_PROG('num_indeterminates')
DRAKE_PERFECT_FORWARD_MATH_PROG('initial_guess')
DRAKE_PERFECT_FORWARD_MATH_PROG('FindDecisionVariableIndex')
DRAKE_PERFECT_FORWARD_MATH_PROG('FindDecisionVariableIndices')
DRAKE_PERFECT_FORWARD_MATH_PROG('FindIndeterminateIndex')
DRAKE_PERFECT_FORWARD_MATH_PROG('EvalBinding')
DRAKE_PERFECT_FORWARD_MATH_PROG('EvalBindings')
DRAKE_PERFECT_FORWARD_MATH_PROG('GetBindingVariableValues')
DRAKE_PERFECT_FORWARD_MATH_PROG('EvalVisualizationCallbacks')
DRAKE_PERFECT_FORWARD_MATH_PROG('EvalBindingAtInitialGuess')
DRAKE_PERFECT_FORWARD_MATH_PROG('CheckSatisfied')
DRAKE_PERFECT_FORWARD_MATH_PROG('CheckSatisfiedAtInitialGuess')
DRAKE_PERFECT_FORWARD_MATH_PROG('decision_variables')
DRAKE_PERFECT_FORWARD_MATH_PROG('decision_variable')
DRAKE_PERFECT_FORWARD_MATH_PROG('indeterminates')
DRAKE_PERFECT_FORWARD_MATH_PROG('indeterminate')
DRAKE_PERFECT_FORWARD_MATH_PROG('required_capabilities')
DRAKE_PERFECT_FORWARD_MATH_PROG('decision_variable_index')
DRAKE_PERFECT_FORWARD_MATH_PROG('indeterminates_index')
DRAKE_PERFECT_FORWARD_MATH_PROG('GetVariableScaling')
DRAKE_PERFECT_FORWARD_MATH_PROG('SetVariableScaling')
DRAKE_PERFECT_FORWARD_MATH_PROG('RemoveCost')
DRAKE_PERFECT_FORWARD_MATH_PROG('RemoveConstraint')
