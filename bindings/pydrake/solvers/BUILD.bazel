# -*- python -*-

load("@drake//tools/install:install.bzl", "install")
load(
    "@drake//tools/skylark:test_tags.bzl",
    "gurobi_test_tags",
    "mosek_test_tags",
)
load(
    "@drake//tools/skylark:drake_cc.bzl",
    "drake_cc_library",
)
load(
    "@drake//tools/skylark:pybind.bzl",
    "drake_pybind_library",
    "get_drake_py_installs",
    "get_pybind_package_info",
)
load(
    "@drake//tools/skylark:drake_py.bzl",
    "drake_py_library",
    "drake_py_test",
    "drake_py_unittest",
)
load(
    "@drake//tools/skylark:alias.bzl",
    "drake_py_library_aliases",
)
load("//bindings/pydrake:pydrake.bzl", "add_lint_tests_pydrake")

package(default_visibility = [
    "//bindings/pydrake:__subpackages__",
])

# This determines how `PYTHONPATH` is configured, and how to install the
# bindings.
PACKAGE_INFO = get_pybind_package_info("//bindings")

drake_py_library(
    name = "module_py",
    srcs = ["__init__.py"],
    imports = PACKAGE_INFO.py_imports,
    deps = [
        "//bindings/pydrake:module_py",
    ],
)

# TODO(eric.cousineau): Rename `mathematicalprogram` to
# `mathematical_program` when `pydrake` is renamed to `drake`.
drake_pybind_library(
    name = "mathematicalprogram_py",
    cc_deps = [
        "//bindings/pydrake:autodiff_types_pybind",
        "//bindings/pydrake:documentation_pybind",
        "//bindings/pydrake:symbolic_types_pybind",
        "//bindings/pydrake/common:deprecation_pybind",
        "//bindings/pydrake/common:drake_optional_pybind",
    ],
    cc_srcs = ["mathematicalprogram_py.cc"],
    package_info = PACKAGE_INFO,
    py_deps = [
        "//bindings/pydrake:autodiffutils_py",
        "//bindings/pydrake:symbolic_py",
    ],
)

drake_cc_library(
    name = "solvers_pybind",
    hdrs = ["solvers_pybind.h"],
    declare_installed_headers = 0,
    visibility = ["//visibility:public"],
)

drake_pybind_library(
    name = "gurobi_py",
    cc_deps = [
        ":solvers_pybind",
        "//bindings/pydrake:documentation_pybind",
    ],
    cc_srcs = ["gurobi_py.cc"],
    package_info = PACKAGE_INFO,
    py_deps = [":mathematicalprogram_py"],
)

drake_pybind_library(
    name = "ipopt_py",
    cc_deps = ["//bindings/pydrake:documentation_pybind"],
    cc_srcs = ["ipopt_py.cc"],
    package_info = PACKAGE_INFO,
    py_deps = [":mathematicalprogram_py"],
)

drake_pybind_library(
    name = "mosek_py",
    cc_deps = [
        ":solvers_pybind",
        "//bindings/pydrake:documentation_pybind",
    ],
    cc_srcs = ["mosek_py.cc"],
    package_info = PACKAGE_INFO,
    py_deps = [":mathematicalprogram_py"],
)

drake_pybind_library(
    name = "osqp_py",
    cc_deps = [
        "//bindings/pydrake:documentation_pybind",
        # TODO(jwnimmer-tri) Only for AbstractValue; we should switch this to
        # depend on on pydrake/common once the Value bindings have moved there.
        "//bindings/pydrake/systems:systems_pybind",
    ],
    cc_srcs = ["osqp_py.cc"],
    package_info = PACKAGE_INFO,
    py_deps = [
        ":mathematicalprogram_py",
        # TODO(jwnimmer-tri) Only for AbstractValue; we should switch this to
        # depend on on pydrake/common once the Value bindings have moved there.
        "//bindings/pydrake/systems:framework_py",
    ],
)

drake_pybind_library(
    name = "snopt_py",
    cc_deps = ["//bindings/pydrake:documentation_pybind"],
    cc_srcs = ["snopt_py.cc"],
    package_info = PACKAGE_INFO,
    py_deps = [":mathematicalprogram_py"],
)

PY_LIBRARIES_ATTIC_ALIASES = [
    ":ik_py",
]

drake_py_library_aliases(
    actual_subdir = "bindings/pydrake/attic/solvers",
    add_deprecation_warning = 1,
    deprecation_removal_date = "2019-05-01",
    relative_labels = PY_LIBRARIES_ATTIC_ALIASES,
)

PY_LIBRARIES_WITH_INSTALL = [
    ":gurobi_py",
    ":ipopt_py",
    ":mathematicalprogram_py",
    ":mosek_py",
    ":osqp_py",
    ":snopt_py",
]

PY_LIBRARIES = PY_LIBRARIES_ATTIC_ALIASES + [
    ":module_py",
]

# Symbol roll-up (for user ease).
drake_py_library(
    name = "all_py",
    srcs = ["all.py"],
    deps = PY_LIBRARIES_WITH_INSTALL + PY_LIBRARIES,
)

# Package roll-up (for Bazel dependencies).
drake_py_library(
    name = "solvers",
    deps = [":all_py"],
)

install(
    name = "install",
    targets = PY_LIBRARIES + [":all_py"],
    py_dest = PACKAGE_INFO.py_dest,
    deps = get_drake_py_installs(PY_LIBRARIES_WITH_INSTALL),
)

drake_py_unittest(
    name = "gurobi_solver_test",
    tags = gurobi_test_tags(),
    deps = [":gurobi_py"],
)

drake_py_unittest(
    name = "ipopt_solver_test",
    args = select({
        "//tools:no_ipopt": ["TestIpoptSolver.unavailable"],
        "//conditions:default": [],
    }),
    deps = [
        ":ipopt_py",
        "//bindings/pydrake/common/test_utilities",
    ],
)

drake_py_unittest(
    name = "mosek_solver_test",
    tags = mosek_test_tags(),
    deps = [":mosek_py"],
)

drake_py_unittest(
    name = "osqp_solver_test",
    args = select({
        "//tools:no_osqp": ["TestOsqpSolver.unavailable"],
        "//conditions:default": [],
    }),
    deps = [":osqp_py"],
)

drake_py_unittest(
    name = "mathematicalprogram_test",
    tags = gurobi_test_tags(gurobi_required = False),
    deps = [
        ":gurobi_py",
        ":mathematicalprogram_py",
        ":snopt_py",
        "//bindings/pydrake/common/test_utilities",
    ],
)

add_lint_tests_pydrake()
