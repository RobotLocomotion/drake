# -*- python -*-
# Backwards-compatibility aliases.

load("@drake//tools/install:install.bzl", "install")
load("//tools/lint:lint.bzl", "add_lint_tests")
load(
    "@drake//tools/skylark:drake_cc.bzl",
    "drake_cc_test",
)
load(
    "@drake//tools/skylark:pybind.bzl",
    "get_pybind_package_info",
)
load(
    "@drake//tools/skylark:drake_py.bzl",
    "drake_py_library",
    "drake_py_test",
)
load(":build_macros.bzl", "util_cc_alias", "util_py_alias")

package(default_visibility = [
    "//bindings/pydrake:__subpackages__",
])

# This determines how `PYTHONPATH` is configured, and how to install the
# bindings.
PACKAGE_INFO = get_pybind_package_info("//bindings")

drake_py_library(
    name = "module_py",
    srcs = ["__init__.py"],
)

py_alias_names = [
    ":compatibility_py",
    ":containers_py",
    ":cpp_const_py",
    ":cpp_param_py",
    ":cpp_template_py",
    ":deprecation_py",
    ":eigen_geometry_py",
    ":pybind11_version_py",
]

[
    util_py_alias(name = name[1:])
    for name in py_alias_names
]

PY_LIBRARIES = py_alias_names + [
    ":module_py",
]

cc_alias_names = [
    ":cpp_param_pybind",
    ":cpp_template_pybind",
    ":deprecation_pybind",
    ":drake_optional_pybind",
    ":eigen_geometry_pybind",
    ":eigen_pybind",
    ":type_pack",
    ":type_safe_index_pybind",
    ":wrap_function",
    ":wrap_pybind",
]

[
    util_cc_alias(name = name[1:])
    for name in cc_alias_names
]

# Symbol roll-up (for user ease).
drake_py_library(
    name = "all_py",
    srcs = ["all.py"],
    deps = PY_LIBRARIES,
)

# Package roll-up (for Bazel dependencies).
drake_py_library(
    name = "util",
    imports = PACKAGE_INFO.py_imports,
    deps = [":all_py"],
)

install(
    name = "install",
    targets = PY_LIBRARIES + [":all_py"],
    py_dest = PACKAGE_INFO.py_dest,
)

drake_cc_test(
    name = "alias_cc_test",
    # Using `drake_shared_library` can cause timeouts in debug mode.
    timeout = "moderate",
    deps = cc_alias_names,
)

drake_py_test(
    name = "alias_py_test",
    allow_import_unittest = True,
    deps = [":util"],
)

add_lint_tests(
    cpplint_data = ["//bindings/pydrake:.clang-format"],
    enable_clang_format_lint = True,
)
