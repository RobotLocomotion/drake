# -*- python -*-

load("@drake//tools/install:install.bzl", "install")
load(
    "@drake//tools/skylark:pybind.bzl",
    "add_pybind_coverage_data",
    "drake_pybind_library",
    "get_drake_py_installs",
    "get_pybind_package_info",
)
load(
    "@drake//tools/skylark:drake_py.bzl",
    "drake_py_library",
    "drake_py_unittest",
)
load("//bindings/pydrake:pydrake.bzl", "add_lint_tests_pydrake")

package(default_visibility = [
    "//bindings/pydrake:__subpackages__",
])

# This determines how `PYTHONPATH` is configured, and how to install the
# bindings.
PACKAGE_INFO = get_pybind_package_info("//bindings")

drake_py_library(
    name = "module_py",
    srcs = ["__init__.py"],
    imports = PACKAGE_INFO.py_imports,
    deps = [
        "//bindings/pydrake:module_py",
    ],
)

# 2023-06-01 Remove this target upon completion of deprecation.
drake_py_library(
    name = "planner_py",
    srcs = ["planner.py"],
    imports = PACKAGE_INFO.py_imports,
    deps = ["//bindings/pydrake/multibody:inverse_kinematics_py"],
)

drake_pybind_library(
    name = "kuka_iiwa_py",
    cc_deps = [
        "//bindings/pydrake:documentation_pybind",
        "//bindings/pydrake/common:eigen_pybind",
        "//bindings/pydrake/common:serialize_pybind",
    ],
    cc_srcs = ["kuka_iiwa_py.cc"],
    package_info = PACKAGE_INFO,
    py_deps = [
        ":module_py",
    ],
)

drake_pybind_library(
    name = "schunk_wsg_py",
    cc_deps = [
        "//bindings/pydrake:documentation_pybind",
        "//bindings/pydrake/common:eigen_pybind",
        "//bindings/pydrake/common:serialize_pybind",
    ],
    cc_srcs = ["schunk_wsg_py.cc"],
    package_info = PACKAGE_INFO,
    py_deps = [
        ":module_py",
    ],
)

drake_pybind_library(
    name = "util_py",
    cc_deps = [
        "//bindings/pydrake:documentation_pybind",
        "//bindings/pydrake/common:eigen_pybind",
        "//bindings/pydrake/common:serialize_pybind",
    ],
    cc_srcs = ["util_py.cc"],
    package_info = PACKAGE_INFO,
    py_deps = [
        ":module_py",
    ],
)

PY_LIBRARIES_WITH_INSTALL = [
    ":kuka_iiwa_py",
    ":schunk_wsg_py",
    ":util_py",
]

PY_LIBRARIES = [
    ":module_py",
    ":planner_py",
]

drake_py_unittest(
    name = "kuka_iiwa_test",
    data = [
        "//manipulation/models/iiwa_description:models",
        "//manipulation/util:test_directives",
    ],
    deps = [
        ":kuka_iiwa_py",
        "//bindings/pydrake/multibody",
        "//bindings/pydrake/systems",
    ],
)

drake_py_unittest(
    name = "planner_deprecated_test",
    deps = [
        ":planner_py",
        "//bindings/pydrake/common/test_utilities:deprecation_py",
    ],
)

drake_py_unittest(
    name = "schunk_wsg_test",
    data = [
        "//manipulation/util:test_directives",
    ],
    deps = [
        ":schunk_wsg_py",
        "//bindings/pydrake/multibody",
        "//bindings/pydrake/systems",
    ],
)

drake_py_unittest(
    name = "util_test",
    data = [
        "//manipulation/util:test_directives",
    ],
    deps = [
        ":util_py",
        "//bindings/pydrake/multibody",
        "//bindings/pydrake/systems",
    ],
)

# Symbol roll-up (for user ease).
drake_py_library(
    name = "all_py",
    srcs = ["all.py"],
    deps = PY_LIBRARIES_WITH_INSTALL + PY_LIBRARIES,
)

# Package roll-up (for Bazel dependencies).
drake_py_library(
    name = "manipulation",
    deps = [":all_py"],
)

install(
    name = "install",
    targets = PY_LIBRARIES + [":all_py"],
    py_dest = PACKAGE_INFO.py_dest,
    deps = get_drake_py_installs(PY_LIBRARIES_WITH_INSTALL),
)

add_pybind_coverage_data()

add_lint_tests_pydrake()
