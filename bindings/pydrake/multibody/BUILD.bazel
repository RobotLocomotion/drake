# -*- python -*-

load("@drake//tools/install:install.bzl", "install")
load("//tools/lint:lint.bzl", "add_lint_tests")
load(
    "@drake//tools/skylark:pybind.bzl",
    "drake_pybind_library",
    "get_drake_py_installs",
    "get_pybind_package_info",
)
load(
    "@drake//tools/skylark:drake_py.bzl",
    "drake_py_library",
    "drake_py_unittest",
)

package(default_visibility = [
    "//bindings/pydrake:__subpackages__",
])

# This determines how `PYTHONPATH` is configured, and how to install the
# bindings.
PACKAGE_INFO = get_pybind_package_info("//bindings")

drake_py_library(
    name = "module_py",
    srcs = ["__init__.py"],
    imports = PACKAGE_INFO.py_imports,
    deps = [
        "//bindings/pydrake:module_py",
    ],
)

drake_pybind_library(
    name = "benchmarks_py",
    cc_deps = ["//bindings/pydrake:documentation_pybind"],
    cc_srcs = ["benchmarks_py.cc"],
    package_info = PACKAGE_INFO,
    py_deps = [
        ":module_py",
        ":multibody_tree_py",
    ],
)

drake_pybind_library(
    name = "multibody_tree_py",
    cc_deps = [
        "//bindings/pydrake:documentation_pybind",
        "//bindings/pydrake/systems:systems_pybind",
        "//bindings/pydrake/util:deprecation_pybind",
        "//bindings/pydrake/util:drake_optional_pybind",
        "//bindings/pydrake/util:eigen_geometry_pybind",
        "//bindings/pydrake/util:type_safe_index_pybind",
    ],
    cc_srcs = ["multibody_tree_py.cc"],
    package_info = PACKAGE_INFO,
    py_deps = [
        ":module_py",
        "//bindings/pydrake:geometry_py",
        "//bindings/pydrake/systems:framework_py",
        "//bindings/pydrake/util:eigen_geometry_py",
    ],
)

drake_pybind_library(
    name = "parsers_py",
    cc_deps = ["//bindings/pydrake:documentation_pybind"],
    cc_srcs = ["parsers_py.cc"],
    package_info = PACKAGE_INFO,
    py_deps = [
        ":module_py",
    ],
)

drake_pybind_library(
    name = "rigid_body_plant_py",
    cc_deps = [
        "//bindings/pydrake:documentation_pybind",
        "//bindings/pydrake/systems:systems_pybind",
        "//lcmtypes:viewer",
    ],
    cc_srcs = ["rigid_body_plant_py.cc"],
    package_info = PACKAGE_INFO,
    py_deps = [
        ":module_py",
        ":rigid_body_tree_py",
        "//bindings/pydrake:lcm_py",
        "//bindings/pydrake/systems:framework_py",
    ],
)

drake_pybind_library(
    name = "rigid_body_tree_py",
    cc_deps = [
        "//bindings/pydrake:autodiff_types_pybind",
        "//bindings/pydrake:documentation_pybind",
        "//bindings/pydrake/util:type_pack",
    ],
    cc_srcs = ["rigid_body_tree_py.cc"],
    package_info = PACKAGE_INFO,
    py_deps = [
        ":collision_py",
        ":joints_py",
        ":module_py",
        ":parsers_py",
        ":rigid_body_py",
        ":shapes_py",
        "//bindings/pydrake:autodiffutils_py",
        "//bindings/pydrake/util:eigen_geometry_py",
    ],
)

drake_pybind_library(
    name = "collision_py",
    cc_deps = ["//bindings/pydrake:documentation_pybind"],
    cc_srcs = ["collision_py.cc"],
    package_info = PACKAGE_INFO,
    py_deps = [
        ":module_py",
        ":rigid_body_py",
        ":shapes_py",
    ],
)

drake_pybind_library(
    name = "joints_py",
    cc_deps = [
        "//bindings/pydrake:documentation_pybind",
        "//bindings/pydrake/util:eigen_geometry_pybind",
    ],
    cc_srcs = ["joints_py.cc"],
    package_info = PACKAGE_INFO,
    py_deps = [
        ":module_py",
        "//bindings/pydrake/util:eigen_geometry_py",
    ],
)

drake_pybind_library(
    name = "rigid_body_py",
    cc_deps = ["//bindings/pydrake:documentation_pybind"],
    cc_srcs = ["rigid_body_py.cc"],
    package_info = PACKAGE_INFO,
    py_deps = [
        ":module_py",
        ":shapes_py",
    ],
)

drake_pybind_library(
    name = "shapes_py",
    cc_deps = ["//bindings/pydrake:documentation_pybind"],
    cc_srcs = ["shapes_py.cc"],
    package_info = PACKAGE_INFO,
    py_deps = [
        ":module_py",
        "//bindings/pydrake/util:eigen_geometry_py",
    ],
)

drake_pybind_library(
    name = "inverse_kinematics_py",
    cc_deps = [
        "//bindings/pydrake:documentation_pybind",
        "//bindings/pydrake:symbolic_types_pybind",
    ],
    cc_srcs = ["inverse_kinematics_py.cc"],
    package_info = PACKAGE_INFO,
    py_deps = [
        ":module_py",
        ":multibody_tree_py",
        "//bindings/pydrake/solvers:mathematicalprogram_py",
    ],
)

PY_LIBRARIES_WITH_INSTALL = [
    ":benchmarks_py",
    ":collision_py",
    ":inverse_kinematics_py",
    ":joints_py",
    ":multibody_tree_py",
    ":parsers_py",
    ":rigid_body_py",
    ":rigid_body_plant_py",
    ":rigid_body_tree_py",
    ":shapes_py",
]

PY_LIBRARIES = [
    ":module_py",
]

# Symbol roll-up (for user ease).
drake_py_library(
    name = "all_py",
    srcs = ["all.py"],
    deps = PY_LIBRARIES_WITH_INSTALL + PY_LIBRARIES,
)

# Package roll-up (for Bazel dependencies).
drake_py_library(
    name = "multibody",
    deps = [":all_py"],
)

install(
    name = "install",
    targets = PY_LIBRARIES + [":all_py"],
    py_dest = PACKAGE_INFO.py_dest,
    deps = get_drake_py_installs(PY_LIBRARIES_WITH_INSTALL),
)

filegroup(
    name = "models",
    srcs = glob([
        "**/*.sdf",
    ]),
)

drake_py_unittest(
    name = "rigid_body_plant_test",
    data = ["//examples/pendulum:models"],
    deps = [
        ":rigid_body_plant_py",
    ],
)

drake_py_unittest(
    name = "shapes_test",
    data = ["//examples/quadrotor:models"],
    deps = [
        ":shapes_py",
    ],
)

drake_py_unittest(
    name = "rigid_body_tree_test",
    data = [
        "//examples/atlas:models",
        "//examples/pendulum:models",
        "//examples/simple_four_bar:models",
    ],
    deps = [":rigid_body_tree_py"],
)

drake_py_unittest(
    name = "parsers_test",
    data = [
        "//examples/acrobot:models",
        "//examples/atlas:models",
        "//examples/pr2:models",
    ],
    deps = [
        ":parsers_py",
        ":rigid_body_tree_py",
    ],
)

drake_py_unittest(
    name = "multibody_tree_test",
    data = [
        "//examples/double_pendulum:models",
        "//manipulation/models/iiwa_description:models",
        "//manipulation/models/wsg_50_description:models",
        "//multibody/benchmarks/acrobot:models",
    ],
    deps = [
        ":benchmarks_py",
        ":multibody_tree_py",
    ],
)

drake_py_unittest(
    name = "inverse_kinematics_test",
    data = [
        ":models",
    ],
    deps = [
        ":benchmarks_py",
        ":inverse_kinematics_py",
    ],
)

add_lint_tests()
