# -*- python -*-

load("@drake//tools/install:install.bzl", "install")
load(
    "@drake//tools/skylark:pybind.bzl",
    "drake_pybind_library",
    "get_drake_py_installs",
    "get_pybind_package_info",
)
load(
    "@drake//tools/skylark:drake_py.bzl",
    "drake_py_library",
    "drake_py_unittest",
)
load(
    "@drake//tools/skylark:alias.bzl",
    "drake_py_library_aliases",
)
load("//bindings/pydrake:pydrake.bzl", "add_lint_tests_pydrake")

package(default_visibility = [
    "//bindings/pydrake:__subpackages__",
])

# This determines how `PYTHONPATH` is configured, and how to install the
# bindings.
PACKAGE_INFO = get_pybind_package_info("//bindings")

drake_py_library(
    name = "module_py",
    srcs = ["__init__.py"],
    imports = PACKAGE_INFO.py_imports,
    deps = [
        "//bindings/pydrake:module_py",
    ],
)

drake_pybind_library(
    name = "benchmarks_py",
    cc_deps = ["//bindings/pydrake:documentation_pybind"],
    cc_srcs = ["benchmarks_py.cc"],
    package_info = PACKAGE_INFO,
    py_deps = [
        ":module_py",
        ":multibody_tree_py",
    ],
)

drake_pybind_library(
    name = "math_py",
    cc_deps = [
        "//bindings/pydrake:documentation_pybind",
    ],
    cc_srcs = ["math_py.cc"],
    package_info = PACKAGE_INFO,
    py_deps = [":module_py"],
)

drake_pybind_library(
    name = "tree_py",
    cc_deps = [
        "//bindings/pydrake:documentation_pybind",
        "//bindings/pydrake/common:deprecation_pybind",
        "//bindings/pydrake/common:drake_optional_pybind",
        "//bindings/pydrake/common:eigen_geometry_pybind",
        "//bindings/pydrake/common:type_safe_index_pybind",
    ],
    cc_srcs = ["tree_py.cc"],
    package_info = PACKAGE_INFO,
    py_deps = [
        ":math_py",
        ":module_py",
        "//bindings/pydrake/common:eigen_geometry_py",
        "//bindings/pydrake/systems:framework_py",
    ],
)

drake_pybind_library(
    name = "plant_py",
    cc_deps = [
        "//bindings/pydrake:documentation_pybind",
        "//bindings/pydrake/common:deprecation_pybind",
        "//bindings/pydrake/common:drake_optional_pybind",
        "//bindings/pydrake/common:eigen_geometry_pybind",
        "//bindings/pydrake/common:type_safe_index_pybind",
        "//bindings/pydrake/common:value_pybind",
    ],
    cc_srcs = ["plant_py.cc"],
    package_info = PACKAGE_INFO,
    py_deps = [
        ":math_py",
        ":module_py",
        ":tree_py",
        "//bindings/pydrake:geometry_py",
    ],
)

drake_pybind_library(
    name = "multibody_tree_py",
    cc_deps = [
        "//bindings/pydrake/common:deprecation_pybind",
    ],
    cc_srcs = ["multibody_tree_py.cc"],
    package_info = PACKAGE_INFO,
    py_deps = [
        ":math_py",
        ":module_py",
        ":parsing_py",
        ":plant_py",
        ":tree_py",
    ],
)

drake_pybind_library(
    name = "parsing_py",
    cc_deps = ["//bindings/pydrake:documentation_pybind"],
    cc_srcs = ["parsing_py.cc"],
    package_info = PACKAGE_INFO,
    py_deps = [
        ":module_py",
    ],
)

drake_pybind_library(
    name = "inverse_kinematics_py",
    cc_deps = [
        "//bindings/pydrake:documentation_pybind",
        "//bindings/pydrake:symbolic_types_pybind",
    ],
    cc_srcs = ["inverse_kinematics_py.cc"],
    package_info = PACKAGE_INFO,
    py_deps = [
        ":module_py",
        ":multibody_tree_py",
        "//bindings/pydrake/solvers:mathematicalprogram_py",
    ],
)

PY_LIBRARIES_ATTIC_ALIASES = [
    ":collision_py",
    ":joints_py",
    ":parsers_py",
    ":rigid_body_plant_py",
    ":rigid_body_py",
    ":rigid_body_tree_py",
    ":shapes_py",
]

drake_py_library_aliases(
    actual_subdir = "bindings/pydrake/attic/multibody",
    add_deprecation_warning = 1,
    deprecation_removal_date = "2019-06-01",
    relative_labels = PY_LIBRARIES_ATTIC_ALIASES,
)

PY_LIBRARIES_WITH_INSTALL = [
    ":benchmarks_py",
    ":inverse_kinematics_py",
    ":math_py",
    ":multibody_tree_py",
    ":parsing_py",
    ":plant_py",
    ":tree_py",
]

PY_LIBRARIES = PY_LIBRARIES_ATTIC_ALIASES + [
    ":module_py",
]

# Symbol roll-up (for user ease).
drake_py_library(
    name = "all_py",
    srcs = ["all.py"],
    deps = PY_LIBRARIES_WITH_INSTALL + PY_LIBRARIES,
)

# Package roll-up (for Bazel dependencies).
drake_py_library(
    name = "multibody",
    deps = [":all_py"],
)

install(
    name = "install",
    targets = PY_LIBRARIES + [":all_py"],
    py_dest = PACKAGE_INFO.py_dest,
    deps = get_drake_py_installs(PY_LIBRARIES_WITH_INSTALL),
)

filegroup(
    name = "models",
    srcs = glob([
        "**/*.sdf",
    ]),
)

drake_py_unittest(
    name = "parsing_test",
    data = [
        "//examples/atlas:models",
        "//multibody/benchmarks/acrobot:models",
    ],
    deps = [
        ":multibody_tree_py",
        ":parsing_py",
    ],
)

drake_py_unittest(
    name = "plant_test",
    data = [
        ":models",
        "//examples/double_pendulum:models",
        "//manipulation/models/iiwa_description:models",
        "//manipulation/models/wsg_50_description:models",
        "//multibody/benchmarks/acrobot:models",
    ],
    deps = [
        ":benchmarks_py",
        ":multibody_tree_py",
        ":plant_py",
        ":tree_py",
        "//bindings/pydrake/common/test_utilities",
    ],
)

drake_py_unittest(
    name = "math_test",
    deps = [":math_py"],
)

drake_py_unittest(
    name = "inverse_kinematics_test",
    data = [
        ":models",
    ],
    deps = [
        ":benchmarks_py",
        ":inverse_kinematics_py",
        "//bindings/pydrake/common/test_utilities",
    ],
)

add_lint_tests_pydrake()
