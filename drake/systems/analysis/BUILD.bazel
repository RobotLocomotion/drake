# -*- python -*-

load("//tools:drake.bzl", "drake_cc_googletest", "drake_cc_library")
load("//tools/lint:lint.bzl", "add_lint_tests")

package(default_visibility = ["//visibility:public"])

drake_cc_library(
    name = "analysis",
    srcs = [],
    hdrs = [],
    deps = [
        ":explicit_euler_integrator",
        ":implicit_euler_integrator",
        ":runge_kutta2_integrator",
        ":runge_kutta3_integrator",
        ":semi_explicit_euler_integrator",
        ":simulator",
    ],
)

drake_cc_library(
    name = "integrator_base",
    hdrs = ["integrator_base.h"],
    deps = [
        "//drake/systems/framework:context",
        "//drake/systems/framework:system",
    ],
)

drake_cc_library(
    name = "explicit_euler_integrator",
    srcs = [],
    hdrs = ["explicit_euler_integrator.h"],
    deps = [
        ":integrator_base",
    ],
)

drake_cc_library(
    name = "runge_kutta2_integrator",
    srcs = [],
    hdrs = ["runge_kutta2_integrator.h"],
    deps = [
        ":integrator_base",
    ],
)

drake_cc_library(
    name = "implicit_euler_integrator",
    srcs = ["implicit_euler_integrator.cc"],
    hdrs = [
        "implicit_euler_integrator.h",
        "implicit_euler_integrator-inl.h",
    ],
    deps = [
        ":integrator_base",
        "//drake/math:gradient",
    ],
)

drake_cc_library(
    name = "runge_kutta3_integrator",
    srcs = ["runge_kutta3_integrator.cc"],
    hdrs = [
        "runge_kutta3_integrator.h",
        "runge_kutta3_integrator-inl.h",
    ],
    deps = [
        ":integrator_base",
        ":runge_kutta2_integrator",
    ],
)

drake_cc_library(
    name = "semi_explicit_euler_integrator",
    srcs = [],
    hdrs = [
        "semi_explicit_euler_integrator.h",
    ],
    deps = [
        ":integrator_base",
    ],
)

drake_cc_library(
    name = "simulator",
    srcs = ["simulator.cc"],
    hdrs = ["simulator.h"],
    deps = [
        ":runge_kutta2_integrator",
        ":runge_kutta3_integrator",
        "//drake/common:extract_double",
        "//drake/systems/framework:context",
        "//drake/systems/framework:system",
    ],
)

# === test/ ===

drake_cc_googletest(
    name = "simulator_test",
    deps = [
        ":explicit_euler_integrator",
        ":implicit_euler_integrator",
        ":runge_kutta3_integrator",
        ":simulator",
        "//drake/common/test_utilities:is_dynamic_castable",
        "//drake/systems/analysis/test_utilities",
    ],
)

drake_cc_googletest(
    name = "explicit_euler_integrator_test",
    deps = [
        ":explicit_euler_integrator",
        "//drake/systems/analysis/test_utilities",
    ],
)

drake_cc_googletest(
    name = "implicit_euler_integrator_test",
    # Test size increased to not timeout when run with Valgrind.
    size = "large",
    deps = [
        ":implicit_euler_integrator",
        "//drake/systems/analysis/test_utilities",
        "//drake/systems/plants/spring_mass_system",
    ],
)

drake_cc_googletest(
    name = "runge_kutta2_integrator_test",
    deps = [
        ":runge_kutta2_integrator",
        "//drake/systems/analysis/test_utilities",
    ],
)

drake_cc_googletest(
    name = "runge_kutta3_integrator_test",
    # Test size increased to not timeout when run with Valgrind.
    size = "medium",
    deps = [
        ":runge_kutta3_integrator",
        "//drake/math:geometric_transform",
        "//drake/multibody/parsers",
        "//drake/multibody/rigid_body_plant",
        "//drake/systems/analysis/test_utilities",
    ],
)

drake_cc_googletest(
    name = "semi_explicit_euler_integrator_test",
    # Test size increased to not timeout when run with Valgrind.
    size = "medium",
    deps = [
        ":explicit_euler_integrator",
        ":semi_explicit_euler_integrator",
        "//drake/multibody/joints",
        "//drake/multibody/rigid_body_plant",
        "//drake/systems/analysis/test_utilities",
    ],
)

add_lint_tests()
