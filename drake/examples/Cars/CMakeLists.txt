if (LCM_FOUND)
  include_directories(${PROJECT_SOURCE_DIR}/pod-build/lcmgen)
  add_executable(carSimLCM simulateLCM.cpp)
  target_link_libraries(carSimLCM drakeRBSystem drakeLCMSystem)
  add_dependencies(carSimLCM drake_lcmtypes lcmtype_agg_hpp)
#  add_test(NAME carSimLCM COMMAND carSimLCM WORKING_DIRECTORY ${PROJECT_SOURCE_DIR}/examples/Cars)

if(roscpp_FOUND)
  # message(STATUS "=============================================================")
  # get_cmake_property(_variableNames VARIABLES)
  # foreach (_variableName ${_variableNames})
  #     message(STATUS "${_variableName}=${${_variableName}}")
  # endforeach()
  # message(STATUS "=============================================================")

  add_executable(carSimLCMandROS simulateLCMandROS.cpp)
  # add_dependencies(carSimLCMandROS ${PROJECT_NAME}_generate_messages)
  target_link_libraries(carSimLCMandROS drakeRBM drakeRBSystem drakeLCMSystem ${roscpp_LIBRARIES})
endif()

  add_executable(publishDrivingCommand publishDrivingCommand.cpp)
  add_dependencies(publishDrivingCommand drake_lcmtypes lcmtype_agg_hpp)
  pods_use_pkg_config_packages(publishDrivingCommand lcm)
  add_test(NAME publishDrivingCommand COMMAND publishDrivingCommand 1.0 0.0)
endif (LCM_FOUND)
