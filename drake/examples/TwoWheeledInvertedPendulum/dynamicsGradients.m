function [df, d2f, d3f] = dynamicsGradients(a1, a2, a3, a4, order)
% This is an auto-generated file.
%
% See <a href="matlab: help generateGradients">generateGradients</a>. 

% Check inputs:
typecheck(a1,'TWIP');
if (nargin<4) order=1; end
if (order<1) error(' order must be >= 1'); end
sizecheck(a1,[1  1]);
sizecheck(a2,[1  1]);
sizecheck(a3,[4  1]);
sizecheck(a4,[1  1]);

% Symbol table:
I1=a1.I1;
I2=a1.I2;
Ke=a1.Ke;
Kt=a1.Kt;
L=a1.L;
R=a1.R;
Rm=a1.Rm;
V=a1.V;
a3_1=a3(1);
a3_3=a3(3);
a3_4=a3(4);
a4_1=a4(1);
cfm=a1.cfm;
cfw=a1.cfw;
g=a1.g;
m1=a1.m1;
m2=a1.m2;


% Compute Gradients:
df = sparse(4,6);
df(1,4) = 1;
df(2,5) = 1;
df(3,2) = (L*m1*(50*I2*Rm*g*cos(a3_1) + 100*Ke*Kt*R*a3_3*sin(a3_1) - 100*Ke*Kt*R*a3_4*sin(a3_1) - Kt*R*V*a4_1*sin(a3_1) + 50*R*Rm*a3_3*cfm*sin(a3_1) - 50*R*Rm*a3_4*cfm*sin(a3_1) - 50*R*Rm*a3_4*cfw*sin(a3_1) + 50*R^2*Rm*g*m1*cos(a3_1) + 50*R^2*Rm*g*m2*cos(a3_1) - 50*L*R^2*Rm*a3_3^2*m1*(2*cos(a3_1)^2 - 1)))/(50*Rm*(I1*I2 + L^2*R^2*m1^2 + I2*L^2*m1 + I1*R^2*m1 + I1*R^2*m2 + L^2*R^2*m1*m2 - L^2*R^2*m1^2*cos(a3_1)^2)) - (L^2*R^2*m1^2*cos(a3_1)*sin(a3_1)*(100*I2*Ke*Kt*a3_4 - 100*I2*Ke*Kt*a3_3 + I2*Kt*V*a4_1 - 50*I2*Rm*a3_3*cfm + 50*I2*Rm*a3_4*cfm - 100*Ke*Kt*R^2*a3_3*m1 - 100*Ke*Kt*R^2*a3_3*m2 + 100*Ke*Kt*R^2*a3_4*m1 + 100*Ke*Kt*R^2*a3_4*m2 + Kt*R^2*V*a4_1*m1 + Kt*R^2*V*a4_1*m2 - 50*R^2*Rm*a3_3*cfm*m1 - 50*R^2*Rm*a3_3*cfm*m2 + 50*R^2*Rm*a3_4*cfm*m1 + 50*R^2*Rm*a3_4*cfm*m2 + 50*L*R^2*Rm*g*m1^2*sin(a3_1) - 25*L^2*R^2*Rm*a3_3^2*m1^2*sin(2*a3_1) + 50*I2*L*Rm*g*m1*sin(a3_1) - 100*Ke*Kt*L*R*a3_3*m1*cos(a3_1) + 100*Ke*Kt*L*R*a3_4*m1*cos(a3_1) + Kt*L*R*V*a4_1*m1*cos(a3_1) - 50*L*R*Rm*a3_3*cfm*m1*cos(a3_1) + 50*L*R*Rm*a3_4*cfm*m1*cos(a3_1) + 50*L*R*Rm*a3_4*cfw*m1*cos(a3_1) + 50*L*R^2*Rm*g*m1*m2*sin(a3_1)))/(25*Rm*(I1*I2 + L^2*R^2*m1^2 + I2*L^2*m1 + I1*R^2*m1 + I1*R^2*m2 + L^2*R^2*m1*m2 - L^2*R^2*m1^2*cos(a3_1)^2)^2);
df(3,4) = -(2*I2*Ke*Kt + I2*Rm*cfm + 2*Ke*Kt*R^2*m1 + 2*Ke*Kt*R^2*m2 + R^2*Rm*cfm*m1 + R^2*Rm*cfm*m2 + L^2*R^2*Rm*a3_3*m1^2*sin(2*a3_1) + 2*Ke*Kt*L*R*m1*cos(a3_1) + L*R*Rm*cfm*m1*cos(a3_1))/(Rm*(I1*I2 + L^2*R^2*m1^2 + I2*L^2*m1 + I1*R^2*m1 + I1*R^2*m2 + L^2*R^2*m1*m2 - L^2*R^2*m1^2*cos(a3_1)^2));
df(3,5) = (2*I2*Ke*Kt + I2*Rm*cfm + 2*Ke*Kt*R^2*m1 + 2*Ke*Kt*R^2*m2 + R^2*Rm*cfm*m1 + R^2*Rm*cfm*m2 + 2*Ke*Kt*L*R*m1*cos(a3_1) + L*R*Rm*cfm*m1*cos(a3_1) + L*R*Rm*cfw*m1*cos(a3_1))/(Rm*(I1*I2 + L^2*R^2*m1^2 + I2*L^2*m1 + I1*R^2*m1 + I1*R^2*m2 + L^2*R^2*m1*m2 - L^2*R^2*m1^2*cos(a3_1)^2));
df(3,6) = (Kt*V*(I2 + R^2*m1 + R^2*m2 + L*R*m1*cos(a3_1)))/(50*Rm*(I1*I2 + L^2*R^2*m1^2 + I2*L^2*m1 + I1*R^2*m1 + I1*R^2*m2 + L^2*R^2*m1*m2 - L^2*R^2*m1^2*cos(a3_1)^2));
df(4,2) = (L*R*m1*(100*Ke*Kt*a3_4*sin(a3_1) - 100*Ke*Kt*a3_3*sin(a3_1) + Kt*V*a4_1*sin(a3_1) - 50*Rm*a3_3*cfm*sin(a3_1) + 50*Rm*a3_4*cfm*sin(a3_1) + 50*I1*Rm*a3_3^2*cos(a3_1) + 50*L^2*Rm*a3_3^2*m1*cos(a3_1) - 50*L*Rm*g*m1*(2*cos(a3_1)^2 - 1)))/(50*Rm*(I1*I2 + L^2*R^2*m1^2 + I2*L^2*m1 + I1*R^2*m1 + I1*R^2*m2 + L^2*R^2*m1*m2 - L^2*R^2*m1^2*cos(a3_1)^2)) + (L^2*R^2*m1^2*cos(a3_1)*sin(a3_1)*(100*I1*Ke*Kt*a3_4 - 100*I1*Ke*Kt*a3_3 + I1*Kt*V*a4_1 - 50*I1*Rm*a3_3*cfm + 50*I1*Rm*a3_4*cfm + 50*I1*Rm*a3_4*cfw - 100*Ke*Kt*L^2*a3_3*m1 + 100*Ke*Kt*L^2*a3_4*m1 + Kt*L^2*V*a4_1*m1 - 50*L^2*Rm*a3_3*cfm*m1 + 50*L^2*Rm*a3_4*cfm*m1 + 50*L^2*Rm*a3_4*cfw*m1 - 50*L^3*R*Rm*a3_3^2*m1^2*sin(a3_1) + 25*L^2*R*Rm*g*m1^2*sin(2*a3_1) - 100*Ke*Kt*L*R*a3_3*m1*cos(a3_1) + 100*Ke*Kt*L*R*a3_4*m1*cos(a3_1) + Kt*L*R*V*a4_1*m1*cos(a3_1) - 50*L*R*Rm*a3_3*cfm*m1*cos(a3_1) + 50*L*R*Rm*a3_4*cfm*m1*cos(a3_1) - 50*I1*L*R*Rm*a3_3^2*m1*sin(a3_1)))/(25*Rm*(I1*I2 + L^2*R^2*m1^2 + I2*L^2*m1 + I1*R^2*m1 + I1*R^2*m2 + L^2*R^2*m1*m2 - L^2*R^2*m1^2*cos(a3_1)^2)^2);
df(4,4) = (2*I1*Ke*Kt + I1*Rm*cfm + 2*Ke*Kt*L^2*m1 + L^2*Rm*cfm*m1 + 2*L^3*R*Rm*a3_3*m1^2*sin(a3_1) + 2*Ke*Kt*L*R*m1*cos(a3_1) + L*R*Rm*cfm*m1*cos(a3_1) + 2*I1*L*R*Rm*a3_3*m1*sin(a3_1))/(Rm*(I1*I2 + L^2*R^2*m1^2 + I2*L^2*m1 + I1*R^2*m1 + I1*R^2*m2 + L^2*R^2*m1*m2 - L^2*R^2*m1^2*cos(a3_1)^2));
df(4,5) = -(2*I1*Ke*Kt + I1*Rm*cfm + I1*Rm*cfw + 2*Ke*Kt*L^2*m1 + L^2*Rm*cfm*m1 + L^2*Rm*cfw*m1 + 2*Ke*Kt*L*R*m1*cos(a3_1) + L*R*Rm*cfm*m1*cos(a3_1))/(Rm*(I1*I2 + L^2*R^2*m1^2 + I2*L^2*m1 + I1*R^2*m1 + I1*R^2*m2 + L^2*R^2*m1*m2 - L^2*R^2*m1^2*cos(a3_1)^2));
df(4,6) = -(Kt*V*(I1 + L^2*m1 + L*R*m1*cos(a3_1)))/(50*Rm*(I1*I2 + L^2*R^2*m1^2 + I2*L^2*m1 + I1*R^2*m1 + I1*R^2*m2 + L^2*R^2*m1*m2 - L^2*R^2*m1^2*cos(a3_1)^2));

% d2f
if (order>=2)
  d2f = sparse(4,36);
  d2f(3,8) = (L^2*R^2*m1^2*sin(a3_1)^2*(100*I2*Ke*Kt*a3_4 - 100*I2*Ke*Kt*a3_3 + I2*Kt*V*a4_1 - 50*I2*Rm*a3_3*cfm + 50*I2*Rm*a3_4*cfm - 100*Ke*Kt*R^2*a3_3*m1 - 100*Ke*Kt*R^2*a3_3*m2 + 100*Ke*Kt*R^2*a3_4*m1 + 100*Ke*Kt*R^2*a3_4*m2 + Kt*R^2*V*a4_1*m1 + Kt*R^2*V*a4_1*m2 - 50*R^2*Rm*a3_3*cfm*m1 - 50*R^2*Rm*a3_3*cfm*m2 + 50*R^2*Rm*a3_4*cfm*m1 + 50*R^2*Rm*a3_4*cfm*m2 + 50*L*R^2*Rm*g*m1^2*sin(a3_1) - 25*L^2*R^2*Rm*a3_3^2*m1^2*sin(2*a3_1) + 50*I2*L*Rm*g*m1*sin(a3_1) - 100*Ke*Kt*L*R*a3_3*m1*cos(a3_1) + 100*Ke*Kt*L*R*a3_4*m1*cos(a3_1) + Kt*L*R*V*a4_1*m1*cos(a3_1) - 50*L*R*Rm*a3_3*cfm*m1*cos(a3_1) + 50*L*R*Rm*a3_4*cfm*m1*cos(a3_1) + 50*L*R*Rm*a3_4*cfw*m1*cos(a3_1) + 50*L*R^2*Rm*g*m1*m2*sin(a3_1)))/(25*Rm*(I1*I2 + L^2*R^2*m1^2 + I2*L^2*m1 + I1*R^2*m1 + I1*R^2*m2 + L^2*R^2*m1*m2 - L^2*R^2*m1^2*cos(a3_1)^2)^2) - (L^2*R^2*m1^2*cos(a3_1)^2*(100*I2*Ke*Kt*a3_4 - 100*I2*Ke*Kt*a3_3 + I2*Kt*V*a4_1 - 50*I2*Rm*a3_3*cfm + 50*I2*Rm*a3_4*cfm - 100*Ke*Kt*R^2*a3_3*m1 - 100*Ke*Kt*R^2*a3_3*m2 + 100*Ke*Kt*R^2*a3_4*m1 + 100*Ke*Kt*R^2*a3_4*m2 + Kt*R^2*V*a4_1*m1 + Kt*R^2*V*a4_1*m2 - 50*R^2*Rm*a3_3*cfm*m1 - 50*R^2*Rm*a3_3*cfm*m2 + 50*R^2*Rm*a3_4*cfm*m1 + 50*R^2*Rm*a3_4*cfm*m2 + 50*L*R^2*Rm*g*m1^2*sin(a3_1) - 25*L^2*R^2*Rm*a3_3^2*m1^2*sin(2*a3_1) + 50*I2*L*Rm*g*m1*sin(a3_1) - 100*Ke*Kt*L*R*a3_3*m1*cos(a3_1) + 100*Ke*Kt*L*R*a3_4*m1*cos(a3_1) + Kt*L*R*V*a4_1*m1*cos(a3_1) - 50*L*R*Rm*a3_3*cfm*m1*cos(a3_1) + 50*L*R*Rm*a3_4*cfm*m1*cos(a3_1) + 50*L*R*Rm*a3_4*cfw*m1*cos(a3_1) + 50*L*R^2*Rm*g*m1*m2*sin(a3_1)))/(25*Rm*(I1*I2 + L^2*R^2*m1^2 + I2*L^2*m1 + I1*R^2*m1 + I1*R^2*m2 + L^2*R^2*m1*m2 - L^2*R^2*m1^2*cos(a3_1)^2)^2) - (L*m1*(50*I2*Rm*g*sin(a3_1) + 50*R^2*Rm*g*m1*sin(a3_1) + 50*R^2*Rm*g*m2*sin(a3_1) - 100*Ke*Kt*R*a3_3*cos(a3_1) + 100*Ke*Kt*R*a3_4*cos(a3_1) + Kt*R*V*a4_1*cos(a3_1) - 50*R*Rm*a3_3*cfm*cos(a3_1) + 50*R*Rm*a3_4*cfm*cos(a3_1) + 50*R*Rm*a3_4*cfw*cos(a3_1) - 100*L*R^2*Rm*a3_3^2*m1*sin(2*a3_1)))/(50*Rm*(I1*I2 + L^2*R^2*m1^2 + I2*L^2*m1 + I1*R^2*m1 + I1*R^2*m2 + L^2*R^2*m1*m2 - L^2*R^2*m1^2*cos(a3_1)^2)) - (2*L^3*R^2*m1^3*cos(a3_1)*sin(a3_1)*(50*I2*Rm*g*cos(a3_1) + 100*Ke*Kt*R*a3_3*sin(a3_1) - 100*Ke*Kt*R*a3_4*sin(a3_1) - Kt*R*V*a4_1*sin(a3_1) + 50*R*Rm*a3_3*cfm*sin(a3_1) - 50*R*Rm*a3_4*cfm*sin(a3_1) - 50*R*Rm*a3_4*cfw*sin(a3_1) + 50*R^2*Rm*g*m1*cos(a3_1) + 50*R^2*Rm*g*m2*cos(a3_1) - 50*L*R^2*Rm*a3_3^2*m1*(2*cos(a3_1)^2 - 1)))/(25*Rm*(I1*I2 + L^2*R^2*m1^2 + I2*L^2*m1 + I1*R^2*m1 + I1*R^2*m2 + L^2*R^2*m1*m2 - L^2*R^2*m1^2*cos(a3_1)^2)^2) + (4*L^4*R^4*m1^4*cos(a3_1)^2*sin(a3_1)^2*(100*I2*Ke*Kt*a3_4 - 100*I2*Ke*Kt*a3_3 + I2*Kt*V*a4_1 - 50*I2*Rm*a3_3*cfm + 50*I2*Rm*a3_4*cfm - 100*Ke*Kt*R^2*a3_3*m1 - 100*Ke*Kt*R^2*a3_3*m2 + 100*Ke*Kt*R^2*a3_4*m1 + 100*Ke*Kt*R^2*a3_4*m2 + Kt*R^2*V*a4_1*m1 + Kt*R^2*V*a4_1*m2 - 50*R^2*Rm*a3_3*cfm*m1 - 50*R^2*Rm*a3_3*cfm*m2 + 50*R^2*Rm*a3_4*cfm*m1 + 50*R^2*Rm*a3_4*cfm*m2 + 50*L*R^2*Rm*g*m1^2*sin(a3_1) - 25*L^2*R^2*Rm*a3_3^2*m1^2*sin(2*a3_1) + 50*I2*L*Rm*g*m1*sin(a3_1) - 100*Ke*Kt*L*R*a3_3*m1*cos(a3_1) + 100*Ke*Kt*L*R*a3_4*m1*cos(a3_1) + Kt*L*R*V*a4_1*m1*cos(a3_1) - 50*L*R*Rm*a3_3*cfm*m1*cos(a3_1) + 50*L*R*Rm*a3_4*cfm*m1*cos(a3_1) + 50*L*R*Rm*a3_4*cfw*m1*cos(a3_1) + 50*L*R^2*Rm*g*m1*m2*sin(a3_1)))/(25*Rm*(I1*I2 + L^2*R^2*m1^2 + I2*L^2*m1 + I1*R^2*m1 + I1*R^2*m2 + L^2*R^2*m1*m2 - L^2*R^2*m1^2*cos(a3_1)^2)^3);
  d2f(3,10) = (L*R*m1*(2*Ke*Kt*sin(a3_1) + Rm*cfm*sin(a3_1) - 2*L*R*Rm*a3_3*m1*cos(2*a3_1)))/(Rm*(I1*I2 + I2*L^2*m1 + I1*R^2*m1 + I1*R^2*m2 + L^2*R^2*m1*m2 + L^2*R^2*m1^2*sin(a3_1)^2)) + (4*L^2*R^2*m1^2*sin(2*a3_1)*(2*I2*Ke*Kt + I2*Rm*cfm + 2*Ke*Kt*R^2*m1 + 2*Ke*Kt*R^2*m2 + R^2*Rm*cfm*m1 + R^2*Rm*cfm*m2 + L^2*R^2*Rm*a3_3*m1^2*sin(2*a3_1) + 2*Ke*Kt*L*R*m1*cos(a3_1) + L*R*Rm*cfm*m1*cos(a3_1)))/(Rm*(2*I1*I2 + L^2*R^2*m1^2 + 2*I2*L^2*m1 + 2*I1*R^2*m1 + 2*I1*R^2*m2 + 2*L^2*R^2*m1*m2 - L^2*R^2*m1^2*cos(2*a3_1))^2);
  d2f(3,11) = - (L*R*m1*sin(a3_1)*(Rm*cfm + Rm*cfw + 2*Ke*Kt))/(Rm*(I1*I2 + I2*L^2*m1 + I1*R^2*m1 + I1*R^2*m2 + L^2*R^2*m1*m2 + L^2*R^2*m1^2*sin(a3_1)^2)) - (2*L^2*R^2*m1^2*cos(a3_1)*sin(a3_1)*(2*I2*Ke*Kt + I2*Rm*cfm + 2*Ke*Kt*R^2*m1 + 2*Ke*Kt*R^2*m2 + R^2*Rm*cfm*m1 + R^2*Rm*cfm*m2 + 2*Ke*Kt*L*R*m1*cos(a3_1) + L*R*Rm*cfm*m1*cos(a3_1) + L*R*Rm*cfw*m1*cos(a3_1)))/(Rm*(I1*I2 + L^2*R^2*m1^2 + I2*L^2*m1 + I1*R^2*m1 + I1*R^2*m2 + L^2*R^2*m1*m2 - L^2*R^2*m1^2*cos(a3_1)^2)^2);
  d2f(3,12) = -(Kt*L*R*V*m1*sin(a3_1)*(I1*I2 + L^2*R^2*m1^2 + I2*L^2*m1 + I1*R^2*m1 + I1*R^2*m2 + L^2*R^2*m1*m2 + L^2*R^2*m1^2*cos(a3_1)^2 + 2*L*R^3*m1^2*cos(a3_1) + 2*I2*L*R*m1*cos(a3_1) + 2*L*R^3*m1*m2*cos(a3_1)))/(50*Rm*(I1*I2 + L^2*R^2*m1^2 + I2*L^2*m1 + I1*R^2*m1 + I1*R^2*m2 + L^2*R^2*m1*m2 - L^2*R^2*m1^2*cos(a3_1)^2)^2);
  d2f(3,20) = (L*R*m1*(2*Ke*Kt*sin(a3_1) + Rm*cfm*sin(a3_1) - 2*L*R*Rm*a3_3*m1*(2*cos(a3_1)^2 - 1)))/(Rm*(I1*I2 + I2*L^2*m1 + I1*R^2*m1 + I1*R^2*m2 + L^2*R^2*m1*m2 + L^2*R^2*m1^2*sin(a3_1)^2)) + (L^2*R^2*m1^2*cos(a3_1)*sin(a3_1)*(100*I2*Ke*Kt + 50*I2*Rm*cfm + 100*Ke*Kt*R^2*m1 + 100*Ke*Kt*R^2*m2 + 50*R^2*Rm*cfm*m1 + 50*R^2*Rm*cfm*m2 + 100*Ke*Kt*L*R*m1*cos(a3_1) + 50*L*R*Rm*cfm*m1*cos(a3_1) + 100*L^2*R^2*Rm*a3_3*m1^2*cos(a3_1)*sin(a3_1)))/(25*Rm*(I1*I2 + L^2*R^2*m1^2 + I2*L^2*m1 + I1*R^2*m1 + I1*R^2*m2 + L^2*R^2*m1*m2 - L^2*R^2*m1^2*cos(a3_1)^2)^2);
  d2f(3,22) = -(L^2*R^2*m1^2*sin(2*a3_1))/(I1*I2 + L^2*R^2*m1^2 + I2*L^2*m1 + I1*R^2*m1 + I1*R^2*m2 + L^2*R^2*m1*m2 - L^2*R^2*m1^2*cos(a3_1)^2);
  d2f(3,26) = - (L*R*m1*sin(a3_1)*(Rm*cfm + Rm*cfw + 2*Ke*Kt))/(Rm*(I1*I2 + I2*L^2*m1 + I1*R^2*m1 + I1*R^2*m2 + L^2*R^2*m1*m2 + L^2*R^2*m1^2*sin(a3_1)^2)) - (L^2*R^2*m1^2*cos(a3_1)*sin(a3_1)*(100*I2*Ke*Kt + 50*I2*Rm*cfm + 100*Ke*Kt*R^2*m1 + 100*Ke*Kt*R^2*m2 + 50*R^2*Rm*cfm*m1 + 50*R^2*Rm*cfm*m2 + 100*Ke*Kt*L*R*m1*cos(a3_1) + 50*L*R*Rm*cfm*m1*cos(a3_1) + 50*L*R*Rm*cfw*m1*cos(a3_1)))/(25*Rm*(I1*I2 + L^2*R^2*m1^2 + I2*L^2*m1 + I1*R^2*m1 + I1*R^2*m2 + L^2*R^2*m1*m2 - L^2*R^2*m1^2*cos(a3_1)^2)^2);
  d2f(3,32) = -(Kt*L*R*V*m1*sin(a3_1)*(I1*I2 + L^2*R^2*m1^2 + I2*L^2*m1 + I1*R^2*m1 + I1*R^2*m2 + L^2*R^2*m1*m2 + L^2*R^2*m1^2*cos(a3_1)^2 + 2*L*R^3*m1^2*cos(a3_1) + 2*I2*L*R*m1*cos(a3_1) + 2*L*R^3*m1*m2*cos(a3_1)))/(50*Rm*(I1*I2 + L^2*R^2*m1^2 + I2*L^2*m1 + I1*R^2*m1 + I1*R^2*m2 + L^2*R^2*m1*m2 - L^2*R^2*m1^2*cos(a3_1)^2)^2);
  d2f(4,8) = (L^2*R^2*m1^2*cos(a3_1)^2*(100*I1*Ke*Kt*a3_4 - 100*I1*Ke*Kt*a3_3 + I1*Kt*V*a4_1 - 50*I1*Rm*a3_3*cfm + 50*I1*Rm*a3_4*cfm + 50*I1*Rm*a3_4*cfw - 100*Ke*Kt*L^2*a3_3*m1 + 100*Ke*Kt*L^2*a3_4*m1 + Kt*L^2*V*a4_1*m1 - 50*L^2*Rm*a3_3*cfm*m1 + 50*L^2*Rm*a3_4*cfm*m1 + 50*L^2*Rm*a3_4*cfw*m1 - 50*L^3*R*Rm*a3_3^2*m1^2*sin(a3_1) + 25*L^2*R*Rm*g*m1^2*sin(2*a3_1) - 100*Ke*Kt*L*R*a3_3*m1*cos(a3_1) + 100*Ke*Kt*L*R*a3_4*m1*cos(a3_1) + Kt*L*R*V*a4_1*m1*cos(a3_1) - 50*L*R*Rm*a3_3*cfm*m1*cos(a3_1) + 50*L*R*Rm*a3_4*cfm*m1*cos(a3_1) - 50*I1*L*R*Rm*a3_3^2*m1*sin(a3_1)))/(25*Rm*(I1*I2 + L^2*R^2*m1^2 + I2*L^2*m1 + I1*R^2*m1 + I1*R^2*m2 + L^2*R^2*m1*m2 - L^2*R^2*m1^2*cos(a3_1)^2)^2) - (L*R*m1*(100*Ke*Kt*a3_3*cos(a3_1) - 100*Ke*Kt*a3_4*cos(a3_1) - Kt*V*a4_1*cos(a3_1) + 50*Rm*a3_3*cfm*cos(a3_1) - 50*Rm*a3_4*cfm*cos(a3_1) + 50*I1*Rm*a3_3^2*sin(a3_1) + 50*L^2*Rm*a3_3^2*m1*sin(a3_1) - 200*L*Rm*g*m1*cos(a3_1)*sin(a3_1)))/(50*Rm*(I1*I2 + L^2*R^2*m1^2 + I2*L^2*m1 + I1*R^2*m1 + I1*R^2*m2 + L^2*R^2*m1*m2 - L^2*R^2*m1^2*cos(a3_1)^2)) - (L^2*R^2*m1^2*sin(a3_1)^2*(100*I1*Ke*Kt*a3_4 - 100*I1*Ke*Kt*a3_3 + I1*Kt*V*a4_1 - 50*I1*Rm*a3_3*cfm + 50*I1*Rm*a3_4*cfm + 50*I1*Rm*a3_4*cfw - 100*Ke*Kt*L^2*a3_3*m1 + 100*Ke*Kt*L^2*a3_4*m1 + Kt*L^2*V*a4_1*m1 - 50*L^2*Rm*a3_3*cfm*m1 + 50*L^2*Rm*a3_4*cfm*m1 + 50*L^2*Rm*a3_4*cfw*m1 - 50*L^3*R*Rm*a3_3^2*m1^2*sin(a3_1) + 25*L^2*R*Rm*g*m1^2*sin(2*a3_1) - 100*Ke*Kt*L*R*a3_3*m1*cos(a3_1) + 100*Ke*Kt*L*R*a3_4*m1*cos(a3_1) + Kt*L*R*V*a4_1*m1*cos(a3_1) - 50*L*R*Rm*a3_3*cfm*m1*cos(a3_1) + 50*L*R*Rm*a3_4*cfm*m1*cos(a3_1) - 50*I1*L*R*Rm*a3_3^2*m1*sin(a3_1)))/(25*Rm*(I1*I2 + L^2*R^2*m1^2 + I2*L^2*m1 + I1*R^2*m1 + I1*R^2*m2 + L^2*R^2*m1*m2 - L^2*R^2*m1^2*cos(a3_1)^2)^2) - (2*L^3*R^3*m1^3*cos(a3_1)*sin(a3_1)*(100*Ke*Kt*a3_4*sin(a3_1) - 100*Ke*Kt*a3_3*sin(a3_1) + Kt*V*a4_1*sin(a3_1) - 50*Rm*a3_3*cfm*sin(a3_1) + 50*Rm*a3_4*cfm*sin(a3_1) + 50*I1*Rm*a3_3^2*cos(a3_1) + 50*L^2*Rm*a3_3^2*m1*cos(a3_1) - 50*L*Rm*g*m1*(2*cos(a3_1)^2 - 1)))/(25*Rm*(I1*I2 + L^2*R^2*m1^2 + I2*L^2*m1 + I1*R^2*m1 + I1*R^2*m2 + L^2*R^2*m1*m2 - L^2*R^2*m1^2*cos(a3_1)^2)^2) - (4*L^4*R^4*m1^4*cos(a3_1)^2*sin(a3_1)^2*(100*I1*Ke*Kt*a3_4 - 100*I1*Ke*Kt*a3_3 + I1*Kt*V*a4_1 - 50*I1*Rm*a3_3*cfm + 50*I1*Rm*a3_4*cfm + 50*I1*Rm*a3_4*cfw - 100*Ke*Kt*L^2*a3_3*m1 + 100*Ke*Kt*L^2*a3_4*m1 + Kt*L^2*V*a4_1*m1 - 50*L^2*Rm*a3_3*cfm*m1 + 50*L^2*Rm*a3_4*cfm*m1 + 50*L^2*Rm*a3_4*cfw*m1 - 50*L^3*R*Rm*a3_3^2*m1^2*sin(a3_1) + 25*L^2*R*Rm*g*m1^2*sin(2*a3_1) - 100*Ke*Kt*L*R*a3_3*m1*cos(a3_1) + 100*Ke*Kt*L*R*a3_4*m1*cos(a3_1) + Kt*L*R*V*a4_1*m1*cos(a3_1) - 50*L*R*Rm*a3_3*cfm*m1*cos(a3_1) + 50*L*R*Rm*a3_4*cfm*m1*cos(a3_1) - 50*I1*L*R*Rm*a3_3^2*m1*sin(a3_1)))/(25*Rm*(I1*I2 + L^2*R^2*m1^2 + I2*L^2*m1 + I1*R^2*m1 + I1*R^2*m2 + L^2*R^2*m1*m2 - L^2*R^2*m1^2*cos(a3_1)^2)^3);
  d2f(4,10) = - (L*R*m1*(2*Ke*Kt*sin(a3_1) + Rm*cfm*sin(a3_1) - 2*I1*Rm*a3_3*cos(a3_1) - 2*L^2*Rm*a3_3*m1*cos(a3_1)))/(Rm*(I1*I2 + L^2*R^2*m1^2 + I2*L^2*m1 + I1*R^2*m1 + I1*R^2*m2 + L^2*R^2*m1*m2 - L^2*R^2*m1^2*cos(a3_1)^2)) - (2*L^2*R^2*m1^2*cos(a3_1)*sin(a3_1)*(2*I1*Ke*Kt + I1*Rm*cfm + 2*Ke*Kt*L^2*m1 + L^2*Rm*cfm*m1 + 2*L^3*R*Rm*a3_3*m1^2*sin(a3_1) + 2*Ke*Kt*L*R*m1*cos(a3_1) + L*R*Rm*cfm*m1*cos(a3_1) + 2*I1*L*R*Rm*a3_3*m1*sin(a3_1)))/(Rm*(I1*I2 + L^2*R^2*m1^2 + I2*L^2*m1 + I1*R^2*m1 + I1*R^2*m2 + L^2*R^2*m1*m2 - L^2*R^2*m1^2*cos(a3_1)^2)^2);
  d2f(4,11) = (L*R*m1*sin(a3_1)*(Rm*cfm + 2*Ke*Kt))/(Rm*(I1*I2 + I2*L^2*m1 + I1*R^2*m1 + I1*R^2*m2 + L^2*R^2*m1*m2 + L^2*R^2*m1^2*sin(a3_1)^2)) + (2*L^2*R^2*m1^2*cos(a3_1)*sin(a3_1)*(2*I1*Ke*Kt + I1*Rm*cfm + I1*Rm*cfw + 2*Ke*Kt*L^2*m1 + L^2*Rm*cfm*m1 + L^2*Rm*cfw*m1 + 2*Ke*Kt*L*R*m1*cos(a3_1) + L*R*Rm*cfm*m1*cos(a3_1)))/(Rm*(I1*I2 + L^2*R^2*m1^2 + I2*L^2*m1 + I1*R^2*m1 + I1*R^2*m2 + L^2*R^2*m1*m2 - L^2*R^2*m1^2*cos(a3_1)^2)^2);
  d2f(4,12) = (Kt*L*R*V*m1*sin(a3_1)*(I1*I2 + L^2*R^2*m1^2 + I2*L^2*m1 + I1*R^2*m1 + I1*R^2*m2 + L^2*R^2*m1*m2 + L^2*R^2*m1^2*cos(a3_1)^2 + 2*L^3*R*m1^2*cos(a3_1) + 2*I1*L*R*m1*cos(a3_1)))/(50*Rm*(I1*I2 + L^2*R^2*m1^2 + I2*L^2*m1 + I1*R^2*m1 + I1*R^2*m2 + L^2*R^2*m1*m2 - L^2*R^2*m1^2*cos(a3_1)^2)^2);
  d2f(4,20) = - (L*R*m1*(100*Ke*Kt*sin(a3_1) + 50*Rm*cfm*sin(a3_1) - 100*I1*Rm*a3_3*cos(a3_1) - 100*L^2*Rm*a3_3*m1*cos(a3_1)))/(50*Rm*(I1*I2 + L^2*R^2*m1^2 + I2*L^2*m1 + I1*R^2*m1 + I1*R^2*m2 + L^2*R^2*m1*m2 - L^2*R^2*m1^2*cos(a3_1)^2)) - (L^2*R^2*m1^2*cos(a3_1)*sin(a3_1)*(100*I1*Ke*Kt + 50*I1*Rm*cfm + 100*Ke*Kt*L^2*m1 + 50*L^2*Rm*cfm*m1 + 100*L^3*R*Rm*a3_3*m1^2*sin(a3_1) + 100*Ke*Kt*L*R*m1*cos(a3_1) + 50*L*R*Rm*cfm*m1*cos(a3_1) + 100*I1*L*R*Rm*a3_3*m1*sin(a3_1)))/(25*Rm*(I1*I2 + L^2*R^2*m1^2 + I2*L^2*m1 + I1*R^2*m1 + I1*R^2*m2 + L^2*R^2*m1*m2 - L^2*R^2*m1^2*cos(a3_1)^2)^2);
  d2f(4,22) = (2*L*R*m1*sin(a3_1)*(I1 + L^2*m1))/(I1*I2 + I2*L^2*m1 + I1*R^2*m1 + I1*R^2*m2 + L^2*R^2*m1*m2 + L^2*R^2*m1^2*sin(a3_1)^2);
  d2f(4,26) = (L*R*m1*sin(a3_1)*(Rm*cfm + 2*Ke*Kt))/(Rm*(I1*I2 + I2*L^2*m1 + I1*R^2*m1 + I1*R^2*m2 + L^2*R^2*m1*m2 + L^2*R^2*m1^2*sin(a3_1)^2)) + (L^2*R^2*m1^2*cos(a3_1)*sin(a3_1)*(100*I1*Ke*Kt + 50*I1*Rm*cfm + 50*I1*Rm*cfw + 100*Ke*Kt*L^2*m1 + 50*L^2*Rm*cfm*m1 + 50*L^2*Rm*cfw*m1 + 100*Ke*Kt*L*R*m1*cos(a3_1) + 50*L*R*Rm*cfm*m1*cos(a3_1)))/(25*Rm*(I1*I2 + L^2*R^2*m1^2 + I2*L^2*m1 + I1*R^2*m1 + I1*R^2*m2 + L^2*R^2*m1*m2 - L^2*R^2*m1^2*cos(a3_1)^2)^2);
  d2f(4,32) = (Kt*L*R*V*m1*sin(a3_1)*(I1*I2 + L^2*R^2*m1^2 + I2*L^2*m1 + I1*R^2*m1 + I1*R^2*m2 + L^2*R^2*m1*m2 + L^2*R^2*m1^2*cos(a3_1)^2 + 2*L^3*R*m1^2*cos(a3_1) + 2*I1*L*R*m1*cos(a3_1)))/(50*Rm*(I1*I2 + L^2*R^2*m1^2 + I2*L^2*m1 + I1*R^2*m1 + I1*R^2*m2 + L^2*R^2*m1*m2 - L^2*R^2*m1^2*cos(a3_1)^2)^2);
else
  d2f=[];
end  % if (order>=2)

% d3f
if (order>=3)
  d3f = sparse(4,216);
  d3f(3,44) = (3*L^3*R^2*m1^3*sin(a3_1)^2*(50*I2*Rm*g*cos(a3_1) + 100*Ke*Kt*R*a3_3*sin(a3_1) - 100*Ke*Kt*R*a3_4*sin(a3_1) - Kt*R*V*a4_1*sin(a3_1) + 50*R*Rm*a3_3*cfm*sin(a3_1) - 50*R*Rm*a3_4*cfm*sin(a3_1) - 50*R*Rm*a3_4*cfw*sin(a3_1) + 50*R^2*Rm*g*m1*cos(a3_1) + 50*R^2*Rm*g*m2*cos(a3_1) - 50*L*R^2*Rm*a3_3^2*m1*(2*cos(a3_1)^2 - 1)))/(25*Rm*(I1*I2 + L^2*R^2*m1^2 + I2*L^2*m1 + I1*R^2*m1 + I1*R^2*m2 + L^2*R^2*m1*m2 - L^2*R^2*m1^2*cos(a3_1)^2)^2) - (3*L^3*R^2*m1^3*cos(a3_1)^2*(50*I2*Rm*g*cos(a3_1) + 100*Ke*Kt*R*a3_3*sin(a3_1) - 100*Ke*Kt*R*a3_4*sin(a3_1) - Kt*R*V*a4_1*sin(a3_1) + 50*R*Rm*a3_3*cfm*sin(a3_1) - 50*R*Rm*a3_4*cfm*sin(a3_1) - 50*R*Rm*a3_4*cfw*sin(a3_1) + 50*R^2*Rm*g*m1*cos(a3_1) + 50*R^2*Rm*g*m2*cos(a3_1) - 50*L*R^2*Rm*a3_3^2*m1*(2*cos(a3_1)^2 - 1)))/(25*Rm*(I1*I2 + L^2*R^2*m1^2 + I2*L^2*m1 + I1*R^2*m1 + I1*R^2*m2 + L^2*R^2*m1*m2 - L^2*R^2*m1^2*cos(a3_1)^2)^2) - (L*m1*(50*I2*Rm*g*cos(a3_1) + 100*Ke*Kt*R*a3_3*sin(a3_1) - 100*Ke*Kt*R*a3_4*sin(a3_1) - Kt*R*V*a4_1*sin(a3_1) + 50*R*Rm*a3_3*cfm*sin(a3_1) - 50*R*Rm*a3_4*cfm*sin(a3_1) - 50*R*Rm*a3_4*cfw*sin(a3_1) + 50*R^2*Rm*g*m1*cos(a3_1) + 50*R^2*Rm*g*m2*cos(a3_1) - 200*L*R^2*Rm*a3_3^2*m1*(2*cos(a3_1)^2 - 1)))/(50*Rm*(I1*I2 + L^2*R^2*m1^2 + I2*L^2*m1 + I1*R^2*m1 + I1*R^2*m2 + L^2*R^2*m1*m2 - L^2*R^2*m1^2*cos(a3_1)^2)) + (4*L^2*R^2*m1^2*cos(a3_1)*sin(a3_1)*(100*I2*Ke*Kt*a3_4 - 100*I2*Ke*Kt*a3_3 + I2*Kt*V*a4_1 - 50*I2*Rm*a3_3*cfm + 50*I2*Rm*a3_4*cfm - 100*Ke*Kt*R^2*a3_3*m1 - 100*Ke*Kt*R^2*a3_3*m2 + 100*Ke*Kt*R^2*a3_4*m1 + 100*Ke*Kt*R^2*a3_4*m2 + Kt*R^2*V*a4_1*m1 + Kt*R^2*V*a4_1*m2 - 50*R^2*Rm*a3_3*cfm*m1 - 50*R^2*Rm*a3_3*cfm*m2 + 50*R^2*Rm*a3_4*cfm*m1 + 50*R^2*Rm*a3_4*cfm*m2 + 50*L*R^2*Rm*g*m1^2*sin(a3_1) - 25*L^2*R^2*Rm*a3_3^2*m1^2*sin(2*a3_1) + 50*I2*L*Rm*g*m1*sin(a3_1) - 100*Ke*Kt*L*R*a3_3*m1*cos(a3_1) + 100*Ke*Kt*L*R*a3_4*m1*cos(a3_1) + Kt*L*R*V*a4_1*m1*cos(a3_1) - 50*L*R*Rm*a3_3*cfm*m1*cos(a3_1) + 50*L*R*Rm*a3_4*cfm*m1*cos(a3_1) + 50*L*R*Rm*a3_4*cfw*m1*cos(a3_1) + 50*L*R^2*Rm*g*m1*m2*sin(a3_1)))/(25*Rm*(I1*I2 + L^2*R^2*m1^2 + I2*L^2*m1 + I1*R^2*m1 + I1*R^2*m2 + L^2*R^2*m1*m2 - L^2*R^2*m1^2*cos(a3_1)^2)^2) + (3*L^3*R^2*m1^3*cos(a3_1)*sin(a3_1)*(50*I2*Rm*g*sin(a3_1) + 50*R^2*Rm*g*m1*sin(a3_1) + 50*R^2*Rm*g*m2*sin(a3_1) - 100*Ke*Kt*R*a3_3*cos(a3_1) + 100*Ke*Kt*R*a3_4*cos(a3_1) + Kt*R*V*a4_1*cos(a3_1) - 50*R*Rm*a3_3*cfm*cos(a3_1) + 50*R*Rm*a3_4*cfm*cos(a3_1) + 50*R*Rm*a3_4*cfw*cos(a3_1) - 100*L*R^2*Rm*a3_3^2*m1*sin(2*a3_1)))/(25*Rm*(I1*I2 + L^2*R^2*m1^2 + I2*L^2*m1 + I1*R^2*m1 + I1*R^2*m2 + L^2*R^2*m1*m2 - L^2*R^2*m1^2*cos(a3_1)^2)^2) - (12*L^4*R^4*m1^4*cos(a3_1)*sin(a3_1)^3*(100*I2*Ke*Kt*a3_4 - 100*I2*Ke*Kt*a3_3 + I2*Kt*V*a4_1 - 50*I2*Rm*a3_3*cfm + 50*I2*Rm*a3_4*cfm - 100*Ke*Kt*R^2*a3_3*m1 - 100*Ke*Kt*R^2*a3_3*m2 + 100*Ke*Kt*R^2*a3_4*m1 + 100*Ke*Kt*R^2*a3_4*m2 + Kt*R^2*V*a4_1*m1 + Kt*R^2*V*a4_1*m2 - 50*R^2*Rm*a3_3*cfm*m1 - 50*R^2*Rm*a3_3*cfm*m2 + 50*R^2*Rm*a3_4*cfm*m1 + 50*R^2*Rm*a3_4*cfm*m2 + 50*L*R^2*Rm*g*m1^2*sin(a3_1) - 25*L^2*R^2*Rm*a3_3^2*m1^2*sin(2*a3_1) + 50*I2*L*Rm*g*m1*sin(a3_1) - 100*Ke*Kt*L*R*a3_3*m1*cos(a3_1) + 100*Ke*Kt*L*R*a3_4*m1*cos(a3_1) + Kt*L*R*V*a4_1*m1*cos(a3_1) - 50*L*R*Rm*a3_3*cfm*m1*cos(a3_1) + 50*L*R*Rm*a3_4*cfm*m1*cos(a3_1) + 50*L*R*Rm*a3_4*cfw*m1*cos(a3_1) + 50*L*R^2*Rm*g*m1*m2*sin(a3_1)))/(25*Rm*(I1*I2 + L^2*R^2*m1^2 + I2*L^2*m1 + I1*R^2*m1 + I1*R^2*m2 + L^2*R^2*m1*m2 - L^2*R^2*m1^2*cos(a3_1)^2)^3) + (12*L^4*R^4*m1^4*cos(a3_1)^3*sin(a3_1)*(100*I2*Ke*Kt*a3_4 - 100*I2*Ke*Kt*a3_3 + I2*Kt*V*a4_1 - 50*I2*Rm*a3_3*cfm + 50*I2*Rm*a3_4*cfm - 100*Ke*Kt*R^2*a3_3*m1 - 100*Ke*Kt*R^2*a3_3*m2 + 100*Ke*Kt*R^2*a3_4*m1 + 100*Ke*Kt*R^2*a3_4*m2 + Kt*R^2*V*a4_1*m1 + Kt*R^2*V*a4_1*m2 - 50*R^2*Rm*a3_3*cfm*m1 - 50*R^2*Rm*a3_3*cfm*m2 + 50*R^2*Rm*a3_4*cfm*m1 + 50*R^2*Rm*a3_4*cfm*m2 + 50*L*R^2*Rm*g*m1^2*sin(a3_1) - 25*L^2*R^2*Rm*a3_3^2*m1^2*sin(2*a3_1) + 50*I2*L*Rm*g*m1*sin(a3_1) - 100*Ke*Kt*L*R*a3_3*m1*cos(a3_1) + 100*Ke*Kt*L*R*a3_4*m1*cos(a3_1) + Kt*L*R*V*a4_1*m1*cos(a3_1) - 50*L*R*Rm*a3_3*cfm*m1*cos(a3_1) + 50*L*R*Rm*a3_4*cfm*m1*cos(a3_1) + 50*L*R*Rm*a3_4*cfw*m1*cos(a3_1) + 50*L*R^2*Rm*g*m1*m2*sin(a3_1)))/(25*Rm*(I1*I2 + L^2*R^2*m1^2 + I2*L^2*m1 + I1*R^2*m1 + I1*R^2*m2 + L^2*R^2*m1*m2 - L^2*R^2*m1^2*cos(a3_1)^2)^3) - (24*L^6*R^6*m1^6*cos(a3_1)^3*sin(a3_1)^3*(100*I2*Ke*Kt*a3_4 - 100*I2*Ke*Kt*a3_3 + I2*Kt*V*a4_1 - 50*I2*Rm*a3_3*cfm + 50*I2*Rm*a3_4*cfm - 100*Ke*Kt*R^2*a3_3*m1 - 100*Ke*Kt*R^2*a3_3*m2 + 100*Ke*Kt*R^2*a3_4*m1 + 100*Ke*Kt*R^2*a3_4*m2 + Kt*R^2*V*a4_1*m1 + Kt*R^2*V*a4_1*m2 - 50*R^2*Rm*a3_3*cfm*m1 - 50*R^2*Rm*a3_3*cfm*m2 + 50*R^2*Rm*a3_4*cfm*m1 + 50*R^2*Rm*a3_4*cfm*m2 + 50*L*R^2*Rm*g*m1^2*sin(a3_1) - 25*L^2*R^2*Rm*a3_3^2*m1^2*sin(2*a3_1) + 50*I2*L*Rm*g*m1*sin(a3_1) - 100*Ke*Kt*L*R*a3_3*m1*cos(a3_1) + 100*Ke*Kt*L*R*a3_4*m1*cos(a3_1) + Kt*L*R*V*a4_1*m1*cos(a3_1) - 50*L*R*Rm*a3_3*cfm*m1*cos(a3_1) + 50*L*R*Rm*a3_4*cfm*m1*cos(a3_1) + 50*L*R*Rm*a3_4*cfw*m1*cos(a3_1) + 50*L*R^2*Rm*g*m1*m2*sin(a3_1)))/(25*Rm*(I1*I2 + L^2*R^2*m1^2 + I2*L^2*m1 + I1*R^2*m1 + I1*R^2*m2 + L^2*R^2*m1*m2 - L^2*R^2*m1^2*cos(a3_1)^2)^4) + (12*L^5*R^4*m1^5*cos(a3_1)^2*sin(a3_1)^2*(50*I2*Rm*g*cos(a3_1) + 100*Ke*Kt*R*a3_3*sin(a3_1) - 100*Ke*Kt*R*a3_4*sin(a3_1) - Kt*R*V*a4_1*sin(a3_1) + 50*R*Rm*a3_3*cfm*sin(a3_1) - 50*R*Rm*a3_4*cfm*sin(a3_1) - 50*R*Rm*a3_4*cfw*sin(a3_1) + 50*R^2*Rm*g*m1*cos(a3_1) + 50*R^2*Rm*g*m2*cos(a3_1) - 50*L*R^2*Rm*a3_3^2*m1*(2*cos(a3_1)^2 - 1)))/(25*Rm*(I1*I2 + L^2*R^2*m1^2 + I2*L^2*m1 + I1*R^2*m1 + I1*R^2*m2 + L^2*R^2*m1*m2 - L^2*R^2*m1^2*cos(a3_1)^2)^3);
  d3f(3,46) = (L*R*m1*(2*Ke*Kt*cos(a3_1) + Rm*cfm*cos(a3_1) + 8*L*R*Rm*a3_3*m1*cos(a3_1)*sin(a3_1)))/(Rm*(I1*I2 + I2*L^2*m1 + I1*R^2*m1 + I1*R^2*m2 + L^2*R^2*m1*m2 + L^2*R^2*m1^2*sin(a3_1)^2)) - (16*L^4*R^4*m1^4*sin(2*a3_1)^2*(2*I2*Ke*Kt + I2*Rm*cfm + 2*Ke*Kt*R^2*m1 + 2*Ke*Kt*R^2*m2 + R^2*Rm*cfm*m1 + R^2*Rm*cfm*m2 + L^2*R^2*Rm*a3_3*m1^2*sin(2*a3_1) + 2*Ke*Kt*L*R*m1*cos(a3_1) + L*R*Rm*cfm*m1*cos(a3_1)))/(Rm*(2*I1*I2 + L^2*R^2*m1^2 + 2*I2*L^2*m1 + 2*I1*R^2*m1 + 2*I1*R^2*m2 + 2*L^2*R^2*m1*m2 - L^2*R^2*m1^2*cos(2*a3_1))^3) - (4*L^3*R^3*m1^3*sin(2*a3_1)*(2*Ke*Kt*sin(a3_1) + Rm*cfm*sin(a3_1) - 2*L*R*Rm*a3_3*m1*cos(2*a3_1)))/(Rm*(2*I1*I2 + L^2*R^2*m1^2 + 2*I2*L^2*m1 + 2*I1*R^2*m1 + 2*I1*R^2*m2 + 2*L^2*R^2*m1*m2 - L^2*R^2*m1^2*cos(2*a3_1))^2) + (8*L^2*R^2*m1^2*cos(2*a3_1)*(2*I2*Ke*Kt + I2*Rm*cfm + 2*Ke*Kt*R^2*m1 + 2*Ke*Kt*R^2*m2 + R^2*Rm*cfm*m1 + R^2*Rm*cfm*m2 + L^2*R^2*Rm*a3_3*m1^2*sin(2*a3_1) + 2*Ke*Kt*L*R*m1*cos(a3_1) + L*R*Rm*cfm*m1*cos(a3_1)))/(Rm*(2*I1*I2 + L^2*R^2*m1^2 + 2*I2*L^2*m1 + 2*I1*R^2*m1 + 2*I1*R^2*m2 + 2*L^2*R^2*m1*m2 - L^2*R^2*m1^2*cos(2*a3_1))^2) - (2*L^3*R^3*m1^3*cos(a3_1)*sin(a3_1)*(2*Ke*Kt*sin(a3_1) + Rm*cfm*sin(a3_1) - 2*L*R*Rm*a3_3*m1*(2*cos(a3_1)^2 - 1)))/(Rm*(I1*I2 + I2*L^2*m1 + I1*R^2*m1 + I1*R^2*m2 + L^2*R^2*m1*m2 + L^2*R^2*m1^2*sin(a3_1)^2)^2);
  d3f(3,47) = (2*L^2*R^2*m1^2*sin(a3_1)^2*(2*I2*Ke*Kt + I2*Rm*cfm + 2*Ke*Kt*R^2*m1 + 2*Ke*Kt*R^2*m2 + R^2*Rm*cfm*m1 + R^2*Rm*cfm*m2 + 2*Ke*Kt*L*R*m1*cos(a3_1) + L*R*Rm*cfm*m1*cos(a3_1) + L*R*Rm*cfw*m1*cos(a3_1)))/(Rm*(I1*I2 + L^2*R^2*m1^2 + I2*L^2*m1 + I1*R^2*m1 + I1*R^2*m2 + L^2*R^2*m1*m2 - L^2*R^2*m1^2*cos(a3_1)^2)^2) - (2*L^2*R^2*m1^2*cos(a3_1)^2*(2*I2*Ke*Kt + I2*Rm*cfm + 2*Ke*Kt*R^2*m1 + 2*Ke*Kt*R^2*m2 + R^2*Rm*cfm*m1 + R^2*Rm*cfm*m2 + 2*Ke*Kt*L*R*m1*cos(a3_1) + L*R*Rm*cfm*m1*cos(a3_1) + L*R*Rm*cfw*m1*cos(a3_1)))/(Rm*(I1*I2 + L^2*R^2*m1^2 + I2*L^2*m1 + I1*R^2*m1 + I1*R^2*m2 + L^2*R^2*m1*m2 - L^2*R^2*m1^2*cos(a3_1)^2)^2) - (L*R*m1*cos(a3_1)*(Rm*cfm + Rm*cfw + 2*Ke*Kt))/(Rm*(I1*I2 + I2*L^2*m1 + I1*R^2*m1 + I1*R^2*m2 + L^2*R^2*m1*m2 + L^2*R^2*m1^2*sin(a3_1)^2)) + (2*L^3*R^3*m1^3*cos(a3_1)*sin(a3_1)^2*(Rm*cfm + Rm*cfw + 2*Ke*Kt))/(Rm*(I1*I2 + I2*L^2*m1 + I1*R^2*m1 + I1*R^2*m2 + L^2*R^2*m1*m2 + L^2*R^2*m1^2*sin(a3_1)^2)^2) + (8*L^4*R^4*m1^4*cos(a3_1)^2*sin(a3_1)^2*(2*I2*Ke*Kt + I2*Rm*cfm + 2*Ke*Kt*R^2*m1 + 2*Ke*Kt*R^2*m2 + R^2*Rm*cfm*m1 + R^2*Rm*cfm*m2 + 2*Ke*Kt*L*R*m1*cos(a3_1) + L*R*Rm*cfm*m1*cos(a3_1) + L*R*Rm*cfw*m1*cos(a3_1)))/(Rm*(I1*I2 + L^2*R^2*m1^2 + I2*L^2*m1 + I1*R^2*m1 + I1*R^2*m2 + L^2*R^2*m1*m2 - L^2*R^2*m1^2*cos(a3_1)^2)^3) + (2*L^3*R^3*m1^3*cos(a3_1)*sin(a3_1)^2*(Rm*cfm + Rm*cfw + 2*Ke*Kt))/(Rm*(I1*I2 + L^2*R^2*m1^2 + I2*L^2*m1 + I1*R^2*m1 + I1*R^2*m2 + L^2*R^2*m1*m2 - L^2*R^2*m1^2*cos(a3_1)^2)^2);
  d3f(3,48) = (Kt*L^2*R^2*V*m1^2*sin(a3_1)*(2*I2*sin(a3_1) + 2*R^2*m1*sin(a3_1) + 2*R^2*m2*sin(a3_1) + 2*L*R*m1*cos(a3_1)*sin(a3_1)))/(50*Rm*(I1*I2 + L^2*R^2*m1^2 + I2*L^2*m1 + I1*R^2*m1 + I1*R^2*m2 + L^2*R^2*m1*m2 - L^2*R^2*m1^2*cos(a3_1)^2)^2) - (Kt*L*R*V*m1*cos(a3_1)*(I1*I2 + L^2*R^2*m1^2 + I2*L^2*m1 + I1*R^2*m1 + I1*R^2*m2 + L^2*R^2*m1*m2 + L^2*R^2*m1^2*cos(a3_1)^2 + 2*L*R^3*m1^2*cos(a3_1) + 2*I2*L*R*m1*cos(a3_1) + 2*L*R^3*m1*m2*cos(a3_1)))/(50*Rm*(I1*I2 + L^2*R^2*m1^2 + I2*L^2*m1 + I1*R^2*m1 + I1*R^2*m2 + L^2*R^2*m1*m2 - L^2*R^2*m1^2*cos(a3_1)^2)^2) + (2*Kt*L^3*R^3*V*m1^3*cos(a3_1)*sin(a3_1)^2*(I1*I2 + L^2*R^2*m1^2 + I2*L^2*m1 + I1*R^2*m1 + I1*R^2*m2 + L^2*R^2*m1*m2 + L^2*R^2*m1^2*cos(a3_1)^2 + 2*L*R^3*m1^2*cos(a3_1) + 2*I2*L*R*m1*cos(a3_1) + 2*L*R^3*m1*m2*cos(a3_1)))/(25*Rm*(I1*I2 + L^2*R^2*m1^2 + I2*L^2*m1 + I1*R^2*m1 + I1*R^2*m2 + L^2*R^2*m1*m2 - L^2*R^2*m1^2*cos(a3_1)^2)^3);
  d3f(3,56) = (L*R*m1*(2*Ke*Kt*cos(a3_1) + Rm*cfm*cos(a3_1) + 8*L*R*Rm*a3_3*m1*cos(a3_1)*sin(a3_1)))/(Rm*(I1*I2 + I2*L^2*m1 + I1*R^2*m1 + I1*R^2*m2 + L^2*R^2*m1*m2 + L^2*R^2*m1^2*sin(a3_1)^2)) + (L^2*R^2*m1^2*cos(a3_1)^2*(100*I2*Ke*Kt + 50*I2*Rm*cfm + 100*Ke*Kt*R^2*m1 + 100*Ke*Kt*R^2*m2 + 50*R^2*Rm*cfm*m1 + 50*R^2*Rm*cfm*m2 + 50*L^2*R^2*Rm*a3_3*m1^2*sin(2*a3_1) + 100*Ke*Kt*L*R*m1*cos(a3_1) + 50*L*R*Rm*cfm*m1*cos(a3_1)))/(25*Rm*(I1*I2 + L^2*R^2*m1^2 + I2*L^2*m1 + I1*R^2*m1 + I1*R^2*m2 + L^2*R^2*m1*m2 - L^2*R^2*m1^2*cos(a3_1)^2)^2) - (L^2*R^2*m1^2*sin(a3_1)^2*(100*I2*Ke*Kt + 50*I2*Rm*cfm + 100*Ke*Kt*R^2*m1 + 100*Ke*Kt*R^2*m2 + 50*R^2*Rm*cfm*m1 + 50*R^2*Rm*cfm*m2 + 50*L^2*R^2*Rm*a3_3*m1^2*sin(2*a3_1) + 100*Ke*Kt*L*R*m1*cos(a3_1) + 50*L*R*Rm*cfm*m1*cos(a3_1)))/(25*Rm*(I1*I2 + L^2*R^2*m1^2 + I2*L^2*m1 + I1*R^2*m1 + I1*R^2*m2 + L^2*R^2*m1*m2 - L^2*R^2*m1^2*cos(a3_1)^2)^2) - (4*L^4*R^4*m1^4*cos(a3_1)^2*sin(a3_1)^2*(100*I2*Ke*Kt + 50*I2*Rm*cfm + 100*Ke*Kt*R^2*m1 + 100*Ke*Kt*R^2*m2 + 50*R^2*Rm*cfm*m1 + 50*R^2*Rm*cfm*m2 + 50*L^2*R^2*Rm*a3_3*m1^2*sin(2*a3_1) + 100*Ke*Kt*L*R*m1*cos(a3_1) + 50*L*R*Rm*cfm*m1*cos(a3_1)))/(25*Rm*(I1*I2 + L^2*R^2*m1^2 + I2*L^2*m1 + I1*R^2*m1 + I1*R^2*m2 + L^2*R^2*m1*m2 - L^2*R^2*m1^2*cos(a3_1)^2)^3) - (2*L^3*R^3*m1^3*cos(a3_1)*sin(a3_1)*(2*Ke*Kt*sin(a3_1) + Rm*cfm*sin(a3_1) - 2*L*R*Rm*a3_3*m1*(2*cos(a3_1)^2 - 1)))/(Rm*(I1*I2 + I2*L^2*m1 + I1*R^2*m1 + I1*R^2*m2 + L^2*R^2*m1*m2 + L^2*R^2*m1^2*sin(a3_1)^2)^2) - (2*L^3*R^3*m1^3*cos(a3_1)*sin(a3_1)*(2*Ke*Kt*sin(a3_1) + Rm*cfm*sin(a3_1) - 2*L*R*Rm*a3_3*m1*(2*cos(a3_1)^2 - 1)))/(Rm*(I1*I2 + L^2*R^2*m1^2 + I2*L^2*m1 + I1*R^2*m1 + I1*R^2*m2 + L^2*R^2*m1*m2 - L^2*R^2*m1^2*cos(a3_1)^2)^2);
  d3f(3,58) = (4*L^4*R^4*m1^4*cos(a3_1)^2*sin(a3_1)^2)/(I1*I2 + L^2*R^2*m1^2 + I2*L^2*m1 + I1*R^2*m1 + I1*R^2*m2 + L^2*R^2*m1*m2 - L^2*R^2*m1^2*cos(a3_1)^2)^2 - (2*L^2*R^2*m1^2*(2*cos(a3_1)^2 - 1))/(I1*I2 + L^2*R^2*m1^2 + I2*L^2*m1 + I1*R^2*m1 + I1*R^2*m2 + L^2*R^2*m1*m2 - L^2*R^2*m1^2*cos(a3_1)^2);
  d3f(3,62) = (L^2*R^2*m1^2*sin(a3_1)^2*(100*I2*Ke*Kt + 50*I2*Rm*cfm + 100*Ke*Kt*R^2*m1 + 100*Ke*Kt*R^2*m2 + 50*R^2*Rm*cfm*m1 + 50*R^2*Rm*cfm*m2 + 100*Ke*Kt*L*R*m1*cos(a3_1) + 50*L*R*Rm*cfm*m1*cos(a3_1) + 50*L*R*Rm*cfw*m1*cos(a3_1)))/(25*Rm*(I1*I2 + L^2*R^2*m1^2 + I2*L^2*m1 + I1*R^2*m1 + I1*R^2*m2 + L^2*R^2*m1*m2 - L^2*R^2*m1^2*cos(a3_1)^2)^2) - (L^2*R^2*m1^2*cos(a3_1)^2*(100*I2*Ke*Kt + 50*I2*Rm*cfm + 100*Ke*Kt*R^2*m1 + 100*Ke*Kt*R^2*m2 + 50*R^2*Rm*cfm*m1 + 50*R^2*Rm*cfm*m2 + 100*Ke*Kt*L*R*m1*cos(a3_1) + 50*L*R*Rm*cfm*m1*cos(a3_1) + 50*L*R*Rm*cfw*m1*cos(a3_1)))/(25*Rm*(I1*I2 + L^2*R^2*m1^2 + I2*L^2*m1 + I1*R^2*m1 + I1*R^2*m2 + L^2*R^2*m1*m2 - L^2*R^2*m1^2*cos(a3_1)^2)^2) - (L*R*m1*cos(a3_1)*(Rm*cfm + Rm*cfw + 2*Ke*Kt))/(Rm*(I1*I2 + I2*L^2*m1 + I1*R^2*m1 + I1*R^2*m2 + L^2*R^2*m1*m2 + L^2*R^2*m1^2*sin(a3_1)^2)) + (2*L^3*R^3*m1^3*cos(a3_1)*sin(a3_1)^2*(Rm*cfm + Rm*cfw + 2*Ke*Kt))/(Rm*(I1*I2 + I2*L^2*m1 + I1*R^2*m1 + I1*R^2*m2 + L^2*R^2*m1*m2 + L^2*R^2*m1^2*sin(a3_1)^2)^2) + (4*L^4*R^4*m1^4*cos(a3_1)^2*sin(a3_1)^2*(100*I2*Ke*Kt + 50*I2*Rm*cfm + 100*Ke*Kt*R^2*m1 + 100*Ke*Kt*R^2*m2 + 50*R^2*Rm*cfm*m1 + 50*R^2*Rm*cfm*m2 + 100*Ke*Kt*L*R*m1*cos(a3_1) + 50*L*R*Rm*cfm*m1*cos(a3_1) + 50*L*R*Rm*cfw*m1*cos(a3_1)))/(25*Rm*(I1*I2 + L^2*R^2*m1^2 + I2*L^2*m1 + I1*R^2*m1 + I1*R^2*m2 + L^2*R^2*m1*m2 - L^2*R^2*m1^2*cos(a3_1)^2)^3) + (2*L^3*R^3*m1^3*cos(a3_1)*sin(a3_1)^2*(Rm*cfm + Rm*cfw + 2*Ke*Kt))/(Rm*(I1*I2 + L^2*R^2*m1^2 + I2*L^2*m1 + I1*R^2*m1 + I1*R^2*m2 + L^2*R^2*m1*m2 - L^2*R^2*m1^2*cos(a3_1)^2)^2);
  d3f(3,68) = (Kt*L^2*R^2*V*m1^2*sin(a3_1)*(2*I2*sin(a3_1) + 2*R^2*m1*sin(a3_1) + 2*R^2*m2*sin(a3_1) + 2*L*R*m1*cos(a3_1)*sin(a3_1)))/(50*Rm*(I1*I2 + L^2*R^2*m1^2 + I2*L^2*m1 + I1*R^2*m1 + I1*R^2*m2 + L^2*R^2*m1*m2 - L^2*R^2*m1^2*cos(a3_1)^2)^2) - (Kt*L*R*V*m1*cos(a3_1)*(I1*I2 + L^2*R^2*m1^2 + I2*L^2*m1 + I1*R^2*m1 + I1*R^2*m2 + L^2*R^2*m1*m2 + L^2*R^2*m1^2*cos(a3_1)^2 + 2*L*R^3*m1^2*cos(a3_1) + 2*I2*L*R*m1*cos(a3_1) + 2*L*R^3*m1*m2*cos(a3_1)))/(50*Rm*(I1*I2 + L^2*R^2*m1^2 + I2*L^2*m1 + I1*R^2*m1 + I1*R^2*m2 + L^2*R^2*m1*m2 - L^2*R^2*m1^2*cos(a3_1)^2)^2) + (2*Kt*L^3*R^3*V*m1^3*cos(a3_1)*sin(a3_1)^2*(I1*I2 + L^2*R^2*m1^2 + I2*L^2*m1 + I1*R^2*m1 + I1*R^2*m2 + L^2*R^2*m1*m2 + L^2*R^2*m1^2*cos(a3_1)^2 + 2*L*R^3*m1^2*cos(a3_1) + 2*I2*L*R*m1*cos(a3_1) + 2*L*R^3*m1*m2*cos(a3_1)))/(25*Rm*(I1*I2 + L^2*R^2*m1^2 + I2*L^2*m1 + I1*R^2*m1 + I1*R^2*m2 + L^2*R^2*m1*m2 - L^2*R^2*m1^2*cos(a3_1)^2)^3);
  d3f(3,116) = (L*R*m1*(2*Ke*Kt*cos(a3_1) + Rm*cfm*cos(a3_1) + 4*L*R*Rm*a3_3*m1*sin(2*a3_1)))/(Rm*(I1*I2 + L^2*R^2*m1^2 + I2*L^2*m1 + I1*R^2*m1 + I1*R^2*m2 + L^2*R^2*m1*m2 - L^2*R^2*m1^2*cos(a3_1)^2)) + (L^2*R^2*m1^2*cos(a3_1)^2*(100*I2*Ke*Kt + 50*I2*Rm*cfm + 100*Ke*Kt*R^2*m1 + 100*Ke*Kt*R^2*m2 + 50*R^2*Rm*cfm*m1 + 50*R^2*Rm*cfm*m2 + 50*L^2*R^2*Rm*a3_3*m1^2*sin(2*a3_1) + 100*Ke*Kt*L*R*m1*cos(a3_1) + 50*L*R*Rm*cfm*m1*cos(a3_1)))/(25*Rm*(I1*I2 + L^2*R^2*m1^2 + I2*L^2*m1 + I1*R^2*m1 + I1*R^2*m2 + L^2*R^2*m1*m2 - L^2*R^2*m1^2*cos(a3_1)^2)^2) - (L^2*R^2*m1^2*sin(a3_1)^2*(100*I2*Ke*Kt + 50*I2*Rm*cfm + 100*Ke*Kt*R^2*m1 + 100*Ke*Kt*R^2*m2 + 50*R^2*Rm*cfm*m1 + 50*R^2*Rm*cfm*m2 + 50*L^2*R^2*Rm*a3_3*m1^2*sin(2*a3_1) + 100*Ke*Kt*L*R*m1*cos(a3_1) + 50*L*R*Rm*cfm*m1*cos(a3_1)))/(25*Rm*(I1*I2 + L^2*R^2*m1^2 + I2*L^2*m1 + I1*R^2*m1 + I1*R^2*m2 + L^2*R^2*m1*m2 - L^2*R^2*m1^2*cos(a3_1)^2)^2) - (4*L^4*R^4*m1^4*cos(a3_1)^2*sin(a3_1)^2*(100*I2*Ke*Kt + 50*I2*Rm*cfm + 100*Ke*Kt*R^2*m1 + 100*Ke*Kt*R^2*m2 + 50*R^2*Rm*cfm*m1 + 50*R^2*Rm*cfm*m2 + 50*L^2*R^2*Rm*a3_3*m1^2*sin(2*a3_1) + 100*Ke*Kt*L*R*m1*cos(a3_1) + 50*L*R*Rm*cfm*m1*cos(a3_1)))/(25*Rm*(I1*I2 + L^2*R^2*m1^2 + I2*L^2*m1 + I1*R^2*m1 + I1*R^2*m2 + L^2*R^2*m1*m2 - L^2*R^2*m1^2*cos(a3_1)^2)^3) - (4*L^3*R^3*m1^3*cos(a3_1)*sin(a3_1)*(2*Ke*Kt*sin(a3_1) + Rm*cfm*sin(a3_1) - 2*L*R*Rm*a3_3*m1*(2*cos(a3_1)^2 - 1)))/(Rm*(I1*I2 + L^2*R^2*m1^2 + I2*L^2*m1 + I1*R^2*m1 + I1*R^2*m2 + L^2*R^2*m1*m2 - L^2*R^2*m1^2*cos(a3_1)^2)^2);
  d3f(3,118) = (4*L^4*R^4*m1^4*sin(2*a3_1)^2)/(2*I1*I2 + L^2*R^2*m1^2 + 2*I2*L^2*m1 + 2*I1*R^2*m1 + 2*I1*R^2*m2 + 2*L^2*R^2*m1*m2 - L^2*R^2*m1^2*cos(2*a3_1))^2 - (2*L^2*R^2*m1^2*cos(2*a3_1))/(I1*I2 + I2*L^2*m1 + I1*R^2*m1 + I1*R^2*m2 + L^2*R^2*m1*m2 + L^2*R^2*m1^2*sin(a3_1)^2);
  d3f(3,128) = (2*L^2*R^2*m1^2*(2*sin(a3_1)^2 - 1))/(I1*I2 + I2*L^2*m1 + I1*R^2*m1 + I1*R^2*m2 + L^2*R^2*m1*m2 + L^2*R^2*m1^2*sin(a3_1)^2) + (4*L^4*R^4*m1^4*cos(a3_1)^2*sin(a3_1)^2)/(I1*I2 + L^2*R^2*m1^2 + I2*L^2*m1 + I1*R^2*m1 + I1*R^2*m2 + L^2*R^2*m1*m2 - L^2*R^2*m1^2*cos(a3_1)^2)^2;
  d3f(3,152) = (L^2*R^2*m1^2*sin(a3_1)^2*(100*I2*Ke*Kt + 50*I2*Rm*cfm + 100*Ke*Kt*R^2*m1 + 100*Ke*Kt*R^2*m2 + 50*R^2*Rm*cfm*m1 + 50*R^2*Rm*cfm*m2 + 100*Ke*Kt*L*R*m1*cos(a3_1) + 50*L*R*Rm*cfm*m1*cos(a3_1) + 50*L*R*Rm*cfw*m1*cos(a3_1)))/(25*Rm*(I1*I2 + L^2*R^2*m1^2 + I2*L^2*m1 + I1*R^2*m1 + I1*R^2*m2 + L^2*R^2*m1*m2 - L^2*R^2*m1^2*cos(a3_1)^2)^2) - (L^2*R^2*m1^2*cos(a3_1)^2*(100*I2*Ke*Kt + 50*I2*Rm*cfm + 100*Ke*Kt*R^2*m1 + 100*Ke*Kt*R^2*m2 + 50*R^2*Rm*cfm*m1 + 50*R^2*Rm*cfm*m2 + 100*Ke*Kt*L*R*m1*cos(a3_1) + 50*L*R*Rm*cfm*m1*cos(a3_1) + 50*L*R*Rm*cfw*m1*cos(a3_1)))/(25*Rm*(I1*I2 + L^2*R^2*m1^2 + I2*L^2*m1 + I1*R^2*m1 + I1*R^2*m2 + L^2*R^2*m1*m2 - L^2*R^2*m1^2*cos(a3_1)^2)^2) - (L*R*m1*cos(a3_1)*(Rm*cfm + Rm*cfw + 2*Ke*Kt))/(Rm*(I1*I2 + L^2*R^2*m1^2 + I2*L^2*m1 + I1*R^2*m1 + I1*R^2*m2 + L^2*R^2*m1*m2 - L^2*R^2*m1^2*cos(a3_1)^2)) + (4*L^4*R^4*m1^4*cos(a3_1)^2*sin(a3_1)^2*(100*I2*Ke*Kt + 50*I2*Rm*cfm + 100*Ke*Kt*R^2*m1 + 100*Ke*Kt*R^2*m2 + 50*R^2*Rm*cfm*m1 + 50*R^2*Rm*cfm*m2 + 100*Ke*Kt*L*R*m1*cos(a3_1) + 50*L*R*Rm*cfm*m1*cos(a3_1) + 50*L*R*Rm*cfw*m1*cos(a3_1)))/(25*Rm*(I1*I2 + L^2*R^2*m1^2 + I2*L^2*m1 + I1*R^2*m1 + I1*R^2*m2 + L^2*R^2*m1*m2 - L^2*R^2*m1^2*cos(a3_1)^2)^3) + (4*L^3*R^3*m1^3*cos(a3_1)*sin(a3_1)^2*(Rm*cfm + Rm*cfw + 2*Ke*Kt))/(Rm*(I1*I2 + L^2*R^2*m1^2 + I2*L^2*m1 + I1*R^2*m1 + I1*R^2*m2 + L^2*R^2*m1*m2 - L^2*R^2*m1^2*cos(a3_1)^2)^2);
  d3f(3,188) = (2*Kt*L^3*R^3*V*m1^3*cos(a3_1)*sin(a3_1)^2)/(25*Rm*(I1*I2 + L^2*R^2*m1^2 + I2*L^2*m1 + I1*R^2*m1 + I1*R^2*m2 + L^2*R^2*m1*m2 - L^2*R^2*m1^2*cos(a3_1)^2)^2) - (Kt*L^2*R^2*V*m1^2*cos(a3_1)^2*(I2 + R^2*m1 + R^2*m2 + L*R*m1*cos(a3_1)))/(25*Rm*(I1*I2 + L^2*R^2*m1^2 + I2*L^2*m1 + I1*R^2*m1 + I1*R^2*m2 + L^2*R^2*m1*m2 - L^2*R^2*m1^2*cos(a3_1)^2)^2) - (Kt*L*R*V*m1*cos(a3_1))/(50*Rm*(I1*I2 + L^2*R^2*m1^2 + I2*L^2*m1 + I1*R^2*m1 + I1*R^2*m2 + L^2*R^2*m1*m2 - L^2*R^2*m1^2*cos(a3_1)^2)) + (Kt*L^2*R^2*V*m1^2*sin(a3_1)^2*(I2 + R^2*m1 + R^2*m2 + L*R*m1*cos(a3_1)))/(25*Rm*(I1*I2 + L^2*R^2*m1^2 + I2*L^2*m1 + I1*R^2*m1 + I1*R^2*m2 + L^2*R^2*m1*m2 - L^2*R^2*m1^2*cos(a3_1)^2)^2) + (4*Kt*L^4*R^4*V*m1^4*cos(a3_1)^2*sin(a3_1)^2*(I2 + R^2*m1 + R^2*m2 + L*R*m1*cos(a3_1)))/(25*Rm*(I1*I2 + L^2*R^2*m1^2 + I2*L^2*m1 + I1*R^2*m1 + I1*R^2*m2 + L^2*R^2*m1*m2 - L^2*R^2*m1^2*cos(a3_1)^2)^3);
  d3f(4,44) = (3*L^3*R^3*m1^3*sin(a3_1)^2*(100*Ke*Kt*a3_4*sin(a3_1) - 100*Ke*Kt*a3_3*sin(a3_1) + Kt*V*a4_1*sin(a3_1) - 50*Rm*a3_3*cfm*sin(a3_1) + 50*Rm*a3_4*cfm*sin(a3_1) + 50*I1*Rm*a3_3^2*cos(a3_1) + 50*L^2*Rm*a3_3^2*m1*cos(a3_1) - 50*L*Rm*g*m1*(2*cos(a3_1)^2 - 1)))/(25*Rm*(I1*I2 + L^2*R^2*m1^2 + I2*L^2*m1 + I1*R^2*m1 + I1*R^2*m2 + L^2*R^2*m1*m2 - L^2*R^2*m1^2*cos(a3_1)^2)^2) - (3*L^3*R^3*m1^3*cos(a3_1)^2*(100*Ke*Kt*a3_4*sin(a3_1) - 100*Ke*Kt*a3_3*sin(a3_1) + Kt*V*a4_1*sin(a3_1) - 50*Rm*a3_3*cfm*sin(a3_1) + 50*Rm*a3_4*cfm*sin(a3_1) + 50*I1*Rm*a3_3^2*cos(a3_1) + 50*L^2*Rm*a3_3^2*m1*cos(a3_1) - 50*L*Rm*g*m1*(2*cos(a3_1)^2 - 1)))/(25*Rm*(I1*I2 + L^2*R^2*m1^2 + I2*L^2*m1 + I1*R^2*m1 + I1*R^2*m2 + L^2*R^2*m1*m2 - L^2*R^2*m1^2*cos(a3_1)^2)^2) - (L*R*m1*(100*Ke*Kt*a3_4*sin(a3_1) - 100*Ke*Kt*a3_3*sin(a3_1) + Kt*V*a4_1*sin(a3_1) - 50*Rm*a3_3*cfm*sin(a3_1) + 50*Rm*a3_4*cfm*sin(a3_1) + 50*I1*Rm*a3_3^2*cos(a3_1) + 50*L^2*Rm*a3_3^2*m1*cos(a3_1) - 200*L*Rm*g*m1*(2*cos(a3_1)^2 - 1)))/(25*Rm*(2*I1*I2 + L^2*R^2*m1^2 + 2*I2*L^2*m1 + 2*I1*R^2*m1 + 2*I1*R^2*m2 - L^2*R^2*m1^2*(2*cos(a3_1)^2 - 1) + 2*L^2*R^2*m1*m2)) + (3*L^3*R^3*m1^3*cos(a3_1)*sin(a3_1)*(100*Ke*Kt*a3_3*cos(a3_1) - 100*Ke*Kt*a3_4*cos(a3_1) - Kt*V*a4_1*cos(a3_1) + 50*Rm*a3_3*cfm*cos(a3_1) - 50*Rm*a3_4*cfm*cos(a3_1) + 50*I1*Rm*a3_3^2*sin(a3_1) + 50*L^2*Rm*a3_3^2*m1*sin(a3_1) - 200*L*Rm*g*m1*cos(a3_1)*sin(a3_1)))/(25*Rm*(I1*I2 + L^2*R^2*m1^2 + I2*L^2*m1 + I1*R^2*m1 + I1*R^2*m2 + L^2*R^2*m1*m2 - L^2*R^2*m1^2*cos(a3_1)^2)^2) + (12*L^4*R^4*m1^4*cos(a3_1)*sin(a3_1)^3*(100*I1*Ke*Kt*a3_4 - 100*I1*Ke*Kt*a3_3 + I1*Kt*V*a4_1 - 50*I1*Rm*a3_3*cfm + 50*I1*Rm*a3_4*cfm + 50*I1*Rm*a3_4*cfw - 100*Ke*Kt*L^2*a3_3*m1 + 100*Ke*Kt*L^2*a3_4*m1 + Kt*L^2*V*a4_1*m1 - 50*L^2*Rm*a3_3*cfm*m1 + 50*L^2*Rm*a3_4*cfm*m1 + 50*L^2*Rm*a3_4*cfw*m1 - 50*L^3*R*Rm*a3_3^2*m1^2*sin(a3_1) + 25*L^2*R*Rm*g*m1^2*sin(2*a3_1) - 100*Ke*Kt*L*R*a3_3*m1*cos(a3_1) + 100*Ke*Kt*L*R*a3_4*m1*cos(a3_1) + Kt*L*R*V*a4_1*m1*cos(a3_1) - 50*L*R*Rm*a3_3*cfm*m1*cos(a3_1) + 50*L*R*Rm*a3_4*cfm*m1*cos(a3_1) - 50*I1*L*R*Rm*a3_3^2*m1*sin(a3_1)))/(25*Rm*(I1*I2 + L^2*R^2*m1^2 + I2*L^2*m1 + I1*R^2*m1 + I1*R^2*m2 + L^2*R^2*m1*m2 - L^2*R^2*m1^2*cos(a3_1)^2)^3) - (12*L^4*R^4*m1^4*cos(a3_1)^3*sin(a3_1)*(100*I1*Ke*Kt*a3_4 - 100*I1*Ke*Kt*a3_3 + I1*Kt*V*a4_1 - 50*I1*Rm*a3_3*cfm + 50*I1*Rm*a3_4*cfm + 50*I1*Rm*a3_4*cfw - 100*Ke*Kt*L^2*a3_3*m1 + 100*Ke*Kt*L^2*a3_4*m1 + Kt*L^2*V*a4_1*m1 - 50*L^2*Rm*a3_3*cfm*m1 + 50*L^2*Rm*a3_4*cfm*m1 + 50*L^2*Rm*a3_4*cfw*m1 - 50*L^3*R*Rm*a3_3^2*m1^2*sin(a3_1) + 25*L^2*R*Rm*g*m1^2*sin(2*a3_1) - 100*Ke*Kt*L*R*a3_3*m1*cos(a3_1) + 100*Ke*Kt*L*R*a3_4*m1*cos(a3_1) + Kt*L*R*V*a4_1*m1*cos(a3_1) - 50*L*R*Rm*a3_3*cfm*m1*cos(a3_1) + 50*L*R*Rm*a3_4*cfm*m1*cos(a3_1) - 50*I1*L*R*Rm*a3_3^2*m1*sin(a3_1)))/(25*Rm*(I1*I2 + L^2*R^2*m1^2 + I2*L^2*m1 + I1*R^2*m1 + I1*R^2*m2 + L^2*R^2*m1*m2 - L^2*R^2*m1^2*cos(a3_1)^2)^3) + (12*L^5*R^5*m1^5*cos(a3_1)^2*sin(a3_1)^2*(100*Ke*Kt*a3_4*sin(a3_1) - 100*Ke*Kt*a3_3*sin(a3_1) + Kt*V*a4_1*sin(a3_1) - 50*Rm*a3_3*cfm*sin(a3_1) + 50*Rm*a3_4*cfm*sin(a3_1) + 50*I1*Rm*a3_3^2*cos(a3_1) + 50*L^2*Rm*a3_3^2*m1*cos(a3_1) - 50*L*Rm*g*m1*(2*cos(a3_1)^2 - 1)))/(25*Rm*(I1*I2 + L^2*R^2*m1^2 + I2*L^2*m1 + I1*R^2*m1 + I1*R^2*m2 + L^2*R^2*m1*m2 - L^2*R^2*m1^2*cos(a3_1)^2)^3) + (24*L^6*R^6*m1^6*cos(a3_1)^3*sin(a3_1)^3*(100*I1*Ke*Kt*a3_4 - 100*I1*Ke*Kt*a3_3 + I1*Kt*V*a4_1 - 50*I1*Rm*a3_3*cfm + 50*I1*Rm*a3_4*cfm + 50*I1*Rm*a3_4*cfw - 100*Ke*Kt*L^2*a3_3*m1 + 100*Ke*Kt*L^2*a3_4*m1 + Kt*L^2*V*a4_1*m1 - 50*L^2*Rm*a3_3*cfm*m1 + 50*L^2*Rm*a3_4*cfm*m1 + 50*L^2*Rm*a3_4*cfw*m1 - 50*L^3*R*Rm*a3_3^2*m1^2*sin(a3_1) + 25*L^2*R*Rm*g*m1^2*sin(2*a3_1) - 100*Ke*Kt*L*R*a3_3*m1*cos(a3_1) + 100*Ke*Kt*L*R*a3_4*m1*cos(a3_1) + Kt*L*R*V*a4_1*m1*cos(a3_1) - 50*L*R*Rm*a3_3*cfm*m1*cos(a3_1) + 50*L*R*Rm*a3_4*cfm*m1*cos(a3_1) - 50*I1*L*R*Rm*a3_3^2*m1*sin(a3_1)))/(25*Rm*(I1*I2 + L^2*R^2*m1^2 + I2*L^2*m1 + I1*R^2*m1 + I1*R^2*m2 + L^2*R^2*m1*m2 - L^2*R^2*m1^2*cos(a3_1)^2)^4) - (4*L^2*R^2*m1^2*cos(a3_1)*sin(a3_1)*(100*I1*Ke*Kt*a3_4 - 100*I1*Ke*Kt*a3_3 + I1*Kt*V*a4_1 - 50*I1*Rm*a3_3*cfm + 50*I1*Rm*a3_4*cfm + 50*I1*Rm*a3_4*cfw - 100*Ke*Kt*L^2*a3_3*m1 + 100*Ke*Kt*L^2*a3_4*m1 + Kt*L^2*V*a4_1*m1 - 50*L^2*Rm*a3_3*cfm*m1 + 50*L^2*Rm*a3_4*cfm*m1 + 50*L^2*Rm*a3_4*cfw*m1 - 50*L^3*R*Rm*a3_3^2*m1^2*sin(a3_1) + 25*L^2*R*Rm*g*m1^2*sin(2*a3_1) - 100*Ke*Kt*L*R*a3_3*m1*cos(a3_1) + 100*Ke*Kt*L*R*a3_4*m1*cos(a3_1) + Kt*L*R*V*a4_1*m1*cos(a3_1) - 50*L*R*Rm*a3_3*cfm*m1*cos(a3_1) + 50*L*R*Rm*a3_4*cfm*m1*cos(a3_1) - 50*I1*L*R*Rm*a3_3^2*m1*sin(a3_1)))/(25*Rm*(I1*I2 + L^2*R^2*m1^2 + I2*L^2*m1 + I1*R^2*m1 + I1*R^2*m2 + L^2*R^2*m1*m2 - L^2*R^2*m1^2*cos(a3_1)^2)^2);
  d3f(4,46) = (2*L^2*R^2*m1^2*sin(a3_1)^2*(2*I1*Ke*Kt + I1*Rm*cfm + 2*Ke*Kt*L^2*m1 + L^2*Rm*cfm*m1 + 2*L^3*R*Rm*a3_3*m1^2*sin(a3_1) + 2*Ke*Kt*L*R*m1*cos(a3_1) + L*R*Rm*cfm*m1*cos(a3_1) + 2*I1*L*R*Rm*a3_3*m1*sin(a3_1)))/(Rm*(I1*I2 + L^2*R^2*m1^2 + I2*L^2*m1 + I1*R^2*m1 + I1*R^2*m2 + L^2*R^2*m1*m2 - L^2*R^2*m1^2*cos(a3_1)^2)^2) - (L*R*m1*(2*Ke*Kt*cos(a3_1) + Rm*cfm*cos(a3_1) + 2*I1*Rm*a3_3*sin(a3_1) + 2*L^2*Rm*a3_3*m1*sin(a3_1)))/(Rm*(I1*I2 + L^2*R^2*m1^2 + I2*L^2*m1 + I1*R^2*m1 + I1*R^2*m2 + L^2*R^2*m1*m2 - L^2*R^2*m1^2*cos(a3_1)^2)) - (2*L^2*R^2*m1^2*cos(a3_1)^2*(2*I1*Ke*Kt + I1*Rm*cfm + 2*Ke*Kt*L^2*m1 + L^2*Rm*cfm*m1 + 2*L^3*R*Rm*a3_3*m1^2*sin(a3_1) + 2*Ke*Kt*L*R*m1*cos(a3_1) + L*R*Rm*cfm*m1*cos(a3_1) + 2*I1*L*R*Rm*a3_3*m1*sin(a3_1)))/(Rm*(I1*I2 + L^2*R^2*m1^2 + I2*L^2*m1 + I1*R^2*m1 + I1*R^2*m2 + L^2*R^2*m1*m2 - L^2*R^2*m1^2*cos(a3_1)^2)^2) + (8*L^4*R^4*m1^4*cos(a3_1)^2*sin(a3_1)^2*(2*I1*Ke*Kt + I1*Rm*cfm + 2*Ke*Kt*L^2*m1 + L^2*Rm*cfm*m1 + 2*L^3*R*Rm*a3_3*m1^2*sin(a3_1) + 2*Ke*Kt*L*R*m1*cos(a3_1) + L*R*Rm*cfm*m1*cos(a3_1) + 2*I1*L*R*Rm*a3_3*m1*sin(a3_1)))/(Rm*(I1*I2 + L^2*R^2*m1^2 + I2*L^2*m1 + I1*R^2*m1 + I1*R^2*m2 + L^2*R^2*m1*m2 - L^2*R^2*m1^2*cos(a3_1)^2)^3) + (4*L^3*R^3*m1^3*cos(a3_1)*sin(a3_1)*(2*Ke*Kt*sin(a3_1) + Rm*cfm*sin(a3_1) - 2*I1*Rm*a3_3*cos(a3_1) - 2*L^2*Rm*a3_3*m1*cos(a3_1)))/(Rm*(I1*I2 + L^2*R^2*m1^2 + I2*L^2*m1 + I1*R^2*m1 + I1*R^2*m2 + L^2*R^2*m1*m2 - L^2*R^2*m1^2*cos(a3_1)^2)^2);
  d3f(4,47) = (2*L^2*R^2*m1^2*cos(a3_1)^2*(2*I1*Ke*Kt + I1*Rm*cfm + I1*Rm*cfw + 2*Ke*Kt*L^2*m1 + L^2*Rm*cfm*m1 + L^2*Rm*cfw*m1 + 2*Ke*Kt*L*R*m1*cos(a3_1) + L*R*Rm*cfm*m1*cos(a3_1)))/(Rm*(I1*I2 + L^2*R^2*m1^2 + I2*L^2*m1 + I1*R^2*m1 + I1*R^2*m2 + L^2*R^2*m1*m2 - L^2*R^2*m1^2*cos(a3_1)^2)^2) + (L*R*m1*cos(a3_1)*(Rm*cfm + 2*Ke*Kt))/(Rm*(I1*I2 + I2*L^2*m1 + I1*R^2*m1 + I1*R^2*m2 + L^2*R^2*m1*m2 + L^2*R^2*m1^2*sin(a3_1)^2)) - (2*L^2*R^2*m1^2*sin(a3_1)^2*(2*I1*Ke*Kt + I1*Rm*cfm + I1*Rm*cfw + 2*Ke*Kt*L^2*m1 + L^2*Rm*cfm*m1 + L^2*Rm*cfw*m1 + 2*Ke*Kt*L*R*m1*cos(a3_1) + L*R*Rm*cfm*m1*cos(a3_1)))/(Rm*(I1*I2 + L^2*R^2*m1^2 + I2*L^2*m1 + I1*R^2*m1 + I1*R^2*m2 + L^2*R^2*m1*m2 - L^2*R^2*m1^2*cos(a3_1)^2)^2) - (2*L^3*R^3*m1^3*cos(a3_1)*sin(a3_1)^2*(Rm*cfm + 2*Ke*Kt))/(Rm*(I1*I2 + L^2*R^2*m1^2 + I2*L^2*m1 + I1*R^2*m1 + I1*R^2*m2 + L^2*R^2*m1*m2 - L^2*R^2*m1^2*cos(a3_1)^2)^2) - (8*L^4*R^4*m1^4*cos(a3_1)^2*sin(a3_1)^2*(2*I1*Ke*Kt + I1*Rm*cfm + I1*Rm*cfw + 2*Ke*Kt*L^2*m1 + L^2*Rm*cfm*m1 + L^2*Rm*cfw*m1 + 2*Ke*Kt*L*R*m1*cos(a3_1) + L*R*Rm*cfm*m1*cos(a3_1)))/(Rm*(I1*I2 + L^2*R^2*m1^2 + I2*L^2*m1 + I1*R^2*m1 + I1*R^2*m2 + L^2*R^2*m1*m2 - L^2*R^2*m1^2*cos(a3_1)^2)^3) - (2*L^3*R^3*m1^3*cos(a3_1)*sin(a3_1)^2*(Rm*cfm + 2*Ke*Kt))/(Rm*(I1*I2 + I2*L^2*m1 + I1*R^2*m1 + I1*R^2*m2 + L^2*R^2*m1*m2 + L^2*R^2*m1^2*sin(a3_1)^2)^2);
  d3f(4,48) = (Kt*L*R*V*m1*cos(a3_1)*(I1*I2 + L^2*R^2*m1^2 + I2*L^2*m1 + I1*R^2*m1 + I1*R^2*m2 + L^2*R^2*m1*m2 + L^2*R^2*m1^2*cos(a3_1)^2 + 2*L^3*R*m1^2*cos(a3_1) + 2*I1*L*R*m1*cos(a3_1)))/(50*Rm*(I1*I2 + L^2*R^2*m1^2 + I2*L^2*m1 + I1*R^2*m1 + I1*R^2*m2 + L^2*R^2*m1*m2 - L^2*R^2*m1^2*cos(a3_1)^2)^2) - (Kt*L^2*R^2*V*m1^2*sin(a3_1)*(2*I1*sin(a3_1) + 2*L^2*m1*sin(a3_1) + 2*L*R*m1*cos(a3_1)*sin(a3_1)))/(50*Rm*(I1*I2 + L^2*R^2*m1^2 + I2*L^2*m1 + I1*R^2*m1 + I1*R^2*m2 + L^2*R^2*m1*m2 - L^2*R^2*m1^2*cos(a3_1)^2)^2) - (2*Kt*L^3*R^3*V*m1^3*cos(a3_1)*sin(a3_1)^2*(I1*I2 + L^2*R^2*m1^2 + I2*L^2*m1 + I1*R^2*m1 + I1*R^2*m2 + L^2*R^2*m1*m2 + L^2*R^2*m1^2*cos(a3_1)^2 + 2*L^3*R*m1^2*cos(a3_1) + 2*I1*L*R*m1*cos(a3_1)))/(25*Rm*(I1*I2 + L^2*R^2*m1^2 + I2*L^2*m1 + I1*R^2*m1 + I1*R^2*m2 + L^2*R^2*m1*m2 - L^2*R^2*m1^2*cos(a3_1)^2)^3);
  d3f(4,56) = (L^2*R^2*m1^2*sin(a3_1)^2*(100*I1*Ke*Kt + 50*I1*Rm*cfm + 100*Ke*Kt*L^2*m1 + 50*L^2*Rm*cfm*m1 + 100*L^3*R*Rm*a3_3*m1^2*sin(a3_1) + 100*Ke*Kt*L*R*m1*cos(a3_1) + 50*L*R*Rm*cfm*m1*cos(a3_1) + 100*I1*L*R*Rm*a3_3*m1*sin(a3_1)))/(25*Rm*(I1*I2 + L^2*R^2*m1^2 + I2*L^2*m1 + I1*R^2*m1 + I1*R^2*m2 + L^2*R^2*m1*m2 - L^2*R^2*m1^2*cos(a3_1)^2)^2) - (L*R*m1*(100*Ke*Kt*cos(a3_1) + 50*Rm*cfm*cos(a3_1) + 100*I1*Rm*a3_3*sin(a3_1) + 100*L^2*Rm*a3_3*m1*sin(a3_1)))/(50*Rm*(I1*I2 + L^2*R^2*m1^2 + I2*L^2*m1 + I1*R^2*m1 + I1*R^2*m2 + L^2*R^2*m1*m2 - L^2*R^2*m1^2*cos(a3_1)^2)) - (L^2*R^2*m1^2*cos(a3_1)^2*(100*I1*Ke*Kt + 50*I1*Rm*cfm + 100*Ke*Kt*L^2*m1 + 50*L^2*Rm*cfm*m1 + 100*L^3*R*Rm*a3_3*m1^2*sin(a3_1) + 100*Ke*Kt*L*R*m1*cos(a3_1) + 50*L*R*Rm*cfm*m1*cos(a3_1) + 100*I1*L*R*Rm*a3_3*m1*sin(a3_1)))/(25*Rm*(I1*I2 + L^2*R^2*m1^2 + I2*L^2*m1 + I1*R^2*m1 + I1*R^2*m2 + L^2*R^2*m1*m2 - L^2*R^2*m1^2*cos(a3_1)^2)^2) + (4*L^4*R^4*m1^4*cos(a3_1)^2*sin(a3_1)^2*(100*I1*Ke*Kt + 50*I1*Rm*cfm + 100*Ke*Kt*L^2*m1 + 50*L^2*Rm*cfm*m1 + 100*L^3*R*Rm*a3_3*m1^2*sin(a3_1) + 100*Ke*Kt*L*R*m1*cos(a3_1) + 50*L*R*Rm*cfm*m1*cos(a3_1) + 100*I1*L*R*Rm*a3_3*m1*sin(a3_1)))/(25*Rm*(I1*I2 + L^2*R^2*m1^2 + I2*L^2*m1 + I1*R^2*m1 + I1*R^2*m2 + L^2*R^2*m1*m2 - L^2*R^2*m1^2*cos(a3_1)^2)^3) + (2*L^3*R^3*m1^3*cos(a3_1)*sin(a3_1)*(2*Ke*Kt*sin(a3_1) + Rm*cfm*sin(a3_1) - 2*I1*Rm*a3_3*cos(a3_1) - 2*L^2*Rm*a3_3*m1*cos(a3_1)))/(Rm*(I1*I2 + L^2*R^2*m1^2 + I2*L^2*m1 + I1*R^2*m1 + I1*R^2*m2 + L^2*R^2*m1*m2 - L^2*R^2*m1^2*cos(a3_1)^2)^2) + (L^3*R^3*m1^3*cos(a3_1)*sin(a3_1)*(100*Ke*Kt*sin(a3_1) + 50*Rm*cfm*sin(a3_1) - 100*I1*Rm*a3_3*cos(a3_1) - 100*L^2*Rm*a3_3*m1*cos(a3_1)))/(25*Rm*(I1*I2 + L^2*R^2*m1^2 + I2*L^2*m1 + I1*R^2*m1 + I1*R^2*m2 + L^2*R^2*m1*m2 - L^2*R^2*m1^2*cos(a3_1)^2)^2);
  d3f(4,58) = (2*L*R*m1*cos(a3_1)*(I1 + L^2*m1)*(I1*I2 + I2*L^2*m1 + I1*R^2*m1 + I1*R^2*m2 + L^2*R^2*m1*m2 - L^2*R^2*m1^2*sin(a3_1)^2))/(I1*I2 + I2*L^2*m1 + I1*R^2*m1 + I1*R^2*m2 + L^2*R^2*m1*m2 + L^2*R^2*m1^2*sin(a3_1)^2)^2;
  d3f(4,62) = (L^2*R^2*m1^2*cos(a3_1)^2*(100*I1*Ke*Kt + 50*I1*Rm*cfm + 50*I1*Rm*cfw + 100*Ke*Kt*L^2*m1 + 50*L^2*Rm*cfm*m1 + 50*L^2*Rm*cfw*m1 + 100*Ke*Kt*L*R*m1*cos(a3_1) + 50*L*R*Rm*cfm*m1*cos(a3_1)))/(25*Rm*(I1*I2 + L^2*R^2*m1^2 + I2*L^2*m1 + I1*R^2*m1 + I1*R^2*m2 + L^2*R^2*m1*m2 - L^2*R^2*m1^2*cos(a3_1)^2)^2) + (L*R*m1*cos(a3_1)*(Rm*cfm + 2*Ke*Kt))/(Rm*(I1*I2 + I2*L^2*m1 + I1*R^2*m1 + I1*R^2*m2 + L^2*R^2*m1*m2 + L^2*R^2*m1^2*sin(a3_1)^2)) - (L^2*R^2*m1^2*sin(a3_1)^2*(100*I1*Ke*Kt + 50*I1*Rm*cfm + 50*I1*Rm*cfw + 100*Ke*Kt*L^2*m1 + 50*L^2*Rm*cfm*m1 + 50*L^2*Rm*cfw*m1 + 100*Ke*Kt*L*R*m1*cos(a3_1) + 50*L*R*Rm*cfm*m1*cos(a3_1)))/(25*Rm*(I1*I2 + L^2*R^2*m1^2 + I2*L^2*m1 + I1*R^2*m1 + I1*R^2*m2 + L^2*R^2*m1*m2 - L^2*R^2*m1^2*cos(a3_1)^2)^2) - (2*L^3*R^3*m1^3*cos(a3_1)*sin(a3_1)^2*(Rm*cfm + 2*Ke*Kt))/(Rm*(I1*I2 + L^2*R^2*m1^2 + I2*L^2*m1 + I1*R^2*m1 + I1*R^2*m2 + L^2*R^2*m1*m2 - L^2*R^2*m1^2*cos(a3_1)^2)^2) - (4*L^4*R^4*m1^4*cos(a3_1)^2*sin(a3_1)^2*(100*I1*Ke*Kt + 50*I1*Rm*cfm + 50*I1*Rm*cfw + 100*Ke*Kt*L^2*m1 + 50*L^2*Rm*cfm*m1 + 50*L^2*Rm*cfw*m1 + 100*Ke*Kt*L*R*m1*cos(a3_1) + 50*L*R*Rm*cfm*m1*cos(a3_1)))/(25*Rm*(I1*I2 + L^2*R^2*m1^2 + I2*L^2*m1 + I1*R^2*m1 + I1*R^2*m2 + L^2*R^2*m1*m2 - L^2*R^2*m1^2*cos(a3_1)^2)^3) - (2*L^3*R^3*m1^3*cos(a3_1)*sin(a3_1)^2*(Rm*cfm + 2*Ke*Kt))/(Rm*(I1*I2 + I2*L^2*m1 + I1*R^2*m1 + I1*R^2*m2 + L^2*R^2*m1*m2 + L^2*R^2*m1^2*sin(a3_1)^2)^2);
  d3f(4,68) = (Kt*L*R*V*m1*cos(a3_1)*(I1*I2 + L^2*R^2*m1^2 + I2*L^2*m1 + I1*R^2*m1 + I1*R^2*m2 + L^2*R^2*m1*m2 + L^2*R^2*m1^2*cos(a3_1)^2 + 2*L^3*R*m1^2*cos(a3_1) + 2*I1*L*R*m1*cos(a3_1)))/(50*Rm*(I1*I2 + L^2*R^2*m1^2 + I2*L^2*m1 + I1*R^2*m1 + I1*R^2*m2 + L^2*R^2*m1*m2 - L^2*R^2*m1^2*cos(a3_1)^2)^2) - (Kt*L^2*R^2*V*m1^2*sin(a3_1)*(2*I1*sin(a3_1) + 2*L^2*m1*sin(a3_1) + 2*L*R*m1*cos(a3_1)*sin(a3_1)))/(50*Rm*(I1*I2 + L^2*R^2*m1^2 + I2*L^2*m1 + I1*R^2*m1 + I1*R^2*m2 + L^2*R^2*m1*m2 - L^2*R^2*m1^2*cos(a3_1)^2)^2) - (2*Kt*L^3*R^3*V*m1^3*cos(a3_1)*sin(a3_1)^2*(I1*I2 + L^2*R^2*m1^2 + I2*L^2*m1 + I1*R^2*m1 + I1*R^2*m2 + L^2*R^2*m1*m2 + L^2*R^2*m1^2*cos(a3_1)^2 + 2*L^3*R*m1^2*cos(a3_1) + 2*I1*L*R*m1*cos(a3_1)))/(25*Rm*(I1*I2 + L^2*R^2*m1^2 + I2*L^2*m1 + I1*R^2*m1 + I1*R^2*m2 + L^2*R^2*m1*m2 - L^2*R^2*m1^2*cos(a3_1)^2)^3);
  d3f(4,116) = (L^2*R^2*m1^2*sin(a3_1)^2*(100*I1*Ke*Kt + 50*I1*Rm*cfm + 100*Ke*Kt*L^2*m1 + 50*L^2*Rm*cfm*m1 + 100*L^3*R*Rm*a3_3*m1^2*sin(a3_1) + 100*Ke*Kt*L*R*m1*cos(a3_1) + 50*L*R*Rm*cfm*m1*cos(a3_1) + 100*I1*L*R*Rm*a3_3*m1*sin(a3_1)))/(25*Rm*(I1*I2 + L^2*R^2*m1^2 + I2*L^2*m1 + I1*R^2*m1 + I1*R^2*m2 + L^2*R^2*m1*m2 - L^2*R^2*m1^2*cos(a3_1)^2)^2) - (L*R*m1*(100*Ke*Kt*cos(a3_1) + 50*Rm*cfm*cos(a3_1) + 100*I1*Rm*a3_3*sin(a3_1) + 100*L^2*Rm*a3_3*m1*sin(a3_1)))/(50*Rm*(I1*I2 + L^2*R^2*m1^2 + I2*L^2*m1 + I1*R^2*m1 + I1*R^2*m2 + L^2*R^2*m1*m2 - L^2*R^2*m1^2*cos(a3_1)^2)) - (L^2*R^2*m1^2*cos(a3_1)^2*(100*I1*Ke*Kt + 50*I1*Rm*cfm + 100*Ke*Kt*L^2*m1 + 50*L^2*Rm*cfm*m1 + 100*L^3*R*Rm*a3_3*m1^2*sin(a3_1) + 100*Ke*Kt*L*R*m1*cos(a3_1) + 50*L*R*Rm*cfm*m1*cos(a3_1) + 100*I1*L*R*Rm*a3_3*m1*sin(a3_1)))/(25*Rm*(I1*I2 + L^2*R^2*m1^2 + I2*L^2*m1 + I1*R^2*m1 + I1*R^2*m2 + L^2*R^2*m1*m2 - L^2*R^2*m1^2*cos(a3_1)^2)^2) + (4*L^4*R^4*m1^4*cos(a3_1)^2*sin(a3_1)^2*(100*I1*Ke*Kt + 50*I1*Rm*cfm + 100*Ke*Kt*L^2*m1 + 50*L^2*Rm*cfm*m1 + 100*L^3*R*Rm*a3_3*m1^2*sin(a3_1) + 100*Ke*Kt*L*R*m1*cos(a3_1) + 50*L*R*Rm*cfm*m1*cos(a3_1) + 100*I1*L*R*Rm*a3_3*m1*sin(a3_1)))/(25*Rm*(I1*I2 + L^2*R^2*m1^2 + I2*L^2*m1 + I1*R^2*m1 + I1*R^2*m2 + L^2*R^2*m1*m2 - L^2*R^2*m1^2*cos(a3_1)^2)^3) + (2*L^3*R^3*m1^3*cos(a3_1)*sin(a3_1)*(100*Ke*Kt*sin(a3_1) + 50*Rm*cfm*sin(a3_1) - 100*I1*Rm*a3_3*cos(a3_1) - 100*L^2*Rm*a3_3*m1*cos(a3_1)))/(25*Rm*(I1*I2 + L^2*R^2*m1^2 + I2*L^2*m1 + I1*R^2*m1 + I1*R^2*m2 + L^2*R^2*m1*m2 - L^2*R^2*m1^2*cos(a3_1)^2)^2);
  d3f(4,118) = (2*L*R*m1*cos(a3_1)*(I1 + L^2*m1)*(I1*I2 + I2*L^2*m1 + I1*R^2*m1 + I1*R^2*m2 + L^2*R^2*m1*m2 - L^2*R^2*m1^2*sin(a3_1)^2))/(I1*I2 + L^2*R^2*m1^2 + I2*L^2*m1 + I1*R^2*m1 + I1*R^2*m2 + L^2*R^2*m1*m2 - L^2*R^2*m1^2*cos(a3_1)^2)^2;
  d3f(4,128) = (2*L*R*m1*cos(a3_1)*(I1 + L^2*m1)*(I1*I2 + I2*L^2*m1 + I1*R^2*m1 + I1*R^2*m2 + L^2*R^2*m1*m2 - L^2*R^2*m1^2*sin(a3_1)^2))/(I1*I2 + L^2*R^2*m1^2 + I2*L^2*m1 + I1*R^2*m1 + I1*R^2*m2 + L^2*R^2*m1*m2 - L^2*R^2*m1^2*cos(a3_1)^2)^2;
  d3f(4,152) = (L*R*m1*cos(a3_1)*(Rm*cfm + 2*Ke*Kt))/(Rm*(I1*I2 + L^2*R^2*m1^2 + I2*L^2*m1 + I1*R^2*m1 + I1*R^2*m2 + L^2*R^2*m1*m2 - L^2*R^2*m1^2*cos(a3_1)^2)) + (L^2*R^2*m1^2*cos(a3_1)^2*(100*I1*Ke*Kt + 50*I1*Rm*cfm + 50*I1*Rm*cfw + 100*Ke*Kt*L^2*m1 + 50*L^2*Rm*cfm*m1 + 50*L^2*Rm*cfw*m1 + 100*Ke*Kt*L*R*m1*cos(a3_1) + 50*L*R*Rm*cfm*m1*cos(a3_1)))/(25*Rm*(I1*I2 + L^2*R^2*m1^2 + I2*L^2*m1 + I1*R^2*m1 + I1*R^2*m2 + L^2*R^2*m1*m2 - L^2*R^2*m1^2*cos(a3_1)^2)^2) - (L^2*R^2*m1^2*sin(a3_1)^2*(100*I1*Ke*Kt + 50*I1*Rm*cfm + 50*I1*Rm*cfw + 100*Ke*Kt*L^2*m1 + 50*L^2*Rm*cfm*m1 + 50*L^2*Rm*cfw*m1 + 100*Ke*Kt*L*R*m1*cos(a3_1) + 50*L*R*Rm*cfm*m1*cos(a3_1)))/(25*Rm*(I1*I2 + L^2*R^2*m1^2 + I2*L^2*m1 + I1*R^2*m1 + I1*R^2*m2 + L^2*R^2*m1*m2 - L^2*R^2*m1^2*cos(a3_1)^2)^2) - (2*L^3*R^3*m1^3*cos(a3_1)*sin(a3_1)^2*(50*Rm*cfm + 100*Ke*Kt))/(25*Rm*(I1*I2 + L^2*R^2*m1^2 + I2*L^2*m1 + I1*R^2*m1 + I1*R^2*m2 + L^2*R^2*m1*m2 - L^2*R^2*m1^2*cos(a3_1)^2)^2) - (4*L^4*R^4*m1^4*cos(a3_1)^2*sin(a3_1)^2*(100*I1*Ke*Kt + 50*I1*Rm*cfm + 50*I1*Rm*cfw + 100*Ke*Kt*L^2*m1 + 50*L^2*Rm*cfm*m1 + 50*L^2*Rm*cfw*m1 + 100*Ke*Kt*L*R*m1*cos(a3_1) + 50*L*R*Rm*cfm*m1*cos(a3_1)))/(25*Rm*(I1*I2 + L^2*R^2*m1^2 + I2*L^2*m1 + I1*R^2*m1 + I1*R^2*m2 + L^2*R^2*m1*m2 - L^2*R^2*m1^2*cos(a3_1)^2)^3);
  d3f(4,188) = (Kt*L*R*V*m1*cos(a3_1))/(50*Rm*(I1*I2 + L^2*R^2*m1^2 + I2*L^2*m1 + I1*R^2*m1 + I1*R^2*m2 + L^2*R^2*m1*m2 - L^2*R^2*m1^2*cos(a3_1)^2)) + (Kt*L^2*R^2*V*m1^2*cos(a3_1)^2*(I1 + L^2*m1 + L*R*m1*cos(a3_1)))/(25*Rm*(I1*I2 + L^2*R^2*m1^2 + I2*L^2*m1 + I1*R^2*m1 + I1*R^2*m2 + L^2*R^2*m1*m2 - L^2*R^2*m1^2*cos(a3_1)^2)^2) - (Kt*L^2*R^2*V*m1^2*sin(a3_1)^2*(I1 + L^2*m1 + L*R*m1*cos(a3_1)))/(25*Rm*(I1*I2 + L^2*R^2*m1^2 + I2*L^2*m1 + I1*R^2*m1 + I1*R^2*m2 + L^2*R^2*m1*m2 - L^2*R^2*m1^2*cos(a3_1)^2)^2) - (2*Kt*L^3*R^3*V*m1^3*cos(a3_1)*sin(a3_1)^2)/(25*Rm*(I1*I2 + L^2*R^2*m1^2 + I2*L^2*m1 + I1*R^2*m1 + I1*R^2*m2 + L^2*R^2*m1*m2 - L^2*R^2*m1^2*cos(a3_1)^2)^2) - (4*Kt*L^4*R^4*V*m1^4*cos(a3_1)^2*sin(a3_1)^2*(I1 + L^2*m1 + L*R*m1*cos(a3_1)))/(25*Rm*(I1*I2 + L^2*R^2*m1^2 + I2*L^2*m1 + I1*R^2*m1 + I1*R^2*m2 + L^2*R^2*m1*m2 - L^2*R^2*m1^2*cos(a3_1)^2)^3);
else
  d3f=[];
end  % if (order>=3)


 % NOTEST
