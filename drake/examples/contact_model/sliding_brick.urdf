<?xml version="1.0"?>
<robot xmlns="http://drake.mit.edu"
 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
 xsi:schemaLocation="http://drake.mit.edu ../../../../doc/drakeURDF.xsd" name="SlidingBrick">

 <!-- This emulates an actuated floating rpy joint.  Drake only allows actuators
 to be applied to single-dof joints (see issue #4153).  So, we composite the six
 degrees of freedom as a hierarchy of joints.  The hierarchy looks like this:

 world -F-
   xtrans -Px-
     ytrans -Py-
       xtrans -Pz-
         xrot -Rx-
           yrot -Ry-
             zrot -Rz-
               Brick

 The symbol "-X-" represents a one-dof joint between the parent body to
 its left and the child body below it.  The value of X is one of:
    F: A fixed joint
    Pi: A prismatic joint along the world frame's axis i, i ∈ {x, y, z}
    Ri: A revolute joint along the world frame's axis i, i ∈ {x, y, z}

 The fixed joint is implied by how the URDF is added to the tree.  In all other
 cases, the joint of the body and the name of the body's parent are coordinated.
 TODO(SeanCurtis-TRI): Add link to contact model documentation.
 -->
  <link name="xtrans"/>
  <link name="ytrans"/>
  <link name="ztrans"/>
  <link name="xrot"/>
  <link name="yrot"/>
  <link name="zrot"/>
  <link name="brick">
    <inertial>
      <mass value="50"/>
      <inertia ixx="50" ixy="0" ixz="0" iyy="100" iyz="0" izz="100"/>
    </inertial>
    <visual>
      <geometry>
        <box size="2 .5 1" />
      </geometry>
    </visual>

    <!--
    The brick's contact with the ground is modeled by explicit "point" contacts,
    zero-radius spheres at fixed locations.  This is to account for certain
    deficiencies in the collision detection algorithm.
    TODO(SeanCurtis-TRI): Reference the link to the contact model documentation
    for more details.
    -->
    <collision group="brick">
      <origin rpy="0 0 0" xyz="-1 -0.25 -0.5"/>
      <geometry>
        <sphere radius="0.0"/>
      </geometry>
    </collision>
    <collision group="brick">
      <origin rpy="0 0 0" xyz="1 -0.25 -0.5"/>
      <geometry>
        <sphere radius="0.0"/>
      </geometry>
    </collision>
    <collision group="brick">
      <origin rpy="0 0 0" xyz="1 0.25 -0.5"/>
      <geometry>
        <sphere radius="0.0"/>
      </geometry>
    </collision>
    <collision group="brick">
      <origin rpy="0 0 0" xyz="-1 0.25 -0.5"/>
      <geometry>
        <sphere radius="0.0"/>
      </geometry>
    </collision>
  </link>

  <joint name="xslide" type="prismatic">
    <origin rpy="0 0 0" xyz="0 0 0.5"/>
    <axis xyz="1 0 0"/>
    <parent link="xtrans"/>
    <child link="ytrans"/>
  </joint>
  <joint name="yslide" type="prismatic">
    <origin rpy="0 0 0" xyz="0 0 0"/>
    <axis xyz="0 1 0"/>
    <parent link="ytrans"/>
    <child link="ztrans"/>
  </joint>
  <joint name="zslide" type="prismatic">
    <origin rpy="0 0 0" xyz="0 0 0"/>
    <axis xyz="0 0 1"/>
    <parent link="ztrans"/>
    <child link="xrot"/>
  </joint>
  <joint name="xspin" type="revolute">
    <origin rpy="0 0 0" xyz="0 0 0"/>
    <axis xyz="1 0 0"/>
    <parent link="xrot"/>
    <child link="yrot"/>
  </joint>
  <joint name="yspin" type="revolute">
    <origin rpy="0 0 0" xyz="0 0 0"/>
    <axis xyz="0 1 0"/>
    <parent link="yrot"/>
    <child link="zrot"/>
  </joint>
  <joint name="zspin" type="revolute">
    <origin rpy="0 0 0" xyz="0 0 0"/>
    <axis xyz="0 0 1"/>
    <parent link="zrot"/>
    <child link="brick"/>
  </joint>

  <transmission name="slide_transmission">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="xslide"/>
    <actuator name="slide_actuator">
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
</robot>

