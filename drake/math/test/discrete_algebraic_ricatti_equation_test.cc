#include "drake/math/discrete_algebraic_ricatti_equation.h"
#include "drake/common/eigen_matrix_compare.h"
#include "drake/math/autodiff.h"
#include "gtest/gtest.h"
using Eigen::MatrixXd;

namespace drake {
namespace math {
namespace {
void test1(const Eigen::Ref<const MatrixXd>& A,
           const Eigen::Ref<const MatrixXd>& B,
           const Eigen::Ref<const MatrixXd>& Q,
           const Eigen::Ref<const MatrixXd>& R) {
  MatrixXd X = DiscreteAlgebraicRiccatiEquation(A, B, Q, R);
  MatrixXd Y = A.transpose() * X * A - X -
               A.transpose() * X * B * (B.transpose() * X * B + R).inverse() *
                   B.transpose() * X * A +
               Q;
  int n = X.rows();

  EXPECT_TRUE(CompareMatrices(Y, MatrixXd::Zero(n, n), 1E-10,
                              MatrixCompareType::absolute));
}

GTEST_TEST(DARE, test1) {
  int n = 10, m = 8;
  MatrixXd A(n, n), B(n, m), Q(n, n), R(m, m);
  A << -0.896782893602661, 0.853429693528722, 0.223407245035421,
      -0.890353172986452, -0.153224697512235, -0.240473593729579,
      1.04522049853086, -1.17813950128435, -0.190330214488796,
      0.942819565102170, 0.685837269850895, 0.756788597183548, 2.08039792621395,
      -0.0322556367684425, -0.356131603582330, -0.259094702827274,
      -0.805239953961071, -0.210068473358607, -0.163548449101655,
      -1.21324833321586, -0.387761882261878, -0.322469825597040,
      -0.509759202641067, -0.720484754649256, 0.365716043245367,
      0.491908234917246, -0.693751296083960, -0.0554355919108459,
      1.30897816016872, 1.00741660542680, 0.653089573286875, -1.61646833526392,
      0.207002208475963, -0.0578529772829209, -0.677003451121843,
      0.0512318768526531, 0.303452447522661, 1.04275698833055,
      0.870190332318216, -0.476344590693358, 1.15115824275589,
      -0.788953244799061, 2.23603820220151, -0.307751656729694,
      -0.116269574895719, -0.233951821996787, -1.26126276364655,
      -0.0389620224574263, 0.0355272716920195, -0.0458079289777195,
      0.0866634807361477, 1.55877551317984, -1.06226031128268,
      0.978535912381397, 0.614587751502697, -1.84078964112699,
      0.812091453182044, -1.36402438271466, -0.169747831451896,
      0.811729401892481, 0.00162567439864320, -0.729827055366268,
      0.0627841246350019, 1.55499680270696, -0.577776848206887,
      0.885188463116536, 1.28876141660788, -0.482573453694733,
      0.854306381248743, 0.992710437124865, -1.19919383400507,
      -0.254344643560580, 0.647853723833515, -0.354750240116427,
      1.74362378222545, 0.0918482246831397, 1.27534924127618,
      -0.477894177625997, 0.770826625186570, -1.49893357427313,
      -0.189134004473712, 0.970748644901756, 0.333629016124088,
      0.126843210007047, -0.809325468397215, 0.783909173391241,
      -0.101745326619448, -0.847829824732302, 0.843464739132305,
      0.571267546006270, -0.000373654509865430, -1.93374030303839,
      -0.0490461842897554, -0.319449134590659, 0.573923457716107,
      1.38626614717944, 1.55174460505415, -1.88849708507529, 0.680830985500630,
      -1.31685477063120;

  B << -0.427311240222723, -0.913165786084755, 0.209779166454452,
      2.50147853565438, -1.29286083686755, 0.0612507098640154,
      0.928848472288531, 1.56303756292223, 0.935256184309223, 0.182365716371640,
      -0.269925838304910, 1.44149775067413, -1.36989607465426,
      0.299164013727399, -0.0647950713087298, -0.964648627249915,
      -0.399205828259710, 0.296228108008230, 1.06476506756356,
      -1.07464417479601, -0.588782036832337, -0.242144592141241,
      1.13104579616133, 0.425187122031374, 0.399044780130801, 1.11373989134270,
      1.08167029888881, -0.298107286433477, 0.979016897834260,
      -0.756468705528977, 0.937468378141148, -1.72084897592402,
      0.250590321202633, 0.857505239405925, -0.972610401651510,
      1.28661506075304, -2.02437286703899, -0.126523012853484,
      0.214572106267953, -0.267876189905069, 1.31353050557003,
      -1.62789640472914, 0.106070836423291, 1.16605322861182, -1.76219894620437,
      0.215045814629431, 1.91458487858010, -0.313050500752321,
      0.814138658215181, -0.906335593855196, 0.936132443062086,
      -0.615488977973338, -0.650946232390825, 0.467021515359389,
      -2.23952897657672, -1.00873882787436, -0.939978717418056,
      0.460887589081333, 1.43971869713745, 0.446816899333100, -1.55702505832502,
      3.03762917426993, -0.624754939241578, 0.0418246751395776,
      -0.215983625218275, -1.58463827151155, -0.508198290794302,
      1.69983293219856, -2.74154849011266, -0.660227529431353,
      -0.720764540843378, 0.126999312055235, -0.201474246938658,
      -0.892692181894561, -1.04769334264851, 0.125911789672657,
      -1.49660070113608, 0.837418236977887, -1.10364254720933,
      -0.569262103819219;

  Q << 12.3453609197007, 3.58043896917558, -2.40163981481377, 2.11753131103592,
      0.950179551023735, -0.0870965660728412, -3.15911292570188,
      -8.48404744784382, -6.01820458465245, 4.74064917883426, 3.58043896917558,
      6.09853061324239, -1.08126635065036, -0.0257820126723088,
      4.84530040944164, -2.11392546987465, -1.75917402917721, -5.47426488615426,
      -2.16483394425078, 5.17624117684640, -2.40163981481377, -1.08126635065036,
      3.91159416627065, -0.408527604454702, -3.25156302972507, 1.83624350478982,
      -0.708658888511496, -0.150315057359803, 0.141252713847704,
      0.0131016918390090, 2.11753131103592, -0.0257820126723088,
      -0.408527604454702, 7.71431472103073, 0.438795180162208,
      -0.00133396185111945, 0.989767032170391, 1.38339343897218,
      -0.908256463076767, -0.999558648805689, 0.950179551023735,
      4.84530040944164, -3.25156302972507, 0.438795180162208, 8.58373260701758,
      -2.70464604180524, 1.30499791038606, -1.10286982214922, 0.251855457271804,
      1.24367204792582, -0.0870965660728412, -2.11392546987465,
      1.83624350478982, -0.00133396185111945, -2.70464604180524,
      6.70962212440922, 2.82461296433692, 3.21829704823595, 0.411667451545913,
      -7.70523955813871, -3.15911292570188, -1.75917402917721,
      -0.708658888511496, 0.989767032170391, 1.30499791038606, 2.82461296433692,
      7.36908995257401, 8.17797485485987, -0.120159604177047, -4.88281340480039,
      -8.48404744784382, -5.47426488615426, -0.150315057359803,
      1.38339343897218, -1.10286982214922, 3.21829704823595, 8.17797485485987,
      13.7862223830473, 4.11146537981680, -10.1854843027519, -6.01820458465245,
      -2.16483394425078, 0.141252713847704, -0.908256463076767,
      0.251855457271804, 0.411667451545913, -0.120159604177047,
      4.11146537981680, 10.4963586191613, -9.73456129406654, 4.74064917883426,
      5.17624117684640, 0.0131016918390090, -0.999558648805689,
      1.24367204792582, -7.70523955813871, -4.88281340480039, -10.1854843027519,
      -9.73456129406654, 19.8261408990844;

  R << 13.1825628906618, -0.895401238886474, -4.35672420450783,
      0.371438674879600, 2.56801239282808, 3.08105767354562, -3.49861615256743,
      -0.861127541199017, -0.895401238886474, 11.6013590672624,
      -5.89335678549182, -0.946638601115324, -3.40255631303439,
      4.42245571307858, -2.68989232864013, -0.645703422930910,
      -4.35672420450783, -5.89335678549182, 8.40988888550828, -3.60864670643811,
      1.58314131244890, -2.58305480427814, 1.36051946423029, -3.90461010828642,
      0.371438674879600, -0.946638601115324, -3.60864670643811,
      6.20249642091193, 0.947056282749360, 2.12746400846445, -0.173112839756888,
      5.96115177935686, 2.56801239282808, -3.40255631303439, 1.58314131244890,
      0.947056282749360, 4.03145138898630, 1.88009075029214, -0.332608748469643,
      -0.582523471417543, 3.08105767354562, 4.42245571307858, -2.58305480427814,
      2.12746400846445, 1.88009075029214, 14.1496406683489, -9.86496499226316,
      -2.65942256500625, -3.49861615256743, -2.68989232864013, 1.36051946423029,
      -0.173112839756888, -0.332608748469643, -9.86496499226316,
      8.66022685864378, 3.58272876703554, -0.861127541199017,
      -0.645703422930910, -3.90461010828642, 5.96115177935686,
      -0.582523471417543, -2.65942256500625, 3.58272876703554, 10.8343988668446;

  test1(A, B, Q, R);
}
}  // namespace
}  // namespace math
}  // namespace drake
