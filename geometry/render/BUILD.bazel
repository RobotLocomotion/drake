# -*- python -*-

load(
    "@drake//tools/skylark:drake_cc.bzl",
    "drake_cc_googletest",
    "drake_cc_library",
    "drake_cc_package_library",
)
load("//tools/lint:lint.bzl", "add_lint_tests")
load("//tools/skylark:test_tags.bzl", "vtk_test_tags")

package(default_visibility = ["//visibility:public"])

# TODO(jwnimmer-tri) Along with deprecation removals on 2022-09-01, switch
# this back to drake_cc_package_library and just use `name = "render"`.
drake_cc_library(
    name = "render_unpolluted",
    visibility = ["//:__subpackages__"],
    deps = [
        ":render_camera",
        ":render_engine",
        ":render_label",
    ],
)

# TODO(jwnimmer-tri) Remove this along with deprecation on 2022-09-01.
drake_cc_library(
    name = "render",
    tags = ["nolint"],
    visibility = ["//visibility:public"],
    deps = [
        ":render_camera",
        ":render_engine",
        ":render_engine_vtk",
        ":render_label",
    ],
)

drake_cc_library(
    name = "render_camera",
    srcs = ["render_camera.cc"],
    hdrs = ["render_camera.h"],
    deps = [
        "//common:essential",
        "//math:geometric_transform",
        "//systems/sensors:camera_info",
    ],
)

# A build target for code that wants to interact with the *idea* of a render
# engine but doesn't want any build dependencies on the implementation details.
drake_cc_library(
    name = "render_engine",
    srcs = ["render_engine.cc"],
    hdrs = ["render_engine.h"],
    deps = [
        ":render_camera",
        ":render_label",
        "//common:essential",
        "//geometry:geometry_ids",
        "//geometry:geometry_roles",
        "//geometry:shape_specification",
        "//geometry:utilities",
        "//math:geometric_transform",
        "//systems/sensors:camera_info",
        "//systems/sensors:color_palette",
        "//systems/sensors:image",
    ],
)

# TODO(jwnimmer-tri) Remove this along with deprecation on 2022-09-01.
_STUB_HDRS = [
    "render_engine_vtk.h",
    "render_engine_vtk_base.h",
    "render_engine_vtk_factory.h",
    "vtk_util.h",
]

# TODO(jwnimmer-tri) Remove this along with deprecation on 2022-09-01.
[
    genrule(
        name = "_cp_" + hdr,
        srcs = ["stub/" + hdr],
        outs = [hdr],
        cmd = "cp $< $@",
        tags = ["nolint"],
        visibility = ["//visibility:private"],
    )
    for hdr in _STUB_HDRS
]

# TODO(jwnimmer-tri) Remove this along with deprecation on 2022-09-01.
drake_cc_library(
    name = "render_engine_vtk",
    hdrs = _STUB_HDRS,
    install_hdrs_exclude = [
        # Since these directly use VTK headers, leave them out of the install.
        "render_engine_vtk.h",
        "render_engine_vtk_base.h",
        "vtk_util.h",
    ],
    tags = ["nolint"],
    deps = [
        "//geometry/render_vtk:factory",
        "//geometry/render_vtk:internal_render_engine_vtk",
        "//geometry/render_vtk:internal_render_engine_vtk_base",
        "//geometry/render_vtk:internal_vtk_util",
        "//geometry/render_vtk:render_engine_vtk_params",
    ],
)

# TODO(jwnimmer-tri) Remove this along with deprecation on 2022-09-01.
drake_cc_library(
    name = "render_engine_vtk_factory",
    hdrs = ["render_engine_vtk_factory.h"],
    tags = ["nolint"],
    visibility = ["//:__subpackages__"],
    deps = [
        "//geometry/render_vtk:factory",
        "//geometry/render_vtk:render_engine_vtk_params",
    ],
)

drake_cc_library(
    name = "render_label",
    srcs = ["render_label.cc"],
    hdrs = ["render_label.h"],
    deps = [
        "//common:essential",
        "//common:hash",
        "//systems/sensors:image",
    ],
)

# === test/ ===

filegroup(
    name = "test_models",
    testonly = 1,
    srcs = [
        "test/box.sdf",
        "test/diag_gradient.png",
        "test/meshes/box.obj",
        "test/meshes/box.obj.mtl",
        "test/meshes/box.png",
    ],
)

drake_cc_googletest(
    name = "render_camera_test",
    deps = [
        ":render_camera",
        "//common/test_utilities",
    ],
)

drake_cc_googletest(
    name = "render_engine_test",
    deps = [
        ":render_engine",
        "//common/test_utilities",
        "//geometry:geometry_ids",
        "//geometry/test_utilities:dummy_render_engine",
    ],
)

drake_cc_googletest(
    name = "render_label_test",
    deps = [
        ":render_label",
        "//common/test_utilities:expect_no_throw",
        "//common/test_utilities:expect_throws_message",
    ],
)

drake_cc_googletest(
    name = "deprecation_test",
    copts = [
        "-Wno-cpp",
        "-Wno-deprecated-declarations",
    ],
    deps = [
        ":render",
    ],
)

add_lint_tests()
