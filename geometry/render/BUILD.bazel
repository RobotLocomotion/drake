# -*- python -*-

load(
    "@drake//tools/skylark:drake_cc.bzl",
    "drake_cc_googletest",
    "drake_cc_library",
    "drake_cc_package_library",
)
load("//tools/lint:lint.bzl", "add_lint_tests")
load("//tools/skylark:test_tags.bzl", "vtk_test_tags")

package(default_visibility = ["//visibility:public"])

drake_cc_package_library(
    name = "render",
    deps = [
        ":render_engine",
        ":render_engine_ospray",
        ":render_engine_vtk",
        ":render_label",
        ":render_label_class",
    ],
)

# A build target for code that wants to interact with the *idea* of a render
# engine but doesn't want any build dependencies on the implementation details.
drake_cc_library(
    name = "render_engine",
    srcs = ["render_engine.cc"],
    hdrs = [
        "camera_properties.h",
        "render_engine.h",
    ],
    deps = [
        ":render_label",
        "//geometry:geometry_ids",
        "//geometry:geometry_roles",
        "//geometry:shape_specification",
        "//geometry:utilities",
        "//math:geometric_transform",
        "//systems/sensors:color_palette",
        "//systems/sensors:image",
    ],
)

# The VTK-OSPRay-based render engine implementation.
drake_cc_library(
    name = "render_engine_ospray",
    srcs = [
        "render_engine_ospray.cc",
        "render_engine_ospray_factory.cc",
    ],
    hdrs = [
        "render_engine_ospray.h",
        "render_engine_ospray_factory.h",
    ],
    # render_engine_ospray.h directly pulls in VTK headers; leave it out of the
    # install.
    install_hdrs_exclude = ["render_engine_ospray.h"],
    deps = [
        ":render_engine",
        "//common",
        "//systems/sensors:color_palette",
        "//systems/sensors:vtk_util",
        "@eigen",
        "@vtk//:vtkCommonCore",
        "@vtk//:vtkCommonDataModel",
        "@vtk//:vtkCommonTransforms",
        "@vtk//:vtkFiltersGeneral",
        "@vtk//:vtkFiltersSources",
        "@vtk//:vtkIOGeometry",
        "@vtk//:vtkIOImage",
        "@vtk//:vtkRenderingCore",
        "@vtk//:vtkRenderingOSPRay",
        "@vtk//:vtkRenderingOpenGL2",
        "@vtk//:vtkRenderingSceneGraph",
    ],
)

# The VTK-OpenGL-based render engine implementation.
drake_cc_library(
    name = "render_engine_vtk",
    srcs = [
        "render_engine_vtk.cc",
        "render_engine_vtk_factory.cc",
    ],
    hdrs = [
        "render_engine_vtk.h",
        "render_engine_vtk_factory.h",
    ],
    # render_engine_vtk.h directly pulls in VTK headers; leave it out of the
    # install.
    install_hdrs_exclude = ["render_engine_vtk.h"],
    deps = [
        ":render_engine",
        "//common",
        "//geometry/render/shaders:depth_shaders",
        "//systems/sensors:color_palette",
        "//systems/sensors:vtk_util",
        "@eigen",
        "@vtk//:vtkCommonCore",
        "@vtk//:vtkCommonDataModel",
        "@vtk//:vtkCommonTransforms",
        "@vtk//:vtkFiltersGeneral",
        "@vtk//:vtkFiltersSources",
        "@vtk//:vtkIOGeometry",
        "@vtk//:vtkIOImage",
        "@vtk//:vtkRenderingCore",
        "@vtk//:vtkRenderingOpenGL2",
    ],
)

drake_cc_library(
    name = "render_label",
    srcs = ["render_label.cc"],
    hdrs = ["render_label.h"],
    deps = [
        "//common:essential",
        "//common:hash",
        "//systems/sensors:image",
    ],
)

drake_cc_library(
    name = "render_label_class",
    srcs = ["render_label_class.cc"],
    hdrs = ["render_label_class.h"],
    deps = [
        ":render_label",
        "//common:essential",
        "//geometry:geometry_ids",
    ],
)

# === test/ ===

drake_cc_googletest(
    name = "render_engine_test",
    deps = [
        ":render_engine",
        "//common/test_utilities",
        "//geometry:geometry_ids",
        "//geometry/test_utilities:dummy_render_engine",
    ],
)

drake_cc_googletest(
    name = "render_engine_ospray_test",
    data = [
        "//systems/sensors:test_models",
    ],
    # This generally flakes on CI for unknown reasons.
    flaky = 1,
    tags = vtk_test_tags() + [
        # OSPRay uses TBB which is not tsan-friendly.
        "no_tsan",
    ],
    deps = [
        ":render_engine_ospray",
        "//common:find_resource",
        "//common/test_utilities:eigen_matrix_compare",
        "//common/test_utilities:expect_throws_message",
        "//math:geometric_transform",
    ],
)

drake_cc_googletest(
    name = "render_engine_vtk_test",
    data = [
        "//systems/sensors:test_models",
    ],
    tags = vtk_test_tags(),
    deps = [
        ":render_engine_vtk",
        "//common:find_resource",
        "//common/test_utilities:eigen_matrix_compare",
        "//common/test_utilities:expect_throws_message",
        "//geometry/test_utilities:dummy_render_engine",
        "//math:geometric_transform",
    ],
)

drake_cc_googletest(
    name = "render_label_test",
    deps = [
        ":render_label",
        "//common/test_utilities:expect_throws_message",
    ],
)

add_lint_tests()
