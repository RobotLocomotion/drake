# -*- python -*-

load(
    "@drake//tools/skylark:drake_cc.bzl",
    "drake_cc_googletest",
    "drake_cc_library",
    "drake_cc_package_library",
)
load("//tools/lint:lint.bzl", "add_lint_tests")

package(default_visibility = ["//visibility:public"])

drake_cc_package_library(
    name = "geometry",
    visibility = ["//visibility:public"],
    deps = [
        ":frame_kinematics",
        ":geometry_frame",
        ":geometry_ids",
        ":geometry_index",
        ":geometry_instance",
        ":geometry_properties",
        ":geometry_roles",
        ":geometry_set",
        ":geometry_state",
        ":geometry_version",
        ":geometry_visualization",
        ":internal_frame",
        ":internal_geometry",
        ":proximity_engine",
        ":proximity_properties",
        ":rgba",
        ":scene_graph",
        ":scene_graph_inspector",
        ":shape_specification",
        ":shape_to_string",
        ":utilities",
    ],
)

drake_cc_library(
    name = "proximity_engine",
    srcs = [
        "proximity_engine.cc",
    ],
    hdrs = [
        "proximity_engine.h",
    ],
    deps = [
        ":geometry_ids",
        ":geometry_index",
        ":geometry_roles",
        ":internal_geometry",
        ":shape_specification",
        ":utilities",
        "//common",
        "//common:default_scalars",
        "//geometry/proximity",
        "//geometry/query_results",
        "//math",
        "@fcl",
        "@fmt",
        "@tinyobjloader",
    ],
)

drake_cc_library(
    name = "frame_kinematics",
    srcs = [
        "frame_kinematics_vector.cc",
    ],
    hdrs = [
        "frame_kinematics_vector.h",
    ],
    deps = [
        ":geometry_ids",
        ":utilities",
        "//common:autodiff",
        "//common:essential",
        "//common:symbolic",
    ],
)

drake_cc_library(
    name = "geometry_frame",
    srcs = [],
    hdrs = ["geometry_frame.h"],
    deps = [
        ":geometry_ids",
        "//common:essential",
    ],
)

drake_cc_library(
    name = "geometry_ids",
    srcs = [],
    hdrs = ["geometry_ids.h"],
    deps = ["//common:identifier"],
)

drake_cc_library(
    name = "geometry_index",
    srcs = [],
    hdrs = ["geometry_index.h"],
    deps = ["//common:type_safe_index"],
)

drake_cc_library(
    name = "geometry_instance",
    srcs = ["geometry_instance.cc"],
    hdrs = ["geometry_instance.h"],
    deps = [
        ":geometry_ids",
        ":geometry_roles",
        ":shape_specification",
        ":utilities",
        "//common:copyable_unique_ptr",
        "//common:essential",
    ],
)

drake_cc_library(
    name = "geometry_properties",
    srcs = ["geometry_properties.cc"],
    hdrs = ["geometry_properties.h"],
    deps = [
        ":rgba",
        "//common:essential",
        "//common:value",
        "@fmt",
    ],
)

drake_cc_library(
    name = "geometry_version",
    srcs = ["geometry_version.cc"],
    hdrs = ["geometry_version.h"],
    deps = [
        ":geometry_roles",
        "//common:essential",
        "//common:identifier",
    ],
)

drake_cc_library(
    name = "geometry_roles",
    srcs = ["geometry_roles.cc"],
    hdrs = ["geometry_roles.h"],
    deps = [
        ":geometry_properties",
        "//common:essential",
    ],
)

drake_cc_library(
    name = "geometry_set",
    hdrs = ["geometry_set.h"],
    deps = [":geometry_ids"],
)

drake_cc_library(
    name = "geometry_state",
    srcs = ["geometry_state.cc"],
    hdrs = ["geometry_state.h"],
    deps = [
        ":frame_kinematics",
        ":geometry_frame",
        ":geometry_ids",
        ":geometry_index",
        ":geometry_instance",
        ":geometry_set",
        ":geometry_version",
        ":internal_frame",
        ":internal_geometry",
        ":proximity_engine",
        ":utilities",
        "//geometry/render:render_engine",
    ],
)

drake_cc_library(
    name = "proximity_properties",
    srcs = ["proximity_properties.cc"],
    hdrs = ["proximity_properties.h"],
    deps = [
        ":geometry_roles",
        "//multibody/plant:coulomb_friction",
    ],
)

drake_cc_library(
    name = "scene_graph",
    srcs = [
        "query_object.cc",
        "scene_graph.cc",
    ],
    hdrs = [
        "query_object.h",
        "scene_graph.h",
    ],
    deps = [
        ":geometry_state",
        ":scene_graph_inspector",
        "//common:essential",
        "//geometry/query_results:contact_surface",
        "//geometry/query_results:penetration_as_point_pair",
        "//geometry/query_results:signed_distance_pair",
        "//geometry/query_results:signed_distance_to_point",
        "//systems/framework",
        "//systems/rendering:pose_bundle",
    ],
)

drake_cc_library(
    name = "scene_graph_inspector",
    srcs = ["scene_graph_inspector.cc"],
    hdrs = ["scene_graph_inspector.h"],
    deps = [":geometry_state"],
)

drake_cc_library(
    name = "geometry_visualization",
    srcs = ["geometry_visualization.cc"],
    hdrs = ["geometry_visualization.h"],
    deps = [
        ":geometry_state",
        ":scene_graph",
        "//lcm",
        "//lcmtypes:viewer",
        "//math:geometric_transform",
        "//systems/framework:diagram_builder",
        "//systems/lcm:lcm_pubsub_system",
        "//systems/rendering:pose_bundle_to_draw_message",
    ],
)

drake_cc_library(
    name = "internal_frame",
    srcs = ["internal_frame.cc"],
    hdrs = ["internal_frame.h"],
    deps = [
        ":geometry_ids",
        ":geometry_index",
        "//common:essential",
    ],
)

drake_cc_library(
    name = "internal_geometry",
    srcs = ["internal_geometry.cc"],
    hdrs = ["internal_geometry.h"],
    deps = [
        ":geometry_ids",
        ":geometry_index",
        ":geometry_roles",
        ":internal_frame",
        ":shape_specification",
        "//common:copyable_unique_ptr",
        "//common:essential",
        "//math:geometric_transform",
    ],
)

drake_cc_library(
    name = "shape_specification",
    srcs = ["shape_specification.cc"],
    hdrs = ["shape_specification.h"],
    deps = [
        "//common:essential",
        "//math:geometric_transform",
    ],
)

drake_cc_library(
    name = "shape_to_string",
    srcs = ["shape_to_string.cc"],
    hdrs = ["shape_to_string.h"],
    deps = [
        ":shape_specification",
        "@fmt",
    ],
)

drake_cc_library(
    name = "utilities",
    srcs = ["utilities.cc"],
    hdrs = ["utilities.h"],
    deps = [
        "//common",
        "//math:geometric_transform",
    ],
)

drake_cc_library(
    name = "rgba",
    srcs = ["rgba.cc"],
    hdrs = ["rgba.h"],
    deps = [
        "//common",
    ],
)

# -----------------------------------------------------

filegroup(
    name = "test_obj_files",
    testonly = 1,
    srcs = [
        "test/forbidden_two_cubes.obj",
        "test/non_convex_mesh.obj",
        "test/quad_cube.mtl",
        "test/quad_cube.obj",
    ],
)

drake_cc_googletest(
    name = "proximity_engine_test",
    data = [":test_obj_files"],
    deps = [
        ":proximity_engine",
        ":shape_specification",
        "//common/test_utilities:eigen_matrix_compare",
        "//common/test_utilities:expect_no_throw",
        "//common/test_utilities:expect_throws_message",
        "//math",
    ],
)

drake_cc_googletest(
    name = "frame_kinematics_vector_test",
    deps = [
        ":frame_kinematics",
        "//common/test_utilities",
        "//common/test_utilities:limit_malloc",
        "//math:geometric_transform",
    ],
)

drake_cc_googletest(
    name = "geometry_frame_test",
    deps = [
        ":geometry_frame",
        "//common:essential",
        "//common/test_utilities:expect_throws_message",
    ],
)

drake_cc_googletest(
    name = "geometry_instance_test",
    deps = [
        ":geometry_instance",
        "//common/test_utilities",
    ],
)

drake_cc_googletest(
    name = "geometry_properties_test",
    deps = [
        ":geometry_properties",
        "//common/test_utilities",
    ],
)

drake_cc_googletest(
    name = "geometry_version_test",
    deps = [
        ":geometry_version",
    ],
)

drake_cc_googletest(
    name = "geometry_set_test",
    deps = [
        ":geometry_ids",
        ":geometry_set",
        "//common/test_utilities:expect_no_throw",
        "//geometry/test_utilities:geometry_set_tester",
    ],
)

drake_cc_googletest(
    name = "geometry_state_test",
    deps = [
        ":geometry_state",
        "//common/test_utilities",
        "//geometry/test_utilities:dummy_render_engine",
    ],
)

drake_cc_googletest(
    name = "proximity_properties_test",
    deps = [
        ":geometry_roles",
        ":proximity_properties",
        "//common/test_utilities:expect_throws_message",
    ],
)

drake_cc_googletest(
    name = "internal_geometry_test",
    deps = [
        ":internal_geometry",
        "//common/test_utilities:expect_no_throw",
        "//common/test_utilities:expect_throws_message",
    ],
)

drake_cc_googletest(
    name = "scene_graph_test",
    deps = [
        ":geometry_visualization",
        ":scene_graph",
        "//common/test_utilities:expect_no_throw",
        "//common/test_utilities:expect_throws_message",
        "//geometry/test_utilities:dummy_render_engine",
    ],
)

drake_cc_googletest(
    name = "geometry_visualization_test",
    deps = [
        ":geometry_visualization",
        "//common/test_utilities:expect_throws_message",
    ],
)

drake_cc_googletest(
    name = "query_object_test",
    deps = [
        ":geometry_frame",
        ":geometry_instance",
        ":scene_graph",
        "//common/test_utilities",
    ],
)

drake_cc_googletest(
    name = "scene_graph_inspector_test",
    deps = [
        ":geometry_frame",
        ":scene_graph_inspector",
    ],
)

drake_cc_googletest(
    name = "shape_specification_test",
    deps = [
        ":shape_specification",
        "//common/test_utilities",
    ],
)

drake_cc_googletest(
    name = "shape_to_string_test",
    deps = [
        ":shape_to_string",
    ],
)

drake_cc_googletest(
    name = "utilities_test",
    deps = [
        "utilities",
        "//common/test_utilities",
    ],
)

drake_cc_googletest(
    name = "rgba_test",
    deps = [
        ":rgba",
        "//common/test_utilities",
    ],
)

add_lint_tests()
