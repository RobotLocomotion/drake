# -*- python -*-

load(
    "@drake//tools/skylark:drake_cc.bzl",
    "drake_cc_googletest",
    "drake_cc_library",
    "drake_cc_package_library",
)
load("//tools/lint:lint.bzl", "add_lint_tests")

package(default_visibility = ["//visibility:public"])

drake_cc_package_library(
    name = "render",
    deps = [
        ":fidelity",
        ":render_engine",
        ":render_engine_impl",
        ":render_engine_vtk",
        ":render_label",
    ],
)

drake_cc_library(
    name = "fidelity",
    hdrs = ["fidelity.h"],
)

# A build target for code that wants to interact with the *idea* of a render
# engine but doesn't want any build dependencies on the implementation details.
drake_cc_library(
    name = "render_engine",
    hdrs = [
        "camera_properties.h",
        "render_engine.h",
    ],
    deps = [
        ":fidelity",
        ":render_label",
        "//geometry:shape_specification",
        "//geometry/dev:geometry_index",
        "//geometry/dev:geometry_roles",
        "//systems/sensors:image",
    ],
)

# A build target for code that needs to interact with details of the various
# render engine implementations.
drake_cc_library(
    name = "render_engine_impl",
    deps = [
        ":render_engine_vtk",
    ],
)

# The VTK-OpenGL-based render engine implementation.
drake_cc_library(
    name = "render_engine_vtk",
    srcs = ["render_engine_vtk.cc"],
    hdrs = ["render_engine_vtk.h"],
    deps = [
        ":render_engine",
        "//common",
        "//geometry/dev/render/shaders:depth_shaders",
        "//systems/sensors:color_palette",
        "//systems/sensors:vtk_util",
        "@eigen",
        "@vtk//:vtkCommonCore",
        "@vtk//:vtkCommonDataModel",
        "@vtk//:vtkCommonTransforms",
        "@vtk//:vtkFiltersGeneral",
        "@vtk//:vtkFiltersSources",
        "@vtk//:vtkIOGeometry",
        "@vtk//:vtkIOImage",
        "@vtk//:vtkRenderingCore",
        "@vtk//:vtkRenderingOpenGL2",
    ],
)

drake_cc_library(
    name = "render_label",
    srcs = ["render_label.cc"],
    hdrs = ["render_label.h"],
    deps = [
        "//common:essential",
        "//common:hash",
    ],
)

# === test/ ===

drake_cc_googletest(
    name = "render_engine_vtk_test",
    data = [
        "//systems/sensors:test_models",
    ],
    # Mitigates driver-related issues when running under `bazel test`. For more
    # information, see #7004.
    local = 1,
    # Disable under LeakSanitizer and Valgrind Memcheck due to driver-related
    # leaks. For more information, see #7520.
    tags = [
        "no_lsan",
        "no_memcheck",
    ],
    deps = [
        ":render_engine_vtk",
        "//common:find_resource",
        "//common/test_utilities:eigen_matrix_compare",
        "//common/test_utilities:expect_throws_message",
        "//math:geometric_transform",
    ],
)

drake_cc_googletest(
    name = "render_label_test",
    deps = [":render_label"],
)

add_lint_tests()
