# -*- python -*-

load(
    "//tools:drake.bzl",
    "drake_cc_googletest",
    "drake_cc_library",
)
load("//tools/lint:lint.bzl", "add_lint_tests")
load(
    "@drake//tools/skylark:drake_proto.bzl",
    "drake_cc_proto_library",
)

package(
    default_visibility = [
        "//examples/kuka_iiwa_arm:__subpackages__",
    ],
)

drake_cc_library(
    name = "pick_and_place_configuration",
    hdrs = [
        "pick_and_place_configuration.h",
    ],
    visibility = ["//visibility:public"],
    deps = [
        "//common",
        "//multibody/rigid_body_plant:compliant_contact_model",
    ],
)

drake_cc_proto_library(
    name = "pick_and_place_configuration_proto",
    srcs = [
        "pick_and_place_configuration.proto",
    ],
)

drake_cc_library(
    name = "pick_and_place_configuration_parsing",
    srcs = [
        "pick_and_place_configuration_parsing.cc",
    ],
    hdrs = [
        "pick_and_place_configuration_parsing.h",
    ],
    visibility = ["//visibility:public"],
    deps = [
        ":pick_and_place_configuration",
        ":pick_and_place_configuration_proto",
        "//common:find_resource",
        "//common/proto:protobuf",
        "//manipulation/util:world_sim_tree_builder",
        "//math:geometric_transform",
    ],
)

drake_cc_library(
    name = "pick_and_place",
    srcs = [
        "action.cc",
        "pick_and_place_state_machine.cc",
        "world_state.cc",
    ],
    hdrs = [
        "action.h",
        "pick_and_place_state_machine.h",
        "world_state.h",
    ],
    deps = [
        ":pick_and_place_configuration",
        "//common:essential",
        "//common/trajectories:piecewise_polynomial",
        "//common/trajectories:piecewise_quaternion",
        "//examples/kuka_iiwa_arm:iiwa_common",
        "//examples/kuka_iiwa_arm:iiwa_lcm",
        "//lcmtypes:schunk",
        "//lcmtypes:viewer",
        "//manipulation/util:bot_core_lcm_encode_decode",
        "//manipulation/util:world_sim_tree_builder",
        "//multibody:inverse_kinematics",
        "//multibody:rigid_body_tree",
        "//multibody/parsers",
        "@lcmtypes_bot2_core",
        "@lcmtypes_robotlocomotion",
    ],
)

# === test/ ===

drake_cc_googletest(
    name = "pick_and_place_configuration_parsing_test",
    data = [
        ":configuration",
        "//examples/kuka_iiwa_arm:models",
        "//manipulation/models/iiwa_description:models",
    ],
    deps = [
        "//common/test_utilities:eigen_matrix_compare",
        "//examples/kuka_iiwa_arm/pick_and_place:pick_and_place_configuration_parsing",  # noqa
    ],
)

drake_cc_googletest(
    name = "pick_and_place_state_machine_test",
    data = [
        "//manipulation/models/iiwa_description:models",
    ],
    # TODO(avalenzu) The "snopt" tag is required because IPOPT doesn't find
    # a reasonable solution for one of the steps in this test.  We should see
    # if this improves when #3128 is fixed.
    tags = [
        "snopt",
    ],
    deps = [
        ":pick_and_place",
        "//common:find_resource",
    ],
)

drake_cc_googletest(
    name = "world_state_test",
    data = [
        "//manipulation/models/iiwa_description:models",
    ],
    deps = [
        ":pick_and_place",
        "//common:find_resource",
        "//common/test_utilities:eigen_matrix_compare",
    ],
)

add_lint_tests()
