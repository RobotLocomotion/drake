# -*- python -*-
# This file contains rules for Bazel; see drake/doc/bazel.rst.

load(
    "@drake//tools/skylark:drake_cc.bzl",
    "drake_cc_binary",
    "drake_cc_googletest",
    "drake_cc_library",
)
load("//tools/lint:lint.bzl", "add_lint_tests")

drake_cc_library(
    name = "make_cylinder_plant",
    srcs = [
        "make_cylinder_plant.cc",
    ],
    hdrs = [
        "make_cylinder_plant.h",
    ],
    deps = [
        "//common:default_scalars",
        "//geometry:geometry_ids",
        "//geometry:scene_graph",
        "//math:geometric_transform",
        "//multibody/multibody_tree/multibody_plant",
    ],
)

drake_cc_googletest(
    name = "make_cylinder_plant_test",
    deps = [
        ":make_cylinder_plant",
        "//common/test_utilities:eigen_matrix_compare",
        "//multibody/multibody_tree/multibody_plant",
    ],
)

drake_cc_binary(
    name = "cylinder_run_dynamics",
    srcs = ["cylinder_run_dynamics.cc"],
    # Running this example with the default parameters incurs in a case with
    # a violent collision between the cylinder and the ground. MultibodyPlant
    # must use sub-stepping in order to handle this situation. Otherwise the
    # contact solver aborts with a non-convergence error.
    # Therefore the success of this test indicates MultibodyPlant correcly
    # identified this event and used sub-stepping.
    add_test_rule = 1,
    test_rule_args = [
        # If MultibodyPlant does not use sub-stepping, i.e attempts to handle
        # the collision with the default time step of 1.0e-3 seconds, the
        # simulation will abort at t = 0.514 seconds due to non-convergence of
        # the contact solver. Therefore we run this example as a test past that
        # time in order to test that MultibodyPlant correctly handled this case
        # using sub-stepping.
        "--simulation_time=0.6",
        "--target_realtime_rate=0.0",
    ],
    test_rule_timeout = "long",
    deps = [
        ":make_cylinder_plant",
        "//common:text_logging_gflags",
        "//geometry:geometry_visualization",
        "//multibody/multibody_tree/multibody_plant:contact_results_to_lcm",
        "//systems/analysis:simulator",
        "//systems/framework:diagram",
        "//systems/lcm:lcm_pubsub_system",
        "@gflags",
    ],
)

add_lint_tests()
