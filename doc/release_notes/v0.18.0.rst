*************
Drake v0.18.0
*************

Announcements
-------------

.. warning::

  On macOS, Drake only supports Python 3.8.  Users **must** read `#13097`_ for
  upgrade instructions.

  When paths are set incorrectly, you will see an error such as this::

      ImportError: Python version mismatch: module was compiled for Python 3.8, but the interpreter version is incompatible: 3.7.7

* RigidBodyPlant and all of the drake "attic" is scheduled for removal on
  2020-09-01 (`#12158`_, `#13030`_).

  * Please see `#12158`_ for details of the timeline, and let us know if this
    will cause a problem.

  * New tutorials:

    * AddVisualizationCallback (`#13211`_)

Breaking changes since v0.17.0
------------------------------

These are breaking changes that did not undergo a deprecation period:

* All pydrake.solvers SolverDetails classes are now read-only. (`#13152`_)

Changes since v0.17.0:
----------------------

Dynamical Systems
~~~~~~~~~~~~~~~~~

New features

* Trajectories

  * Add Trajectory::has_derivative and EvalDerivative (`#13144`_)
  * Add DiscreteTimeTrajectory (`#13157`_)
  * Improve BsplineBasis and BsplineTrajectory (`#13149`_, `#13057`_, `#13158`_)
  * Add PiecewisePolynomial unary minus (`#13109`_)
  * Add Subsitute(var, Polynomial) with support for multivariate polynomials (`#13108`_)
  * Add Lagrange Interpolating Polynomial and Block(i,j,p,q) (`#13269`_)

* System

  * Add support for implicit equations (`#13068`_)
  * Add a dependency ticket for all sources excluding input ports (`#13088`_)

* Controllers

  * FittedValueIteration supports MultibodyPlant + SceneGraph (`#13113`_)
  * Add support for Finite Horizon LQR result as a System (`#13178`_)
  * Add Acrobot example of Finite Lorizon LQR (`#13250`_, `#13252`_)

Fixes

* None

Mathematical Program
~~~~~~~~~~~~~~~~~~~~

New features

Fixes

* Fix memcpy undefined behavior in unconstrained optimization (`#13111`_)

Multibody Dynamics
~~~~~~~~~~~~~~~~~~

New features

* Add universal joint and mobilizer (`#13055`_, `#13054`_)
* Add propeller model (`#13135`_)
* Add planar four bar linkage example (`#13036`_)
* Add get_body_poses_output_port (`#13137`_)
* Make joint store default value (`#13105`_)

* New hydroelastic contact model in progress (`#13114`_, `#13138`_, `#13140`_)

  * Still only experimental

Fixes

* None

Miscellaneous features and fixes
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

* Upgrade quadrotor to Skydio R2 model (`#13050`_)
* Add lcmtypes for panda command/status (`#13163`_)
* Fix AutoDiffXd derivatives for min and max (`#13112`_)
* Install Drake's custom drake_visualizer plugins (`#13127`_)

pydrake bindings
~~~~~~~~~~~~~~~~

Newly bound

* pydrake.common.kDrakeAssertIsArmed (`#13183`_, `#13195`_)
* pydrake.geometry.QueryObject.__init__ (`#13156`_)
* pydrake.multibody.plant.MultibodyPlant.get_body_poses_output_port (`#13229`_)
* pydrake.solvers.gurobi.GurobiSolverDetails (`#13152`_)
* pydrake.solvers.mosek.MosekSolverDetails (`#13151`_)
* pydrake.systems.framework.DiagramBuilder.GetMutableSystems (`#13270`_)
* pydrake.systems.framework.DiagramBuilder.empty (`#13270`_)
* pydrake.systems.framework.OutputPort.Allocate (`#13270`_)

New features

* Move the Value and AbstractValue classes from the pydrake.systems.framework module to the pydrake.common.value module (`#13217`_, `#13225`_)

Fixes

* Add stricter checks and friendlier errors for mathematical program user-functions (`#13183`_)
* Resolve AbstractValue RTTI linking inconsistency on macOS (`#13225`_)

Build system and dependencies
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

* Add clang-format-9 (`#13260`_)
* Upgrade buildifier to latest release 3.0.0 (`#13198`_)
* Upgrade dreal to latest commit (`#13133`_)
* Upgrade fmt to latest release 6.2.0 (`#13200`_)
* Upgrade lcm to latest commit (`#13199`_)
* Upgrade meshcat to latest commit (`#13141`_)
* Upgrade pycodestyle to latest release 2.5.0 (`#13197`_, `#13204`_)
* Upgrade semantic_version to latest release 2.8.5 (`#13197`_)
* Only compile the parts of FCL that we need (`#13230`_)
* Remove use of octomap (`#13230`_)
* Remove use of ruby (`#13262`_)
* Remove use of tinydir (`#13180`_) 
* Disable python imports from ~/.local during build on Ubuntu (`#13190`_)
* Fetch sdformat and ignition_math from GitHub, not Bitbucket (`#13188`_)
* Don't install unused sdformat data (`#13268`_)
* Fix bazel third_party include path complaints (`#13189`_)
* Begin Ubuntu 20.04 (Focal Fossa) accomodations (`#13142`_, `#13235`_)

Newly-deprecated APIs
~~~~~~~~~~~~~~~~~~~~~

* drake::Polynomial::IsApprox (`#13108`_)
* pydrake.systems.framework.AbstractValue (`#13217`_, `#13225`_)
* pydrake.systems.framework.Value (`#13217`_, `#13225`_)
* The octomap external (`#13230`_)
* The ruby external (`#13262`_)
* The tinydir external (`#13180`_)
* The bitbucket.bzl macros (`#13193`_)

Removal of deprecated items
~~~~~~~~~~~~~~~~~~~~~~~~~~~

* DRAKE_NODISCARD in common/drake_nodiscard.h (`#13170`_)
* drake::examples::kuka_iiwa_arm::ComputeLumpedGripperInertiaInEndEffectorFrame (`#13169`_)
* drake::examples::kuka_iiwa_arm::CreateTreedFromFixedModelAtPose (`#13169`_)
* drake::examples::kuka_iiwa_arm::IiwaAndWsgPlantWithStateEstimator (`#13169`_)
* drake::examples::kuka_iiwa_arm::KukaTorqueController for RigidBodyTree (`#13169`_)
* drake::examples::kuka_iiwa_arm::OracularStateEstimation (`#13169`_)
* drake::geometry::Identifier (`#13170`_)
* drake::geometry::SceneGraphInspector::GetNumAnchoredGeometries (`#13170`_)
* drake::geometry::SceneGraphInspector::GetNumDynamicGeometries (`#13170`_)
* drake::multibody::AddMultibodyPlantSceneGraph(builder) (`#13170`_)
* drake::multibody::MultibodyPlant default constructor (`#13170`_)
* drake::systems::Simulator::reset_integrator (`#13172`_)
* drake::systems::System::CheckValidContextT (`#13172`_)
* drake::systems::SystemBase::CheckValidContext (`#13172`_)
* drake::systems::SystemBase::DoCheckValidContext (`#13172`_)
* drake::systems::SystemBase::ThrowIfContextNotCompatible (`#13172`_)
* pydrake.examples.manipulation_station.ManipulationStation.SetIiwaPosition(q, context) (`#13233`_)
* pydrake.examples.manipulation_station.ManipulationStation.SetIiwaVelocity(v, context) (`#13233`_)
* pydrake.examples.manipulation_station.ManipulationStation.SetWsgPosition(q, context) (`#13233`_)
* pydrake.examples.manipulation_station.ManipulationStation.SetWsgVelocity(v, context) (`#13233`_)
* pydrake.geometry.FrameId constructor (`#13233`_)
* pydrake.geometry.GeometryId constructor (`#13233`_)
* pydrake.geometry.SceneGraph.AddRenderer(renderer_name=) (`#13233`_)
* pydrake.geometry.SourceId constructor (`#13233`_)
* pydrake.multibody.AddMultibodyPlantSceneGraph(builder) (`#13170`_)
* pydrake.multibody.MultibodyPlant zero-argument constructor (`#13170`_)
* Legacy ("attic") manipulation/util (`#13169`_)
* The json external (`#13171`_)
* The --config=snopt_fortran bazel option (`#13171`_)
* drake/examples/kuka_iiwa/iiwa_wsg_simulation (`#13169`_)

Notes
-----

This release provides `pre-compiled binaries
<https://github.com/RobotLocomotion/drake/releases/tag/v0.18.0>`__ named
``drake-YYYYMMDD-{bionic|mac}.tar.gz``. See :ref:`Nightly Releases
<nightly-releases>` for instructions on how to use them.

Drake binary releases incorporate a pre-compiled version of `SNOPT
<https://ccom.ucsd.edu/~optimizers/solvers/snopt/>`__ as part of the
`Mathematical Program toolbox
<https://drake.mit.edu/doxygen_cxx/group__solvers.html>`__. Thanks to
Philip E. Gill and Elizabeth Wong for their kind support.

.. _#12158: https://github.com/RobotLocomotion/drake/pull/12158
.. _#13030: https://github.com/RobotLocomotion/drake/pull/13030
.. _#13097: https://github.com/RobotLocomotion/drake/pull/13097

..
  Current oldest_commit 77a7b9437331f1540666b9089395b53da403e4fa (inclusive).
  Current newest_commit 3cae4801eac3f9cc3d948c193022ebb8bfba5124 (inclusive).
