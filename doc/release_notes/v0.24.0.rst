.. This document is the template used by tools/dev/relnotes.

*************
Drake v0.24.0
*************

Announcements
-------------

* TBD

Breaking changes since v0.23.0
------------------------------

* TBD Improve inlining for EigenPtr (`#14088`_)

Changes since v0.23.0
---------------------

Dynamical Systems
~~~~~~~~~~~~~~~~~

.. <relnotes for systems go here>

* TBD framework: Add DiagramBuilder::GetSystems (`#14066`_)
* TBD lcm: Add publish_period option to ConnectLcmScope (`#14062`_)
* TBD framework: Regularize VectorBase bounds checking (`#14101`_)  # In preparing to move some methods into cc files, it became clear that a good code split between h and cc would be difficult given the current idioms for bounds checking. This commit adjusts operator[] access to not check bounds (it was already documented not to check, but was doing so anyway) and unifies the exception formatting into the VectorBase class. This is a breaking change in the sense that the exception subclass being thrown may be different now; the API promises are weakened to only promise to throw a std::exception, not any specific kind of exception.  The unit tests are weakened to reflect this. This is breaking change in demoting BasicVector::DoGetAtIndex from protected to private. Also add a Doxygen comment to specify SetZero. Also adjust #include statements to remove unused inclusions.
* TBD simulator: copy configuration helpers from Anzu (`#14103`_)  # - Co-authored-by: Jeremy Nimmer <jeremy.nimmer@tri.global>
* TBD Updates to merge into drake codebase (`#14103`_)  # Switch all references to drake from anzu. Other assorted improvements from code review.
* TBD analysis: Break simulator_test dependency on MultibodyPlant (`#14125`_)
* TBD Integrate SimulatorConfig into existing configuration code (`#14135`_)  # * Moved `simulator_flags` code to `simulator_config_functions`.
* TBD Make compatible with Eigen-3.3.8 (`#14159`_)  # Eigen introduces Eigen::all[1], so we need this patch to avoid name conflicts with drake::all. [1]: http://eigen.tuxfamily.org/dox-devel/group__Core__Module.html#ga790ab6c4226ef5f678b9eb532a3eab14
* TBD simulator: resolved mismatch of simulator integrator defaults (`#14150`_)  # * Resolved mismatch of simulator integrator defaults - Removed duplication of integrator defaults. - Updated test to check if SimulatorConfig defaults are congruent with integrator defaults. - Removed extraneous definitions from header file.
* TBD Add Context::SetStateAndParametersFrom() (`#14156`_)  # * Resolves #14138. Add the method Context::SetStateAndParametersFrom() to allow copying state and parameters from another context to a non-root context. Change the documentation for Context::SetTimeStateAndParametersFrom() to reflect what it does.
* TBD Fix throwing-Get methods missing Has counterparts (`#14176`_)  # If a class exposes a `Foo& GetFoo(string)` method that throws if there is no Foo of that name, then it must expose a corresponding `HasFoo` method that allows a caller to know whether the getter will throw.  Otherwise the no-catches standard makes safe use of the getter impossible. We've stomped most of these in the codebase but I just found these two stragglers.
* TBD Rename foo_sensor.h --> foo.h (`#14185`_)
* TBD Versatile error message for gimbal-lock singularity -- helps end-users debug bushing problems and resolves issue #14114 (`#14126`_) [math,multibody] 

New features

* TBD

Fixes

* TBD

Mathematical Program
~~~~~~~~~~~~~~~~~~~~

.. <relnotes for solvers go here>

New features

* AggregateLinearCosts (`#14190`_)
* AggregateQuadraticAndLinearCosts (`#14165`_)
* TBD Add operator +, -, * to GenericPolynomial (`#14053`_)
* TBD Add hash and divide to GenericPolynomial (`#14100`_)
* TBD Add pow to GenericPolynomial (`#14158`_)

Fixes

* TBD Improve inlining for EigenPtr (`#14088`_)
* TBD autodiffxd: Optimize `operator*=` a bit more (`#14171`_)
* Document that CSDP supports SOCP (`#14122`_)

Multibody Dynamics
~~~~~~~~~~~~~~~~~~

.. <relnotes for geometry,multibody go here>

* TBD [render] Add normal computation for parsed/generated meshes (`#14035`_)  # - shape_meshes.* - Introduces a new struct: MeshData - it encapsulates more data than the previous "vertex position" and triangle construction. It adds normals and uvs. - Mesh loading parses normal data from the obj (throwing exceptions if normals are missing). - All primitives come with normals. - render_engine_gl.* - Instantiate the OpenGl geometry from MeshData instead of the old IndexBuffer and VertexBuffer types.
* TBD Refactors TamsiContactResults --> ContactSolverResults (`#14069`_)
* TBD Bring global_inverse_kinematics out from attic (`#13921`_)  # Bring global_inverse_kinematics out from attic folder to multibody folder. Rewrite GlobalInverseKinematics using MBP public API.
* TBD Introduce ContactSolver and MBP::set_contact_solver() (`#13958`_)
* TBD [geometry] Add Obb (Oriented Bounding Box) (`#13808`_)
* TBD parsing: Don't warn when re-discovering the same package.xml (`#14089`_)
* TBD [geometry] Bvh(Bounding Volume Hierarchy) uses Obb (`#13978`_)
* TBD multibody/math: Merge all targets into :spatial_algebra (`#14113`_)  # Encapsulates linking artifacts due to dependency cycle
* TBD unit_inertia: Change ReExpress to use frame A instead of frame F (`#14112`_)  # For consistency with rotational_inertia and spatial_inertia
* TBD Move model directives mechanism out of dev (`#14038`_)
* TBD [geometry] Remove the non-BVH interface for rigid-soft mesh intersection (`#14110`_)  # For historical reasons, computing intersection between a soft volume mesh and a rigid surface mesh had two separate APIs. One used broadphase acceleration with a bounding volume hierarchy (BVH) one did not. Both APIs were propagated as a basis for measuring improvement. The need for both APIs is long gone. So, we'll simplify the API and eliminate the slow version. Going forward, improvements should be against strictly the best possible results. This change had several implications: - mesh_intersection_benchmark now only considers one case -- it reports the performance of queries with the *current* BVH implementation. - Unit tests in mesh_intersection_test would exploit the BVH-free API to shorten the tests. They needed to be expanded to use the BVH API. - One test in particular would produce a smoke test confirming that the test could be used with AutoDiffXd-valued meshes. That used the old BVH-free API. In removing that API, we need to be able to build a BVH for an AutoDiffXd-valued mesh. - Bvh and obb (and tests) have been updated to allow constructing a BVH for an AutoDiffXd-valued mesh. - Incidentally, cleaned up names of meshes to match the quantity_F notation.
* TBD This commit applies all of the post-dev changes to model directives: (`#14038`_)  # * Sync with upstream changes * Rewrite to not reference dev * Removing invalid geometry from the jaco (as mentioning it in a data= line causes it to be validity checked) * Factor the scoped names mechanism out of model directives * Rewrite the weld error API to be future-proof against a future refactor.
* TBD Add pydrake bindings for model directives (`#14144`_)  # * Weld error support omitted for simplicity. * Follow-up to #14038 * Completes #13282
* TBD Adds parameters for FixedOffsetFrame (`#14137`_)
* TBD Cleanups of issues revealed in integrating model directives downstream (`#14145`_)
* TBD Utility function that uses AutoDiff and vector differentiation in a non-world frame.  Useful as an independent test for methods such as CalcBiasSpatialAcceleration() and CalcSpatialAcceleration().  Resolves issue #13562 (`#13593`_)
* TBD Code and test for spatial momentum of a plant or subset of bodies (`#13916`_)
* TBD Add unit length constraint on quaternion variables (`#14141`_)
* TBD [proximity] Adds hydroelastic support for Convex shapes (`#14178`_)  # Declaring a Convex shape to be rigid, will now produce a hydroelastic representation. It is treated the same as a more general Mesh. Updated `quad_cube.obj` as it wasn't really a cube; one of the vertex positions was *slightly* out of position.
* TBD Fix unit_quaternion_constraint_test failure on CI (`#14182`_)
* TBD [geometry] Removing the now unused contact_surface_from_level_set functionality (`#14184`_)  # This was stop-gap code that has been supplanted by SceneGraph support and, more generally, this approach has issues; bad relative scales between level set representation and mesh can cause valid contact to not register valid ContactSurfaces. Note: the functionality contained within this PR is wholly contained in the internal namespace.
* TBD Add python binding for static equlibrium problem (`#14140`_)  # Also use ComputeSignedDistancePairwiseClosestPoints() to avoid redundant computation.
* TBD pydrake: Bind some missing multibody plant-related items (`#14192`_)
* TBD pydrake: Bind some missing multibody tree-related items (`#14195`_)
* TBD multibody: Use spatial_algebra.h as the sole header for the package (`#14117`_)  # Including the individual headers one at a time might leave the dot product operations undefined. Use DRAKE_DECLARE_CLASS_TEMPLATE_INSTANTIATIONS_ON_DEFAULT_SCALARS.
* TBD Improve inlining for RotationalInertia::ReExpress (`#14088`_)

New features

* TBD

Fixes

* TBD

Tutorials and examples
~~~~~~~~~~~~~~~~~~~~~~

.. <relnotes for examples,tutorials go here>

* manipulation_station: Add package.xml (`#14164`_)
* manipulation_station: Remove noisy warnings about unsupported joint limits (`#14079`_)

Miscellaneous features and fixes
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. <relnotes for common,math,lcm,lcmtypes,manipulation,perception go here>

* jaco_description: Add package.xml (`#14134`_)
* yaml: Fix in std::optional handling (`#14076`_)
* yaml: Add support for BsplineBasis and BsplineTrajectory (`#14106`_)

pydrake bindings
~~~~~~~~~~~~~~~~

.. <relnotes for bindings go here>

New features

* TBD solvers: Add vectorized version of EvalBinding (for python) (`#14064`_)
* TBD mbp: Allow SpatialVector's to be pickled (`#14104`_)
* TBD mbp: Make SpatialVector's default constructor initialize to NaN (`#14096`_)
* TBD jupyter: Add joint sliders using publishing callback (`#14059`_)
* TBD meshcat: add option to set contact cylinder radius (`#14131`_)

Fixes

* Improve descriptive text for joint sliders (`#14130`_)
* Fix missing runtime module imports (`#14072`_, `#14095`_)

Newly bound

* TBD AddRotatedLorentzConeConstraint (`#14120`_)
* TBD AddLorentzConeConstraint (`#14119`_)
* TBD RotationalInertia and UnitInertia's ReExpress (`#14111`_, `#14194`_)
* TBD operators for SpatialVector; shifting for velocity and force (`#14098`_)
* TBD ContactModel enumeration and accessor/mutators (`#14108`_)
* TBD GetFloatingBaseBodies (`#14139`_)
* TBD floating base accessors (`#14166`_)
* TBD calc spatial momentum in world about point (`#14078`_)
* TBD multibody math-related items (`#14193`_)
* TBD BsplineTrajectory and BsplineBasis (`#14201`_)
* TBD LinearBushingRollPitchYaw (`#14070`_)

Build system and dependencies
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. <relnotes for attic,cmake,doc,setup,third_party,tools go here>

* Upgrade to Xcode 12 on Catalina (`#14142`_)

  * Disable range-loop-analysis warnings for Clang 10 and Apple Clang 12 (`#14091`_, `#14094`_)

* Upgrade buildifier to latest release 3.5.0 (`#14152`_)
* Upgrade dreal to latest release 4.20.09.1 (`#14083`_)
* Upgrade fcl to latest commit (`#14063`_)
* Upgrade googlebenchmark to latest release (`#14154`_)
* Upgrade ignition_math to latest release 6.6.0 (`#14148`_)
* Upgrade rules_python to latest release 0.0.3 (`#14161`_)
* Upgrade libsdformat to latest release 9.3.0 (`#14147`_)
* Upgrade spdlog to latest release 1.8.1 (`#14153`_)
* Downgrade doxygen to 1.8.15 on macOS (`#14169`_)
* Fix snopt external for Bazel 3.6 (`#14179`_)
* Cleanup pkg-config path for ibex (`#14109`_)
* Clarify which vector_gen macros are to be used outside of Drake (`#14092`_)

Newly-deprecated APIs
~~~~~~~~~~~~~~~~~~~~~

* The numpy external (`#14116`_)
* TBD context.FixInputPort() (`#14093`_)
* TBD foo_sensor.h files (`#14185`_)
* TBD simulator_flags.h (`#14135`_)
* TBD multibody dead code (`#14188`_)
* TBD math/expmap.h (`#14099`_)
* TBD vector_gen macros (`#14092`_)

Removal of deprecated items
~~~~~~~~~~~~~~~~~~~~~~~~~~~

* TBD (`#14128`_)
* TBD schema: Remove rotation_rpy_deg backwards compatibility (`#14143`_)

Notes
-----

This release provides `pre-compiled binaries
<https://github.com/RobotLocomotion/drake/releases/tag/v0.24.0>`__ named
``drake-YYYYMMDD-{bionic|focal|mac}.tar.gz``. See :ref:`Nightly Releases
<nightly-releases>` for instructions on how to use them.

Drake binary releases incorporate a pre-compiled version of `SNOPT
<https://ccom.ucsd.edu/~optimizers/solvers/snopt/>`__ as part of the
`Mathematical Program toolbox
<https://drake.mit.edu/doxygen_cxx/group__solvers.html>`__. Thanks to
Philip E. Gill and Elizabeth Wong for their kind support.

.. <begin issue links>
.. _#13593: https://github.com/RobotLocomotion/drake/pull/13593
.. _#13808: https://github.com/RobotLocomotion/drake/pull/13808
.. _#13916: https://github.com/RobotLocomotion/drake/pull/13916
.. _#13921: https://github.com/RobotLocomotion/drake/pull/13921
.. _#13956: https://github.com/RobotLocomotion/drake/pull/13956
.. _#13958: https://github.com/RobotLocomotion/drake/pull/13958
.. _#13978: https://github.com/RobotLocomotion/drake/pull/13978
.. _#14035: https://github.com/RobotLocomotion/drake/pull/14035
.. _#14038: https://github.com/RobotLocomotion/drake/pull/14038
.. _#14053: https://github.com/RobotLocomotion/drake/pull/14053
.. _#14057: https://github.com/RobotLocomotion/drake/pull/14057
.. _#14059: https://github.com/RobotLocomotion/drake/pull/14059
.. _#14060: https://github.com/RobotLocomotion/drake/pull/14060
.. _#14061: https://github.com/RobotLocomotion/drake/pull/14061
.. _#14062: https://github.com/RobotLocomotion/drake/pull/14062
.. _#14063: https://github.com/RobotLocomotion/drake/pull/14063
.. _#14064: https://github.com/RobotLocomotion/drake/pull/14064
.. _#14065: https://github.com/RobotLocomotion/drake/pull/14065
.. _#14066: https://github.com/RobotLocomotion/drake/pull/14066
.. _#14069: https://github.com/RobotLocomotion/drake/pull/14069
.. _#14070: https://github.com/RobotLocomotion/drake/pull/14070
.. _#14072: https://github.com/RobotLocomotion/drake/pull/14072
.. _#14074: https://github.com/RobotLocomotion/drake/pull/14074
.. _#14076: https://github.com/RobotLocomotion/drake/pull/14076
.. _#14078: https://github.com/RobotLocomotion/drake/pull/14078
.. _#14079: https://github.com/RobotLocomotion/drake/pull/14079
.. _#14083: https://github.com/RobotLocomotion/drake/pull/14083
.. _#14088: https://github.com/RobotLocomotion/drake/pull/14088
.. _#14089: https://github.com/RobotLocomotion/drake/pull/14089
.. _#14091: https://github.com/RobotLocomotion/drake/pull/14091
.. _#14092: https://github.com/RobotLocomotion/drake/pull/14092
.. _#14093: https://github.com/RobotLocomotion/drake/pull/14093
.. _#14094: https://github.com/RobotLocomotion/drake/pull/14094
.. _#14095: https://github.com/RobotLocomotion/drake/pull/14095
.. _#14096: https://github.com/RobotLocomotion/drake/pull/14096
.. _#14098: https://github.com/RobotLocomotion/drake/pull/14098
.. _#14099: https://github.com/RobotLocomotion/drake/pull/14099
.. _#14100: https://github.com/RobotLocomotion/drake/pull/14100
.. _#14101: https://github.com/RobotLocomotion/drake/pull/14101
.. _#14103: https://github.com/RobotLocomotion/drake/pull/14103
.. _#14104: https://github.com/RobotLocomotion/drake/pull/14104
.. _#14105: https://github.com/RobotLocomotion/drake/pull/14105
.. _#14106: https://github.com/RobotLocomotion/drake/pull/14106
.. _#14108: https://github.com/RobotLocomotion/drake/pull/14108
.. _#14109: https://github.com/RobotLocomotion/drake/pull/14109
.. _#14110: https://github.com/RobotLocomotion/drake/pull/14110
.. _#14111: https://github.com/RobotLocomotion/drake/pull/14111
.. _#14112: https://github.com/RobotLocomotion/drake/pull/14112
.. _#14113: https://github.com/RobotLocomotion/drake/pull/14113
.. _#14115: https://github.com/RobotLocomotion/drake/pull/14115
.. _#14116: https://github.com/RobotLocomotion/drake/pull/14116
.. _#14117: https://github.com/RobotLocomotion/drake/pull/14117
.. _#14119: https://github.com/RobotLocomotion/drake/pull/14119
.. _#14120: https://github.com/RobotLocomotion/drake/pull/14120
.. _#14122: https://github.com/RobotLocomotion/drake/pull/14122
.. _#14125: https://github.com/RobotLocomotion/drake/pull/14125
.. _#14126: https://github.com/RobotLocomotion/drake/pull/14126
.. _#14128: https://github.com/RobotLocomotion/drake/pull/14128
.. _#14130: https://github.com/RobotLocomotion/drake/pull/14130
.. _#14131: https://github.com/RobotLocomotion/drake/pull/14131
.. _#14134: https://github.com/RobotLocomotion/drake/pull/14134
.. _#14135: https://github.com/RobotLocomotion/drake/pull/14135
.. _#14137: https://github.com/RobotLocomotion/drake/pull/14137
.. _#14139: https://github.com/RobotLocomotion/drake/pull/14139
.. _#14140: https://github.com/RobotLocomotion/drake/pull/14140
.. _#14141: https://github.com/RobotLocomotion/drake/pull/14141
.. _#14142: https://github.com/RobotLocomotion/drake/pull/14142
.. _#14143: https://github.com/RobotLocomotion/drake/pull/14143
.. _#14144: https://github.com/RobotLocomotion/drake/pull/14144
.. _#14145: https://github.com/RobotLocomotion/drake/pull/14145
.. _#14146: https://github.com/RobotLocomotion/drake/pull/14146
.. _#14147: https://github.com/RobotLocomotion/drake/pull/14147
.. _#14148: https://github.com/RobotLocomotion/drake/pull/14148
.. _#14149: https://github.com/RobotLocomotion/drake/pull/14149
.. _#14150: https://github.com/RobotLocomotion/drake/pull/14150
.. _#14152: https://github.com/RobotLocomotion/drake/pull/14152
.. _#14153: https://github.com/RobotLocomotion/drake/pull/14153
.. _#14154: https://github.com/RobotLocomotion/drake/pull/14154
.. _#14155: https://github.com/RobotLocomotion/drake/pull/14155
.. _#14156: https://github.com/RobotLocomotion/drake/pull/14156
.. _#14158: https://github.com/RobotLocomotion/drake/pull/14158
.. _#14159: https://github.com/RobotLocomotion/drake/pull/14159
.. _#14161: https://github.com/RobotLocomotion/drake/pull/14161
.. _#14162: https://github.com/RobotLocomotion/drake/pull/14162
.. _#14163: https://github.com/RobotLocomotion/drake/pull/14163
.. _#14164: https://github.com/RobotLocomotion/drake/pull/14164
.. _#14165: https://github.com/RobotLocomotion/drake/pull/14165
.. _#14166: https://github.com/RobotLocomotion/drake/pull/14166
.. _#14169: https://github.com/RobotLocomotion/drake/pull/14169
.. _#14170: https://github.com/RobotLocomotion/drake/pull/14170
.. _#14171: https://github.com/RobotLocomotion/drake/pull/14171
.. _#14173: https://github.com/RobotLocomotion/drake/pull/14173
.. _#14176: https://github.com/RobotLocomotion/drake/pull/14176
.. _#14178: https://github.com/RobotLocomotion/drake/pull/14178
.. _#14179: https://github.com/RobotLocomotion/drake/pull/14179
.. _#14181: https://github.com/RobotLocomotion/drake/pull/14181
.. _#14182: https://github.com/RobotLocomotion/drake/pull/14182
.. _#14184: https://github.com/RobotLocomotion/drake/pull/14184
.. _#14185: https://github.com/RobotLocomotion/drake/pull/14185
.. _#14186: https://github.com/RobotLocomotion/drake/pull/14186
.. _#14187: https://github.com/RobotLocomotion/drake/pull/14187
.. _#14188: https://github.com/RobotLocomotion/drake/pull/14188
.. _#14190: https://github.com/RobotLocomotion/drake/pull/14190
.. _#14191: https://github.com/RobotLocomotion/drake/pull/14191
.. _#14192: https://github.com/RobotLocomotion/drake/pull/14192
.. _#14193: https://github.com/RobotLocomotion/drake/pull/14193
.. _#14194: https://github.com/RobotLocomotion/drake/pull/14194
.. _#14195: https://github.com/RobotLocomotion/drake/pull/14195
.. _#14201: https://github.com/RobotLocomotion/drake/pull/14201
.. <end issue links>

..
  Current oldest_commit 6bd5f8c25cdcbb4049e57ec0f49f6e2c136d864a (exclusive).
  Current newest_commit 26c99207badb9c7357888bc3ab5e2f5a0511f964 (inclusive).
