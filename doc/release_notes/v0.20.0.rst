*************
Drake v0.20.0
*************

Announcements
-------------

.. warning::

  On macOS, Drake only supports Python 3.8.  Users **must** read `#13097`_ for
  upgrade instructions.

  When paths are set incorrectly, you will see an error such as this::

      ImportError: Python version mismatch: module was compiled for Python 3.8, but the interpreter version is incompatible: 3.7.7

Breaking changes since v0.19.0
------------------------------

These are breaking changes that did not undergo a deprecation period:

* None

Changes since v0.19.0:
----------------------

Dynamical Systems
~~~~~~~~~~~~~~~~~

New features

* Add SystemVisitor to introspect Diagrams (`#13628`_)

Fixes

* None

Mathematical Program
~~~~~~~~~~~~~~~~~~~~

New features

* Create even or odd degree monomial basis (`#13605`_)
* SdpaFreeFormat can remove free variables (`#13600`_)

Fixes

* None

Multibody Dynamics
~~~~~~~~~~~~~~~~~~

New features

* RenderEngineGl is now available (`#13584`_, `#13616`_, `#13629`_)
* Add accelerometer sensor (`#13501`_)
* Add gyroscope sensor (`#13604`_)
* Enable CalcBiasSpatialAcceleration to have non-world measured-in-frame (`#13453`_)
* Enable CalcBiasTranslationalAcceleration for non-world measured-in frame (`#13587`_)
* Add base infrastructure for declaring full camera intrinsics; new RenderCameraCore, ColorRenderCamera, and DepthRenderCameras are introduced; RgbdSensor API extend to provide RenderCamera compatible interface; in the future, CameraProperties will be deprecated. (`#13557`_, `#13634`_)

Fixes

* Fix BeamModel's scalar conversion constructor (`#13615`_)
* Declare SceneGraph related ports in MultibodyPlant constructor (`#13558`_)

Tutorials and examples
~~~~~~~~~~~~~~~~~~~~~~

None

Miscellaneous features and fixes
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

* yaml: Add retain_map_defaults to YamlReadArchive::Options (`#13590`_)
* planar_gripper: Add additional lcm message types (`#13554`_)

pydrake bindings
~~~~~~~~~~~~~~~~

New features

* Add ConnectMeshcatVisualizer sugar (`#13632`_)

Fixes

* Pass animation arguments through to meshcat (`#13643`_)

Newly bound
* pydrake.examples.acrobot.AcrobotPlant.get_mutable_parameters (`#13556`_)
* pydrake.examples.acrobot.AcrobotPlant.get_mutable_state (`#13556`_)
* pydrake.examples.acrobot.AcrobotPlant.get_parameters (`#13556`_)
* pydrake.examples.acrobot.AcrobotPlant.get_state (`#13556`_)
* pydrake.geometry.Capsule (`#13559`_)
* pydrake.geometry.Ellipsoid (`#13559`_)
* pydrake.geometry.QueryObject.X_PF (`#13559`_)
* pydrake.geometry.QueryObject.X_WF (`#13559`_)
* pydrake.geometry.QueryObject.X_WG (`#13559`_)
* pydrake.geometry.SceneGraphInspector.GetName (`#13559`_)
* pydrake.geometry.SceneGraphInspector.GetPoseInParent (`#13559`_)
* pydrake.geometry.SceneGraphInspector.GetSourceName (`#13559`_)
* pydrake.geometry.SceneGraphInspector.NumAnchoredGeometries (`#13559`_)
* pydrake.geometry.SceneGraphInspector.NumDynamicGeometries (`#13559`_)
* pydrake.geometry.SceneGraphInspector.NumDynamicGeometries (`#13559`_)
* pydrake.geometry.SceneGraphInspector.NumGeometriesWithRole (`#13559`_)
* pydrake.geometry.SceneGraphInspector.SourceIsRegistered (`#13559`_)
* pydrake.multibody.plant.MultibodyPlant.CalcCenterOfMassPosition (`#13594`_)
* pydrake.solvers.MathematicalProgramResult.set_x_val (`#13577`_)

Build system and dependencies
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

* On macOS, use Sphinx from Homebrew instead of PyPI (`#13551`_, `#13575`_)
* On Ubuntu, the minimum GCC version is now 7.5 (`#13611`_)
* Fix Ubuntu Focal 20.04 to use C++ flavor of nlopt (`#13633`_)
* Upgrade buildifier to latest release 3.3.0 (`#13620`_)
* Upgrade fcl to latest commit (`#13621`_)
* Upgrade googlebenchmark to latest release (`#13623`_)
* Upgrade lcm to latest commit (`#13622`_)
* Upgrade pybind11 fork to latest commit (`#13579`_)

Newly-deprecated APIs
~~~~~~~~~~~~~~~~~~~~~

* Automatic conversion and interop between RigidTransform/Isometry3 (`#13595`_, `#13607`_, `#13608`_)

  * drake::math::RigidTransform::linear
  * drake::math::RigidTransform::matrix
  * drake::math::RigidTransform::operator Isometry3

* All functions within manipulation/util/bot_core_lcm_encode_decode.h (`#13596`_)

  * ::EncodeVector3d
  * ::DecodeVector3d
  * ::EncodeQuaternion
  * ::DecodeQuaternion
  * ::EncodePose
  * ::DecodePose
  * ::EncodeTwist
  * ::DecodeTwist

* pydrake.geometry.SceneGraphInspector.GetNameByFrameId (`#13559`_)
* pydrake.geometry.SceneGraphInspector.GetNameByGeometryId (`#13559`_)

Removal of deprecated items
~~~~~~~~~~~~~~~~~~~~~~~~~~~

TBD
* examples: examples: Remove deprecated methods 2020-07-01 (`#13612`_)
* common,systems: trajectories: Remove deprecated methods 2020-07-01 (`#13610`_)

Notes
-----

This release provides `pre-compiled binaries
<https://github.com/RobotLocomotion/drake/releases/tag/v0.20.0>`__ named
``drake-YYYYMMDD-{bionic|focal|mac}.tar.gz``. See :ref:`Nightly Releases
<nightly-releases>` for instructions on how to use them.

Drake binary releases incorporate a pre-compiled version of `SNOPT
<https://ccom.ucsd.edu/~optimizers/solvers/snopt/>`__ as part of the
`Mathematical Program toolbox
<https://drake.mit.edu/doxygen_cxx/group__solvers.html>`__. Thanks to
Philip E. Gill and Elizabeth Wong for their kind support.

..
  Current oldest_commit 43a28f99ac2aa9d152c096b6a878465336d879f6 (inclusive).
  Current newest_commit 0eccf1a5f26727bcf394443d4aee22e4278cac5f (inclusive).

* GenerateSDPA supports removing free variables (`#13636`_)
* Remove TODO(Mitiguy) as issues were addressed (`#13652`_)
* [render] Extend camera intrinsics into geometry and geometry/render (`#13635`_)  # * Extend camera intrinsics in geometry and geometry/render - RenderEngine given new API to handle full camera model specification. - handles sub-classes that haven't implemented full intrinsics by defaulting to legacy rendering (with a warning about throwing out information). - The "simple" camera model now invokes the full-intrinsics version. - Geometry infrastructure extended to exercise render engine API - QueryObject and GeometryState have appropriate APIs. - New API essentially duplicates old API. Deprecation of old API will come in follow up PR. - RgbdSensor now assumes RenderEngine handles full intrinsics and no longer protects it.
* GeometryProperties adds API to change values (`#13598`_)  # Given a mutable set of properties, the existing set of properties can be modified by adding to, overwriting, updating, or removing properties. This further modifies documentation and error messages so that properties are more uniformly referred to as (group, name) rather than ugly structures like "name in the group".
* Allow AssignRole(IllustrationProperties, kReplace) valid (`#13598`_)  # This allows illustration properties to be replaced. It hasn't been allowed previously because there is no formal connection between changing those properties and guaranteeing they proppagate into the visualizer. This "addresses" that guarantee by printing a warning to the console introducing a TODO for making it more robust.
* RenderEngineGl gets ability to "show_window" (`#13626`_)  # The RenderEngine API has the ability to request showing the display for color and label images. Up to this point, RenderEngineGl hasn't supported that. This adds the infrastructure necessary to display the images. Currently only exercised in test. Its inclusion now facilitates the development of label and color rendering down the road. It's nice to be able to see the images. (Incidentally changes opengel_context.h documentation to /* from /** because it is in internal:: namespace.) Co-authored-by: Belinda Teh <belzteh@gmail.com>
* Add missing tools relating to LLVM 9 (`#13656`_)
* Minor documentation improvements (`#13658`_)
