*************
Drake v0.21.0
*************

Announcements
-------------

On macOS, Homebrew now symlinks Drake's compatible version of Python 3 (3.8)
into ``/usr/local/bin/``, so it is on the ``$PATH`` by default.  There is no
longer any need to add ``/usr/local/opt/python@3.8/bin`` to your ``$PATH``.

Breaking changes since v0.20.0
------------------------------

These are no breaking changes that did not undergo a deprecation period.

Changes since v0.20.0:
----------------------

Dynamical Systems
~~~~~~~~~~~~~~~~~

New features

* None

Fixes

* None

Mathematical Program
~~~~~~~~~~~~~~~~~~~~

New features

* None

Fixes

* None

Multibody Dynamics
~~~~~~~~~~~~~~~~~~

New features

* None

Fixes

* None

Tutorials and examples
~~~~~~~~~~~~~~~~~~~~~~

* None

Miscellaneous features and fixes
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

* None

pydrake bindings
~~~~~~~~~~~~~~~~

New features

* Add ConnectMeshcatVisualizer sugar (`#13632`_)

Fixes

* None

Newly bound

* None

Build system and dependencies
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

* None

Newly-deprecated APIs
~~~~~~~~~~~~~~~~~~~~~

* None

Removal of deprecated items
~~~~~~~~~~~~~~~~~~~~~~~~~~~

* None

Notes
-----

This release provides `pre-compiled binaries
<https://github.com/RobotLocomotion/drake/releases/tag/v0.21.0>`__ named
``drake-YYYYMMDD-{bionic|focal|mac}.tar.gz``. See :ref:`Nightly Releases
<nightly-releases>` for instructions on how to use them.

Drake binary releases incorporate a pre-compiled version of `SNOPT
<https://ccom.ucsd.edu/~optimizers/solvers/snopt/>`__ as part of the
`Mathematical Program toolbox
<https://drake.mit.edu/doxygen_cxx/group__solvers.html>`__. Thanks to
Philip E. Gill and Elizabeth Wong for their kind support.

..
  Current oldest_commit 1557d8606a42fef254e08cf1fb564bfacb1f3f28 (inclusive).
  Current newest_commit 29c7513f714804389bec8550b2b94e8c837e883f (inclusive).

* Release notes v0.20.0 (`#13654`_)
* DiscreteValues: always error-check convenience methods (`#13681`_)  # Relevant to: https://github.com/RobotLocomotion/drake/issues/13678 Changes: 1. escalate convenience method checks from DRAKE_ASSERT to throw. 2. remove redundant null-group checks. 3. adjust various comments. Rationale: (1) New users shouldn't be able to seg-fault Drake just by mixing up, say, continuous and discrete state. In case they do, there should be an informative error message with appropriate context. Using throw is particularly ergonomic for python users, since pybind11 will translate exceptions and result in a nice python trace to the offending code. (2) It is a representation invariant of the DiscreteValues type that no group may be null; all paths (constructors, AppendGroup) for constructing an instance of DiscreteValues enforce this. Therefore, const methods and methods involving only fully-constructed instances (SetFrom) need not re-check. (3) Comments were adjusted to cover changes (1) and (2), and to clarify a representation issue. The representation is weaker than previously claimed. Since AppendGroup() permits adding owned state to a DiscreteValues constructed from unowned state, the only invariant is that owned_data_ is a subset of data_. I haven't identified any actual problem with mixing owned and unowned state; it is purely a physical/memory issue, not a logical one. Therefore, I'm not attempting to enforce any stronger invariant, nor limit access to AppendGroup().
* skylark: Require visibility for drake_cc_package_library (`#13701`_)  # Using an implicit visibility that differs from the package(default_visibility) is too confusing.
* pydrake doc: Elaborate on how to discover C++ Python bindings (`#13555`_)  # Change all code blocks to use ```, not ~~~
* Implement a number of tests to verify CalcForceElementsContribution() includes gravity (`#13474`_)
* Tell gojs to autoscale for system diagrams (`#13704`_)  # Big diagrams, like the manipulation station example, were giving an initial render that was barely visible on the screen.  Now it looks like this: https://people.csail.mit.edu/russt/uploads/manip_station.html
* Add python binding for AddLinearEqualityConstraint overload (`#13703`_)
* Adding dualshock4 teleoperation example to manipulation station (`#13570`_)  # * Adding dualshock4 control example to manipulation station. * Addressing comments from  @EricCousineau-TRI. * Fixing the linter and tests. * Addressing more comments. * Fixing the CI. * Changing key-mapping to use right joy for roll/pitch. * Making the unittest manual. * Making the unittest manual. Co-authored-by: Darshan Hegde <darshanhegde@me.com>
