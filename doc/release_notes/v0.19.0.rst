*************
Drake v0.19.0
*************

Announcements
-------------

.. warning::

  On macOS, Drake only supports Python 3.8.  Users **must** read `#13097`_ for
  upgrade instructions.

  When paths are set incorrectly, you will see an error such as this::

      ImportError: Python version mismatch: module was compiled for Python 3.8, but the interpreter version is incompatible: 3.7.7

* RigidBodyPlant and all of the drake "attic" is scheduled for removal on
  2020-09-01 (`#12158`_, `#13030`_).

  * Please see `#12158`_ for details of the timeline, and let us know if this
    will cause a problem.

* A new tutorial on updating costs/constraints in mathematical program is available (`#13328`_).
* A Strandbeest example is available (`#13302`_).

Breaking changes since v0.18.0
------------------------------

These are breaking changes that did not undergo a deprecation period:

* Remove the incorrect drakeURDF.[xpr|xsd] files (`#13326`_)

  * The schema defined in drakeURDF.xsd is significantly out of date. For now,
    we remove it so as to avoid the suggestion that it is reliable.

* Removes dead code IntegratorBase::InitializeAccuracy() (`#12624`_)

* Remove attic symbols from pydrake.all; users must import pydrake.attic.all to
  use them now (`#13315`_).

Changes since v0.18.0:
----------------------

Dynamical Systems
~~~~~~~~~~~~~~~~~

New features

* Suppress symbolic feedthrough check if non-default output prerequisites were specified (`#13370`_)
* Use Eigen's formatting in VectorBase::operator<<() (`#13365`_, `#13384`_, `#13464`_)
* TBD Offer DiscreteDerivative option to disable transient (`#13336`_)

Fixes

* During simulator initialization, trigger concurrent periodic and "right now" events (`#13438`_)
* VelocityImplicitEulerIntegrator resets cached matrices when user changes Jacobian scheme (`#13392`_)
* Luenberger observer uses cache entries instead of mutable member variables (`#13307`_)

Mathematical Program
~~~~~~~~~~~~~~~~~~~~

New features

* Add the ability to return the dual solution from some solvers:

  * EqualityConstrainedQP (`#13394`_)
  * Gurobi (`#13377`_, `#13404`_)
  * IPOPT (`#13402`_)
  * OSQP (`#13347`_)

* In Solve and ChooseBestSolver, skip unconfigured commercial solvers (`#13279`_)
* Obey SNOPT string options (`#13397`_)

Fixes

* TBD

Multibody Dynamics
~~~~~~~~~~~~~~~~~~

New features

* TBD
* attic,geometry,systems: Deprecate the Isometry3 in systems/rendering (`#13327`_)  # - PoseBundle::{set|get)_pose deprecated; replaced with (set_)transform() - get_pose() no longer returns a reference to an Isometry3. - PoseVector::get_isometry deprecated; replaced with transform() - Also added set_transform() based on old TODO. - Multiple downstream consumers (and their tests) updated to use new API. - Bindings updated (with deprecations) and test - pose_bundle_to_draw_message_test

* New hydroelastic contact model in progress

  * Still only experimental

Fixes

* TBD
* geometry: [geometry] Support more RenderEngineVtk and ShapeReifier customizations (`#13288`_)  # * Support greater RenderEngineVtk and ShapeReifier customizations 1. GeometryState can provide pointers to RenderEngine implementations - It is generally accessed via QueryObject. 2. RenderEngineVtk is changed to be sub-classable - Copy constructor moved from private to protected. - Final designation has been removed. - It gives derived classes access to the actors. - Fixes a bug that previously went unnoticed; `SetDefaultLightPosition` didn't declare override of the virtual RenderEngine method. 3. Allow for customization of unsupported geometry messages in ShapeReifier.
* geometry: scene_graph: Mention adding geometry in the context of collision filters (`#13292`_)
* multibody: detail_scene_graph: Do not throw on missing sub-elements of //surface (`#13206`_)
* geometry: [geometry/dev] Add Unit Cylinder to shape_meshes (`#13293`_)  # - Refactors Sphere tessellation into a "revolute" shape function. - Express sphere in terms of revolute. - Express cylinder in terms of revolute.
* geometry: query_object: Update doc to warn about ignoring Mesh shapes (`#13331`_)  # Clarify that this does not apply to the Convex shape class
* multibody: mbp: Add GetDefaultFreeBodyPose (`#13342`_)
* geometry: geometry: Add SceneGraphInspector::CloneGeometryInstance (`#13338`_)
* geometry: [dev] Add HalfSpace and Box generation to shape_meshes.* (`#13334`_)  # - Modify RenderEngineGl to make use of the shapes.
* multibody: Guidance for picking bushing stiffness/damping constants (`#13106`_)  # Provide suggestions for how to pick stiffness/damping constants for the bushing element.
d PrintSimulatorStatistics()
* multibody: Updates the developer notes of MBP::RegisterGeometry() (`#13014`_)  # * Updates the developer notes of MBP::RegisterGeometry() to reflect the fact that all bodies have a FrameId.
* multibody: Enable kinematics computations on models with zero dofs (`#13405`_)
* multibody: parsing: Work around some GCC 8 maybe-uninitialized warnings (`#13418`_)
* multibody: Implements spatial velocity and acceleration ports (`#13364`_, `#13399`_, `#13423`_)
* multibody: Allows calling MBP::set_penetration_allowance() pre-finalize (`#13435`_)
* geometry: geometry: Add basic Rgba class (`#13441`_)
* multibody: Fix loading multiple model instances with collision filter groups (`#13472`_)
* multibody: plant/images: Update Coulomb friction plot label (`#13485`_)
* geometry,multibody: geometry_properties: Store diffuse color using Rgba, not Vector4d (`#13456`_)
* geometry: [render] Move support functionality from dev into gl_renderer (`#13481`_)  # - Move shape meshes out of dev - Update build for the moved files.

Miscellaneous features and fixes
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

* common: Disallow Value<T> cv/ref/array/pointer types (`#13444`_)
* drake_visualizer: Trim clipping range to avoid rendering artifacts (`#13447`_)
* drake_visualizer: Do not prevent pydrake from appearing on the import path (`#13428`_)
* lcm: Add EncodeLcmMessage and DecodeLcmMessage sugar (`#13311`_)
* examples: Rewrite move_jaco_ee to use ConstraintRelaxingIk (`#13325`_)
* manipulation: Use input (not parameter) for no-op IIWA command (`#13340`_)
* manipulation: Check for whole default message, not just utime==0 (`#13311`_)
* manipulation: Fix a bug calculating the joint index in RobotPlanInterpolator (`#13325`_)

pydrake bindings
~~~~~~~~~~~~~~~~

Newly bound

* TBD

New features

* TBD

Fixes

* TBD
* bindings: py systems: Make BasicVector use Pythonic string formatting (`#13454`_)
* bindings: py mathematical_program: Add friendlier-er errors for dtype mismatch (`#13234`_)
* bindings: autodiffutils_test: Use numpy version check for error message (`#13318`_)
* bindings: py geometry, mbp: Ensure index wrappers use `std::hash<>` (`#13342`_)
* bindings: py geom, mbp: Bind miscellaneous missing methods (`#13342`_)
* bindings: py geometry: Bind SceneGraphInspector::CloneGeometryInstance (`#13338`_)
* bindings: py geometry: Bind Mesh and Convex accessors (`#13352`_)
* bindings: pydrake: Added some simulator bindings (`#13343`_)
* bindings: py mbp: Bind MultibodyPlant.time_step() (`#13355`_)
* bindings: Added make opaque call for ExternallyAppliedSpatialForce (`#13359`_)
* bindings: py geometry: Bind GeometryInstance.set_name (`#13351`_)
* bindings: py geometry: Bind Shape.Clone() (`#13361`_)
* bindings: py systems: Bind system accessors (`#13363`_)  # - Diagram.GetSystems() - InputPort.get_system() - OutputPort.get_system()
* bindings: pydrake: Collision filtering bindings (`#13358`_)  # Add pydrake bindings for GeometrySet, CollectRegisteredGeometries, collision filtering API.
* bindings: py mbp: Bind accessors for inertias (`#13415`_)
* bindings: pydrake/*_extra.py: Ensure all files have consistent boilerplate comment (`#13420`_)
* bindings: py geometry: Bind HalfSpace.MakePose (`#13414`_)
* bindings: py cpp_template: Fix badly scoped name overrides (`#13409`_)
* bindings: py systems: Bind SystemBase, take methods from System_[T] (`#13413`_)
* bindings: py systems: Bind additional SystemBase methods (`#13413`_)
* bindings: py systems: Bind Simulator.set_monitor (`#13413`_)
* bindings: py value: Allow binding Value<vector<T>> to Value[List[T]] (`#13408`_)
* bindings: py math, multibody: Bind Value[List[T]] for needed types (`#13407`_)
* bindings: py common: Use `py::object_api::get_type()`, not indirect Python C++ API (`#13455`_)
* bindings: pydrake manipulation: Add bindings for schunk wsg systems (`#13470`_)
* bindings: Add bindings for SpatialInertia methods (`#13478`_)
* bindings: py mbp, geometry: Bind __repr__ for indices + elements (`#13489`_)
* bindings: py geometry: Bind Rgba, test with GeometryProperties (`#13443`_)  # Explicitly test Value[] instantiations

Build system and dependencies
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

* Add new Ubuntu dependency on pygame for use in examples (`#13381`_, `#13422`_)
* Add new Ubuntu dependency on libclang-9-dev (`#13432`_, `#13437`_, `#13451`_)
* Add new Ubuntu dependency on clang-9 (`#13477`_)
* Use clang-format@9 on macOS (`#13323`_)
* Upgrade bazel_skylib to latest release 1.0.2 (`#13429`_)
* Upgrade fmt to latest release 6.2.1 (`#13431`_)
* Upgrade libsdformat to latest release 9.2.0 (`#13201`_)
* Upgrade meshcat to latest commit (`#13433`_, `#13467`_)
* Upgrade pycodestyle to latest release 2.6.0 (`#13430`_)
* Upgrade rules_python to latest release 0.0.2 (`#13429`_)
* Upgrade spdlog to latest release 1.6.1 (`#13431`_)
* Upgrade vtk's embedded embree to 3.5.2 (`#13283`_)
* Upgrade vtk's embedded ospray to 1.8.5 (`#13283`_)
* Rebuild drake-visualizer binaries (`#13283`_)
* Do not use pkg-config to find libjpeg and yaml-cpp (`#13335`_)
* On Ubuntu, the Drake APT site is no longer added by default (`#13462`_)
* On Ubuntu, kcov-35 is no longer installed by default (`#13462`_)
* Continue Ubuntu 20.04 (Focal Fossa) accomodations; full support is not yet
  complete (`#13266`_, `#13283`_, `#13306`_, `#13335`_, `#13339`_, `#13345`_,
  `#13346`_, `#13348`_, `#13353`_, `#13357`_, `#13360`_, `#13366`_, `#13383`_,
  `#13385`_, `#13400`_, `#13425`_, `#13432`_, `#13436`_, `#13437`_, `#13449`_,
  `#13450`_, `#13469`_, `#13477`_, `#13486`_)

Newly-deprecated APIs
~~~~~~~~~~~~~~~~~~~~~

* drake::manipulation::kuka_iiwa::IiwaCommandReceiver::set_initial_position (`#13340`_)
* drake::manipulation::schunk_wsg::SchunkWsgPositionController::set_initial_position (`#13340`_)
* drake::multibody::MultibodyPlant::CalcBiasForJacobianSpatialVelocity (`#13063`_)
* drake::multibody::MultibodyPlant::CalcBiasForJacobianTranslationalVelocity (`#13063`_)
* drake::systems::rendering::PoseBundle::get_pose (`#13327`_)
* drake::systems::rendering::PoseBundle::set_pose (`#13327`_)
* drake::systems::rendering::PoseVector::get_isometry (`#13327`_)
* pydrake.systems.rendering.PoseBundle.get_pose (`#13327`_)
* pydrake.systems.rendering.PoseBundle.set_pose (`#13327`_)
* pydrake.systems.rendering.PoseVector.get_isometry (`#13327`_)
* TBD (`#13407`_)
* TBD (`#13307`_)
* TBD (`#13279`_)
* All Python modules under pydrake.attic.* (`#13315`_)
* All C++ headers in the attic (`#13315`_):

  * drake/manipulation/planner/rbt_differential_inverse_kinematics.h
  * drake/multibody/collision/bullet_model.h
  * drake/multibody/collision/collision_filter.h
  * drake/multibody/collision/drake_collision.h
  * drake/multibody/collision/element.h
  * drake/multibody/collision/fcl_model.h
  * drake/multibody/collision/model.h
  * drake/multibody/collision/point_pair.h
  * drake/multibody/collision/unusable_model.h
  * drake/multibody/constraint_wrappers.h
  * drake/multibody/force_torque_measurement.h
  * drake/multibody/global_inverse_kinematics.h
  * drake/multibody/ik_options.h
  * drake/multibody/ik_trajectory_helper.h
  * drake/multibody/inverse_kinematics_backend.h
  * drake/multibody/joints/drake_joint.h
  * drake/multibody/joints/drake_joint_impl.h
  * drake/multibody/joints/drake_joints.h
  * drake/multibody/joints/fixed_axis_one_dof_joint.h
  * drake/multibody/joints/fixed_joint.h
  * drake/multibody/joints/floating_base_types.h
  * drake/multibody/joints/helical_joint.h
  * drake/multibody/joints/prismatic_joint.h
  * drake/multibody/joints/quaternion_ball_joint.h
  * drake/multibody/joints/quaternion_floating_joint.h
  * drake/multibody/joints/revolute_joint.h
  * drake/multibody/joints/roll_pitch_yaw_floating_joint.h
  * drake/multibody/joints/test/joint_compare_to_clone.h
  * drake/multibody/kinematic_path.h
  * drake/multibody/kinematics_cache.h
  * drake/multibody/kinematics_cache_helper.h
  * drake/multibody/kinematics_cache-inl.h
  * drake/multibody/material_map.h
  * drake/multibody/parsers/model_instance_id_table.h
  * drake/multibody/parsers/package_map.h
  * drake/multibody/parsers/parser_common.h
  * drake/multibody/parsers/sdf_parser.h
  * drake/multibody/parsers/urdf_parser.h
  * drake/multibody/parsers/xml_util.h
  * drake/multibody/pose_map.h
  * drake/multibody/resolve_center_of_pressure.h
  * drake/multibody/rigid_body_actuator.h
  * drake/multibody/rigid_body_constraint.h
  * drake/multibody/rigid_body_distance_constraint.h
  * drake/multibody/rigid_body_frame.h
  * drake/multibody/rigid_body.h
  * drake/multibody/rigid_body_ik.h
  * drake/multibody/rigid_body_loop.h
  * drake/multibody/rigid_body_plant/compliant_contact_model.h
  * drake/multibody/rigid_body_plant/compliant_material.h
  * drake/multibody/rigid_body_plant/contact_detail.h
  * drake/multibody/rigid_body_plant/contact_force.h
  * drake/multibody/rigid_body_plant/contact_info.h
  * drake/multibody/rigid_body_plant/contact_resultant_force_calculator.h
  * drake/multibody/rigid_body_plant/contact_results.h
  * drake/multibody/rigid_body_plant/contact_results_to_lcm.h
  * drake/multibody/rigid_body_plant/create_load_robot_message.h
  * drake/multibody/rigid_body_plant/drake_visualizer.h
  * drake/multibody/rigid_body_plant/frame_visualizer.h
  * drake/multibody/rigid_body_plant/kinematics_results.h
  * drake/multibody/rigid_body_plant/point_contact_detail.h
  * drake/multibody/rigid_body_plant/rigid_body_plant_bridge.h
  * drake/multibody/rigid_body_plant/rigid_body_plant.h
  * drake/multibody/rigid_body_plant/test/contact_result_test_common.h
  * drake/multibody/rigid_body_plant/viewer_draw_translator.h
  * drake/multibody/rigid_body_tree_alias_groups.h
  * drake/multibody/rigid_body_tree.cc
  * drake/multibody/rigid_body_tree_construction.h
  * drake/multibody/rigid_body_tree.h
  * drake/multibody/shapes/drake_shapes.h
  * drake/multibody/shapes/element.h
  * drake/multibody/shapes/geometry.h
  * drake/multibody/shapes/visual_element.h
  * drake/multibody/test/rigid_body_actuator_compare_to_clone.h
  * drake/multibody/test/rigid_body_compare_to_clone.h
  * drake/multibody/test/rigid_body_frame_compare_to_clone.h
  * drake/multibody/test/rigid_body_loop_compare_to_clone.h
  * drake/multibody/test/rigid_body_tree/rigid_body_tree_compare_to_clone.h
  * drake/systems/controllers/rbt_inverse_dynamics_controller.h
  * drake/systems/controllers/rbt_inverse_dynamics.h
  * drake/systems/controllers/test/rbt_compute_torque.h
  * drake/systems/estimators/dev/rotation.h
  * drake/systems/rendering/drake_visualizer_client.h
  * drake/systems/sensors/accelerometer.h
  * drake/systems/sensors/accelerometer_output.h
  * drake/systems/sensors/depth_sensor.h
  * drake/systems/sensors/depth_sensor_output.h
  * drake/systems/sensors/depth_sensor_specification.h
  * drake/systems/sensors/depth_sensor_to_lcm_point_cloud_message.h
  * drake/systems/sensors/depth_shaders.h
  * drake/systems/sensors/gyroscope.h
  * drake/systems/sensors/gyroscope_output.h
  * drake/systems/sensors/rgbd_camera.h
  * drake/systems/sensors/rgbd_renderer.h
  * drake/systems/sensors/rgbd_renderer_ospray.h
  * drake/systems/sensors/rgbd_renderer_vtk.h
  * drake/systems/sensors/test/accelerometer_test/accelerometer_example_diagram.h
  * drake/systems/sensors/test/accelerometer_test/accelerometer_test_logger.h
  * drake/systems/sensors/test/rgbd_renderer_test_util.h
  * drake/systems/trajectory_optimization/generalized_constraint_force_evaluator.h
  * drake/systems/trajectory_optimization/joint_limit_constraint_force_evaluator.h
  * drake/systems/trajectory_optimization/position_constraint_force_evaluator.h
  * drake/systems/trajectory_optimization/test/generalized_constraint_force_evaluator_test_util.h
  * drake/util/drakeGeometryUtil.h
  * drake/util/drakeUtil.h

Removal of deprecated items
~~~~~~~~~~~~~~~~~~~~~~~~~~~

* TBD
* attic,common,examples,manipulation,tools: Remove deprecated code 2020-06-01 (`#13452`_)

Notes
-----

This release provides `pre-compiled binaries
<https://github.com/RobotLocomotion/drake/releases/tag/v0.19.0>`__ named
``drake-YYYYMMDD-{bionic|mac}.tar.gz``. See :ref:`Nightly Releases
<nightly-releases>` for instructions on how to use them.

Drake binary releases incorporate a pre-compiled version of `SNOPT
<https://ccom.ucsd.edu/~optimizers/solvers/snopt/>`__ as part of the
`Mathematical Program toolbox
<https://drake.mit.edu/doxygen_cxx/group__solvers.html>`__. Thanks to
Philip E. Gill and Elizabeth Wong for their kind support.

.. _#12158: https://github.com/RobotLocomotion/drake/pull/12158
.. _#13030: https://github.com/RobotLocomotion/drake/pull/13030
.. _#13097: https://github.com/RobotLocomotion/drake/pull/13097

..
  Current oldest_commit 2abfd8cce26317556ac54fd3dc63cb57de4480d6 (inclusive).
  Current newest_commit 324f5746358be0f78bda73b722ba7ae749ea1557 (inclusive).

