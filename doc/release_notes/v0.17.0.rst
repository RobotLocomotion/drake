*************
Drake v0.17.0
*************

Announcements
-------------

* RigidBodyPlant and all of the drake "attic" is scheduled for removal on
  2020-09-01 (`#12158`_, `#13030`_).

  * Please see `#12158`_ for details of the timeline, and let us know if this
    will cause a problem.

* DrakeMockLcm is now just a simple alias for the memq:// provider (`#13028`_)

Breaking changes since v0.16.1
------------------------------

These are breaking changes that did not undergo a deprecation period:

* Change PiecewiseTrajectory::value virtual method to pass-by-const-reference;
  classes that override it will need rework; callers are unchanged (`#12986`_)
* Change integrators' dense output representation to use PiecewiseTrajectory
  (`#13008`_)
* Add external torque fields for the jaco status message (`#13017`_)
* Edit WitnessFunction constructor; users should not be using this constructor
  anyway (`#12894`_)

Changes since v0.16.1:
----------------------

Dynamical Systems
~~~~~~~~~~~~~~~~~

New features

* Integrators

  * Add doxygen group for our suite of integrators (`#12900`_)
  * Add simulator_flags configuration helper to select an integrator (`#13013`_)
  * Add error control to Velocity-Implicit Euler Integrator (`#12528`_, `#12760`_)
  * Add symbolic expression support to ExplicitEulerIntegrator and RungeKutta2Integrator (`#12922`_, `#12919`_)
  * Replace integrators' DenseOutput with PiecewiseTrajectory (`#13008`_)

* Trajectories

  * Add symbolic::IsAffine (`#12933`_)
  * Add Polynomial::SetIndeterminates (`#12902`_)
  * Add Polynomial::CoefficientsAlmostEqual (`#12853`_)
  * Add PiecewisePolynomial::ScaleTime and PiecewisePolynomial::ReverseTime (`#12966`_)
  * Add derivative-at-a-point methods to Polynomial, PiecewisePolynomial (`#12951`_)
  * Support default scalars in Polynomial, PiecewiseTrajectory, PiecewisePolynomial (`#12973`_, `#12986`_, `#12991`_)
  * Add Trajectory::vector_values (`#12855`_)
  * Construct HermitianDenseOutput from PiecewisePolynomial (`#12952`_, `#12957`_, `#13006`_)
  * Add BsplineBasis and BsplineTrajectory (`#11990`_)

* Region of attraction

  * Add utility to "balance" two quadratic forms and uses it in RegionOfAttraction (`#12875`_, `#12882`_)
  * Support region of attraction when Vdot is indefinite at the origin (`#12864`_)
  * Add the "star" region of attraction test (`#12881`_)

Fixes

* TBD

Mathematical Program
~~~~~~~~~~~~~~~~~~~~

New features

* Add MathematicalProgram::AddConstraint(Eigen::Matrix<Formula>) (`#12858`_)
* Add MathematicalProgram::MakePolynomial (`#12847`_)
* Add MathematicalProgram::Reparse for polynomials taken as arguments (`#12902`_)
* Add dual solution to OsqpSolverDetails (`#12916`_)
* Add DrakeSolverOption (`#12884`_)

Fixes

* Add MakeSolver to mathematical program tutorial (`#12885`_)
* Add default std::nullopt arguments to SolverBase::Solve (`#12866`_)
* Check x_init size for all solvers (`#12995`_)
* Check constraint bounds size (`#13004`_)

Multibody Dynamics
~~~~~~~~~~~~~~~~~~

New features

* Add PointToPointDistanceConstraint (`#12896`_)
* InverseKinematics allows ignoring joint limits in the constructor (`#12872`_)
* Add missing energy and power overrides to MBP (`#12895`_, `#12955`_)
* Add CoM methods to MultibodyPlant (`#12839`_)
* Parse joint effort limits from URDF (`#12863`_)
* Parse revolute joint <spring_stiffness> and <spring_reference> from SDF (`#12992`_)
* Preliminary steps to introduce new RenderEngine implementation based on direct OpenGl calls
  (`#12850`_, `#12963`_, `#12964`_)

* New ForceElement implementations

  * Add bushing force element with 3D rotational (roll-pitch-yaw) and translational stiffness and damping (`#11946`_, `#13001`_)
  * Add a door hinge force element (`#12812`_, `#12930`_, `#12960`_)

* New hydroelastic contact model in progress (`#12975`_, `#12901`_, `#12954`_, `#12860`_,
  `#12998`_, `#12976`_, `#12909`_, `#12820`_, `#12935`_, `#12806`_, `#12932`_)

  * Still only experimental
  * Improve performance
  * Improve architecture

Fixes

* Fix ABI::IsPhysicallyValid() to avoid false negatives (`#12879`_)
* Move MBP::HydroelasticContactInfoAndBodySpatialForces into internal namespace (`#12953`_)
* Modify cube texture coordinate generation so textures stretch across faces (`#12972`_)
* Remove _implicit_ converting copy constructors from MultibodyPlant's and SceneGraph internals (`#12891`_)

Miscellaneous features and fixes
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

* Add hand/arm only jaco 7dof URDFs, along with sphere collision versions (`#13007`_)
* Add external torque fields for the jaco status message (`#13017`_)
* Add some useful functions to manipulation/util (`#13015`_)
* Add pyplot to geometry_inspector (`#12918`_)
* Add yaml support for merge keys (`#12924`_)
* Replace custom DrakeMockLcm implementation with memq (`#13028`_)

pydrake bindings
~~~~~~~~~~~~~~~~

* pydrake.examples.pendulum.PendulumInput.with_tau (`#12940`_)
* pydrake.examples.pendulum.PendulumParams.with_damping (`#12940`_)
* pydrake.examples.pendulum.PendulumParams.with_gravity (`#12940`_)
* pydrake.examples.pendulum.PendulumParams.with_length (`#12940`_)
* pydrake.examples.pendulum.PendulumParams.with_mass (`#12940`_)
* pydrake.examples.pendulum.PendulumPlant.get_mutable_parameters (`#12940`_)
* pydrake.examples.pendulum.PendulumPlant.get_mutable_state (`#12940`_)
* pydrake.examples.pendulum.PendulumPlant.get_parameters (`#12940`_)
* pydrake.examples.pendulum.PendulumPlant.get_state (`#12940`_)
* pydrake.examples.pendulum.PendulumState.with_theta (`#12940`_)
* pydrake.examples.pendulum.PendulumState.with_thetadot (`#12940`_)
* pydrake.multibody.plant.MultibodyPlant.get_generalized_acceleration_output_port (`#12883`_)
* pydrake.multibody.plant.MultibodyPlant.get_generalized_acceleration_output_port (`#12883`_)
* pydrake.multibody.plant.MultibodyPlant.get_reaction_forces_output_port (`#12883`_)
* pydrake.solvers.branch_and_bound.MixedIntegerBranchAndBound (`#13002`_)
* pydrake.solvers.mathematicalprogram.MathematicalProgram.generic_constraints (`#13005`_)
* pydrake.solvers.mathematicalprogram.MathematicalProgram.generic_costs (`#13005`_)
* pydrake.solvers.mixed_integer_optimization_util.AddLogarithmicSos2Constraint (`#13029`_)
* pydrake.solvers.mixed_integer_optimization_util.AddSos2Constraint (`#13029`_)
* pydrake.symbolic.Expression.is_polynomial (`#12854`_)
* pydrake.systems.analysis.IntegratorBase for more scalar types (`#12922`_)
* pydrake.systems.analysis.RungeKutta2Integrator for more scalar types (`#12922`_)
* pydrake.systems.analysis.RungeKutta3Integrator for more scalar types (`#12922`_)
* pydrake.systems.analysis.Simulator for more scalar types (`#12922`_)
* pydrake.systems.analysis.Simulator.get_actual_realtime_rate (`#12920`_)
* pydrake.systems.analysis.Simulator.get_target_realtime_rate (`#12920`_)
* pydrake.systems.framework.ContinuousState.CopyToVector (`#12865`_)
* TBD systems: py systems: Bind LcmInterfaceSystem (`#13067`_, `#13075`_)
* TBD bindings: rimless wheel: bind calc_alpha method (`#13048`_)
* TBD bindings: integrators: add python bindings for dense integration (`#13044`_)
* TBD bindings: Add bindings for BallRpyJoint (`#13039`_)  # Co-Authored-By: Eric Cousineau <eric.cousineau@tri.global>

New features

* Add preliminary Python 3.8 support for macOS (`#13035`_)
* Add SystemSliders Tkinter-based controller for vector input ports (`#12925`_)
* Add ConnectPlanarSceneGraphVisualizer sugar (`#12961`_)

Fixes

* API docs now show constructors first (`#12787`_, `#12910`_, `#12921`_)
* Find fallback obj files in PlanarSceneGraphVisualizer (`#12917`_)
* Improve args and doc for pyplot_visualizer (`#12915`_)
* Plot sub-level sets in pydrake.visualization.plotting (`#12854`_)
* Extend pydrake.systems.Simulator.reset_integrator's deprecation window (`#13013`_)

Build system and dependencies
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

* Add new dependency on libx11-dev on Ubuntu; no change on macOS (`#12862`_)
* Add new dependency on ros_xacro (`#13022`_)
* Upgrade bazel_skylib to latest release 0.9.0 (`#12978`_)
* Upgrade buildifier to latest release 2.2.1 (`#12977`_)
* Upgrade dreal to latest release 4.20.03.4 (`#12905`_)
* Upgrade ghc_filesystem to latest release 1.3.2 (`#12979`_)
* Upgrade meshcat to latest commit (`#12993`_)
* Upgrade meshcat_python to latest commit (`#12993`_)
* Upgrade rules_pkg to latest release 0.2.5 (`#12978`_)
* Upgrade rules_python to latest commit (`#12978`_)
* Annotate repository rules with configure=True (`#12988`_)
* Fix drake_bazel_installed use in docker (`#13016`_)
* Fix pkg-config problems on macOS (`#13019`_)

Newly-deprecated APIs
~~~~~~~~~~~~~~~~~~~~~

* ::Polynomial<T> (`#12946`_)

  * Use drake::Polynomial.

* ::Polynomiald (`#12946`_)

  * Use drake::Polynomiald.

* ::TrigPoly<T> (`#12946`_)

  * Use drake::TrigPoly.

* ::TrigPolyd (`#12946`_)

  * Use drake::TrigPolyd.

* :: VectorXPoly (`#12946`_)

  * Use drake::VectorXPoly.

* ::VectorXTrigPoly (`#12946`_)

  * Use drake::VectorXTrigPoly.

* drake::systems::AntiderivativeFunction::SpecifiedValues (`#12931`_)

  * Use drake::systems::AntiderivativeFunction::IntegrableFunctionContext.

* drake::symbolic::Expression::ToPolynomial (`#12950`_)

  * Use drake::Polynomial::FromExpression.

* drake::systems::InitialValueProblem::SpecifiedValues (`#12931`_)

  * Use drake::systems::InitialValueProblem::OdeContext.

* drake::systems::InitialValueProblem::ODEFunction (`#12931`_)

  * Use drake::systems::InitialValueProblem::OdeFunction.

* drake::systems::ScalarInitialValueProblem::SpecifiedValues (`#12931`_)

  * Use drake::systems::InitialValueProblem::ScalarOdeContext.

* drake::systems::ScalarInitialValueProblem::ScalarODEFunction (`#12931`_)

  * Use drake::systems::ScalarInitialValueProblem::ScalarOdeFunction.

* drake::trajectories::PiecewisePolynomial::Cubic (`#12939`_)

  * Use drake::trajectories::PiecewisePolynomial::CubicWithContinuousSecondDerivatives or drake::trajectories::PiecewisePolynomial::CubicHermite.

* drake::trajectories::PiecewisePolynomial::Pchip (`#12939`_)

  * Use drake::trajectories::PiecewisePolynomial::CubicShapePreserving.

* drake::trajectories::PiecewisePolynomial<T>::PolynomialType (`#12991`_)

  * Use drake::trajectories::Polynomial<T>.

* drake::trajectories::PiecewiseQuaternionSlerp::get_quaternion_knots (`#12939`_)

  * Use drake::trajectories::PiecewiseQuaternionSlerp::get_quaternion_samples.

Removal of deprecated items
~~~~~~~~~~~~~~~~~~~~~~~~~~~

* drake::common::NewPythonVariable (`#12442`_, `#12974`_)
* pydrake.systems.pyplot_visualizer.PyPlotVisualizer.start_recording(show) (`#12974`_)

Notes
-----

This release provides `pre-compiled binaries
<https://github.com/RobotLocomotion/drake/releases/tag/v0.17.0>`__ named
``drake-TBD-{bionic|mac}.tar.gz``. See
https://drake.mit.edu/from_binary.html#nightly-releases for instructions on
how to use them.

Drake binary releases incorporate a pre-compiled version of `SNOPT
<https://ccom.ucsd.edu/~optimizers/solvers/snopt/>`__ as part of the
`Mathematical Program toolbox
<https://drake.mit.edu/doxygen_cxx/group__solvers.html>`__. Thanks to
Philip E. Gill and Elizabeth Wong for their kind support.

.. _#11946: https://github.com/RobotLocomotion/drake/pull/11946
.. _#11990: https://github.com/RobotLocomotion/drake/pull/11990
.. _#12158: https://github.com/RobotLocomotion/drake/pull/12158
.. _#12442: https://github.com/RobotLocomotion/drake/pull/12442
.. _#12528: https://github.com/RobotLocomotion/drake/pull/12528
.. _#12760: https://github.com/RobotLocomotion/drake/pull/12760
.. _#12787: https://github.com/RobotLocomotion/drake/pull/12787
.. _#12806: https://github.com/RobotLocomotion/drake/pull/12806
.. _#12812: https://github.com/RobotLocomotion/drake/pull/12812
.. _#12820: https://github.com/RobotLocomotion/drake/pull/12820
.. _#12839: https://github.com/RobotLocomotion/drake/pull/12839
.. _#12847: https://github.com/RobotLocomotion/drake/pull/12847
.. _#12850: https://github.com/RobotLocomotion/drake/pull/12850
.. _#12853: https://github.com/RobotLocomotion/drake/pull/12853
.. _#12854: https://github.com/RobotLocomotion/drake/pull/12854
.. _#12855: https://github.com/RobotLocomotion/drake/pull/12855
.. _#12858: https://github.com/RobotLocomotion/drake/pull/12858
.. _#12860: https://github.com/RobotLocomotion/drake/pull/12860
.. _#12862: https://github.com/RobotLocomotion/drake/pull/12862
.. _#12863: https://github.com/RobotLocomotion/drake/pull/12863
.. _#12864: https://github.com/RobotLocomotion/drake/pull/12864
.. _#12865: https://github.com/RobotLocomotion/drake/pull/12865
.. _#12866: https://github.com/RobotLocomotion/drake/pull/12866
.. _#12872: https://github.com/RobotLocomotion/drake/pull/12872
.. _#12875: https://github.com/RobotLocomotion/drake/pull/12875
.. _#12879: https://github.com/RobotLocomotion/drake/pull/12879
.. _#12881: https://github.com/RobotLocomotion/drake/pull/12881
.. _#12882: https://github.com/RobotLocomotion/drake/pull/12882
.. _#12883: https://github.com/RobotLocomotion/drake/pull/12883
.. _#12884: https://github.com/RobotLocomotion/drake/pull/12884
.. _#12885: https://github.com/RobotLocomotion/drake/pull/12885
.. _#12891: https://github.com/RobotLocomotion/drake/pull/12891
.. _#12894: https://github.com/RobotLocomotion/drake/pull/12894
.. _#12895: https://github.com/RobotLocomotion/drake/pull/12895
.. _#12896: https://github.com/RobotLocomotion/drake/pull/12896
.. _#12900: https://github.com/RobotLocomotion/drake/pull/12900
.. _#12901: https://github.com/RobotLocomotion/drake/pull/12901
.. _#12902: https://github.com/RobotLocomotion/drake/pull/12902
.. _#12905: https://github.com/RobotLocomotion/drake/pull/12905
.. _#12909: https://github.com/RobotLocomotion/drake/pull/12909
.. _#12910: https://github.com/RobotLocomotion/drake/pull/12910
.. _#12915: https://github.com/RobotLocomotion/drake/pull/12915
.. _#12916: https://github.com/RobotLocomotion/drake/pull/12916
.. _#12917: https://github.com/RobotLocomotion/drake/pull/12917
.. _#12918: https://github.com/RobotLocomotion/drake/pull/12918
.. _#12919: https://github.com/RobotLocomotion/drake/pull/12919
.. _#12920: https://github.com/RobotLocomotion/drake/pull/12920
.. _#12921: https://github.com/RobotLocomotion/drake/pull/12921
.. _#12922: https://github.com/RobotLocomotion/drake/pull/12922
.. _#12924: https://github.com/RobotLocomotion/drake/pull/12924
.. _#12925: https://github.com/RobotLocomotion/drake/pull/12925
.. _#12930: https://github.com/RobotLocomotion/drake/pull/12930
.. _#12931: https://github.com/RobotLocomotion/drake/pull/12931
.. _#12932: https://github.com/RobotLocomotion/drake/pull/12932
.. _#12933: https://github.com/RobotLocomotion/drake/pull/12933
.. _#12935: https://github.com/RobotLocomotion/drake/pull/12935
.. _#12939: https://github.com/RobotLocomotion/drake/pull/12939
.. _#12940: https://github.com/RobotLocomotion/drake/pull/12940
.. _#12946: https://github.com/RobotLocomotion/drake/pull/12946
.. _#12950: https://github.com/RobotLocomotion/drake/pull/12950
.. _#12951: https://github.com/RobotLocomotion/drake/pull/12951
.. _#12952: https://github.com/RobotLocomotion/drake/pull/12952
.. _#12953: https://github.com/RobotLocomotion/drake/pull/12953
.. _#12954: https://github.com/RobotLocomotion/drake/pull/12954
.. _#12955: https://github.com/RobotLocomotion/drake/pull/12955
.. _#12957: https://github.com/RobotLocomotion/drake/pull/12957
.. _#12960: https://github.com/RobotLocomotion/drake/pull/12960
.. _#12961: https://github.com/RobotLocomotion/drake/pull/12961
.. _#12963: https://github.com/RobotLocomotion/drake/pull/12963
.. _#12964: https://github.com/RobotLocomotion/drake/pull/12964
.. _#12966: https://github.com/RobotLocomotion/drake/pull/12966
.. _#12972: https://github.com/RobotLocomotion/drake/pull/12972
.. _#12973: https://github.com/RobotLocomotion/drake/pull/12973
.. _#12974: https://github.com/RobotLocomotion/drake/pull/12974
.. _#12975: https://github.com/RobotLocomotion/drake/pull/12975
.. _#12976: https://github.com/RobotLocomotion/drake/pull/12976
.. _#12977: https://github.com/RobotLocomotion/drake/pull/12977
.. _#12978: https://github.com/RobotLocomotion/drake/pull/12978
.. _#12979: https://github.com/RobotLocomotion/drake/pull/12979
.. _#12986: https://github.com/RobotLocomotion/drake/pull/12986
.. _#12988: https://github.com/RobotLocomotion/drake/pull/12988
.. _#12991: https://github.com/RobotLocomotion/drake/pull/12991
.. _#12992: https://github.com/RobotLocomotion/drake/pull/12992
.. _#12993: https://github.com/RobotLocomotion/drake/pull/12993
.. _#12995: https://github.com/RobotLocomotion/drake/pull/12995
.. _#12998: https://github.com/RobotLocomotion/drake/pull/12998
.. _#13001: https://github.com/RobotLocomotion/drake/pull/13001
.. _#13002: https://github.com/RobotLocomotion/drake/pull/13002
.. _#13004: https://github.com/RobotLocomotion/drake/pull/13004
.. _#13005: https://github.com/RobotLocomotion/drake/pull/13005
.. _#13006: https://github.com/RobotLocomotion/drake/pull/13006
.. _#13007: https://github.com/RobotLocomotion/drake/pull/13007
.. _#13008: https://github.com/RobotLocomotion/drake/pull/13008
.. _#13013: https://github.com/RobotLocomotion/drake/pull/13013
.. _#13015: https://github.com/RobotLocomotion/drake/pull/13015
.. _#13016: https://github.com/RobotLocomotion/drake/pull/13016
.. _#13017: https://github.com/RobotLocomotion/drake/pull/13017
.. _#13019: https://github.com/RobotLocomotion/drake/pull/13019
.. _#13022: https://github.com/RobotLocomotion/drake/pull/13022
.. _#13028: https://github.com/RobotLocomotion/drake/pull/13028
.. _#13029: https://github.com/RobotLocomotion/drake/pull/13029
.. _#13030: https://github.com/RobotLocomotion/drake/pull/13030
.. _#13035: https://github.com/RobotLocomotion/drake/pull/13035

TO BE FILED

* tools: workspace: Update pybind11 fork to latest commit for Python 3.8 (`#13027`_)
* common,examples,systems: integrators: dense integration works with witness isolation (`#13045`_)  # - Adds a series of tests checking the dense output for error-controlled integration and witness isolation. - Fixes a few curiousities in the PiecewiseTrajectory / PiecewisePolynomial stack, including the unexplained large tolerance required between successive segments in a piecewisetrajectory. - IntegratorBase::DoDenseStep is no longer virtual, because the logic within has gotten more complicated and we need a more narrow entry point for any subclasses which eventually want to override the default dense output interpolation strategy.  [THIS IS TECHNICALLY A CHANGE TO THE PUBLIC API, BUT I BELIEVE IT IS ONE THAT HAS NO CONSUMERS].
* lcm,systems: lcm: Rework error handling path to avoid exceptions across C code (`#13051`_)  # Un-split a unit test case back from its recently-added new file, since it no longer leaks. This is a breaking change via adding a new pure virtual method to an interface.
* manipulation: Add unmodified copies of the franka urdfs along with license (`#13012`_)
* manipulation: Add transmissions to get actuated joints (`#13012`_)
* manipulation,tools: Add obj version of meshes (`#13012`_)
* manipulation: Add inertial properties (`#13012`_)
* manipulation: Shrink collision geometery significantly, convert to spheres (`#13012`_)
* solvers: Logarithmic sos1 (`#13043`_)  # Add a new API for AddLogarithmicSos1Constraint. We encode sos1 constraint with logarithmic number of binary variables.
* doc: doc/index: Add explicit Binder badge, separate Tutorials from Examples (`#12971`_)  # Replace Tutorials toctree link with (attempted) relative link
* doc: doc/installation: Add mention for previewing (`#12971`_)  # doc/python_bindings: Emphasize tutorials!
* examples: Disable coverage tests on deprecated iiwa modules (`#13059`_)  # These started hitting timeouts in coverage tests after #13015 merged, which confuses me since none of the code which moved in that PR appears to be invoked by these tests.  Since the entire directory is scheduled for deprecation in a couple of weeks, I don't think it's worth further investigation.
* tools: workspace: Update pybind11 fork to latest commit (`#13044`_)  # Better handling of ownership transfer from C++ to Python
* multibody: Enable mutating a Joint's position limits (`#13039`_)
* multibody: Create BallRpyJoint (`#13039`_)
* systems: integrators: integrators support negative times (`#13061`_)  # (e.g. if you start your simulation from time = -2.0)
* CMakeLists.txt,doc,setup,tools: Use python@3.8 on macOS (`#13031`_)  # Co-authored-by: Eric Cousineau <eric.cousineau@tri.global>
* setup: The cask for DejaVu fonts was renamed (`#13070`_)
* common: trajectories: add reshape() to piecewise polynomial (`#13062`_)  # * trajectories: add Reshape() to piecewise polynomial
* common: Effectively reverts #4854, but leaves an updated version of the test (`#13072`_)
* systems: Add Automatic Differentiated Jacobians to Velocity-Implicit Euler Integrator, fourth PR of #12528 (`#12967`_)  # Add Automatic Differentiated Jacobians to Velocity-Implicit Euler Integrator, fourth PR of #12528 This commit: 1. Adds automatic differentiation as a velocity-Jacobian computation scheme for the velocity-implicit Euler integrator, by following the model of ImplicitIntegrator<T>::ComputeAutoDiffJacobian(). 2. Refactors ComputeLOfY() based on the templated <U> IntegratorBase<T>::EvalTimeDerivatives() to enable this computation. 3. Fixes the tests so that they reset integrators between testing the different Jacobian computation schemes, to force Jacobian recomputations. Filed #13069 so that this will not be needed in the future. 4. Removes the boolean flags that skip tests that require AutoDiff'd Jacobians.

..
  Current oldest_commit b2293bc15d192473dbe76e48e9861c860c739549 (inclusive).
  Current newest_commit a3bcb50db2674dccb3904e3e23bf7548b26284a0 (inclusive).
