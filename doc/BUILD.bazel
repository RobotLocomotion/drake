# -*- python -*-

package(default_visibility = ["//visibility:public"])

load(
    "@drake//tools/skylark:drake_py.bzl",
    "drake_py_binary",
    "drake_py_library",
    "drake_py_unittest",
)
load("//tools/lint:lint.bzl", "add_lint_tests")

# Unless `setup/ubuntu/install_prereqs.sh --with-doc-only` has been run, most
# targets in this package will fail to build, so by default we'll disable them.
#
# A developer will have to explicitly opt-in in order to build these.
_DEFAULT_BINARY_TAGS = [
    "manual",
]

# Unless `setup/ubuntu/install_prereqs.sh --with-doc-only` has been run, most
# tests in this package will fail to pass, so by default we'll disable them.
#
# A developer will have to explicitly opt-in in order to test these.
_DEFAULT_TEST_TAGS = [
    "manual",
    # Some (currently disabled) Sphinx extensions try to reach out to the
    # network; we should fail-fast if someone tries to turn them on.  In
    # general, none our documentation tools should hit the internet, but
    # their ecosystems might be doing so without us being aware.
    "block-network",
]

drake_py_library(
    name = "sphinx_base",
    srcs = ["sphinx_base.py"],
    data = ["@sphinx//:sphinx-build"],
    tags = _DEFAULT_BINARY_TAGS,
    deps = ["@rules_python//python/runfiles"],
)

filegroup(
    name = "images",
    srcs = [
        "images/drake-dragon.png",
        "images/drake-logo.svg",
        "images/drake-logo-white.svg",
        "images/favicon.ico",
        "images/favicon.png",
        "images/jenkins_bot_reviewable_comment.png",
        "images/logo_w_text.jpg",
        "images/mathematical_program.svg",
        "images/systems.svg",
    ],
)

drake_py_binary(
    name = "gen_sphinx",
    srcs = ["gen_sphinx.py"],
    add_test_rule = 1,
    data = glob([
        "**/*.rst",
    ]) + [
        "conf.py",
        "sample_vimrc",
        ":images",
    ],
    tags = _DEFAULT_BINARY_TAGS,
    test_rule_args = ["--out_dir=<test>"],
    test_rule_tags = _DEFAULT_TEST_TAGS,
    deps = [
        ":sphinx_base",
    ],
)

drake_py_binary(
    name = "serve_sphinx",
    srcs = ["serve_sphinx.py"],
    data = [":gen_sphinx"],
    tags = _DEFAULT_BINARY_TAGS,
    deps = [":sphinx_base"],
)

drake_py_library(
    name = "jekyll_base",
    srcs = ["jekyll_base.py"],
    tags = _DEFAULT_BINARY_TAGS,
)

filegroup(
    name = "third_party_data",
    srcs = glob([
        "third_party/**/*",
    ]),
)

filegroup(
    name = "jekyll_data",
    srcs = [
        "_config.yml",
        "index.md",
        "sample_vimrc",
    ] + glob([
        "_includes/*.html",
        "_includes/*.md",
        "_layouts/*.html",
        "_pages/*.md",
        "_release-notes/*.md",
        "assets/**/*.css",
        "assets/**/*.js",
    ]),
    data = [
        ":images",
        ":third_party_data",
    ],
)

drake_py_binary(
    name = "gen_jekyll",
    srcs = ["gen_jekyll.py"],
    add_test_rule = 1,
    data = [":jekyll_data"],
    tags = _DEFAULT_BINARY_TAGS,
    test_rule_args = ["--out_dir=<test>"],
    test_rule_tags = _DEFAULT_TEST_TAGS,
    deps = [
        ":jekyll_base",
    ],
)

drake_py_binary(
    name = "serve_jekyll",
    srcs = ["serve_jekyll.py"],
    data = [":jekyll_data"],
    tags = _DEFAULT_BINARY_TAGS,
    deps = [
        ":jekyll_base",
    ],
)

drake_py_library(
    name = "system_doxygen",
    srcs = ["system_doxygen.py"],
    visibility = ["//visibility:public"],
)

drake_py_unittest(
    name = "system_doxygen_test",
    deps = [":system_doxygen"],
)

drake_py_binary(
    name = "doxygen",
    srcs = [
        "doxygen_main.py",
    ],
    data = [
        "system_doxygen.py",
        "//:.bazelproject",
        "@bazel_tools//tools/python/runfiles",
        "@doxygen",
    ],
    tags = _DEFAULT_BINARY_TAGS,
)

drake_py_binary(
    name = "build",
    srcs = ["build.py"],
    data = [
        ":doxygen",
        ":gen_jekyll",
        ":gen_sphinx",
        "//bindings/pydrake/doc:gen_sphinx",
    ],
    tags = _DEFAULT_BINARY_TAGS,
    deps = [
        "@bazel_tools//tools/python/runfiles",
    ],
)

# This rule is used by our CI scripts as a single point of entry to ensure that
# all of our manually-tagged documentation binaries can be built successfully.
filegroup(
    name = "manual_binaries",
    srcs = [
        ":build",
        ":doxygen",
        ":gen_jekyll",
        ":gen_sphinx",
        ":serve_jekyll",
        ":serve_sphinx",
        "//bindings/pydrake/doc:gen_sphinx",
        "//bindings/pydrake/doc:serve_sphinx",
    ],
    tags = ["manual"],
)

# This rule is used by our CI scripts as a single point of entry to ensure that
# all of our manually-tagged documentation tests pass.
test_suite(
    name = "manual_tests",
    tags = ["manual"],
    tests = [
        ":gen_jekyll_test",
        ":gen_sphinx_test",
        "//bindings/pydrake/doc:gen_sphinx_test",
    ],
)

add_lint_tests(
    python_lint_exclude = [
        ":conf.py",
    ],
)
