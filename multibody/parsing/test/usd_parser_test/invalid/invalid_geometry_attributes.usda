#usda 1.0
(
    metersPerUnit = 1
    upAxis = "Z"
)
def Xform "World"
{
    def Capsule "Capsule" (
        prepend apiSchemas = ["PhysicsCollisionAPI"]
    )
    {
        uniform token axis = "Y"
        float3[] extent = [(-25, -25, -50), (25, 25, 50)]
        double height = 100
        double radius = 25
    }

    def Cylinder "Cylinder" (
        prepend apiSchemas = ["PhysicsCollisionAPI"]
    )
    {
        uniform token axis = "X"
        float3[] extent = [(-50, -25, -25), (50, 25, 25)]
        double height = 100
        double radius = 25
    }

    def Mesh "Octahedron" (
        prepend apiSchemas = ["PhysicsCollisionAPI"]
    )
    {
        float3[] extent = [(-1, -1, -1), (1, 1, 1)]
        int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3]
        int[] faceVertexIndices = [1, 0, 4, 2, 1, 4, 3, 2, 4, 0, 3, 4, 0, 1, 5, 1, 2, 5, 2, 3, 5, 3, 0, 5]
        point3f[] points = [(1, 0, 0), (0, -1, 0), (-1, 0, 0), (0, 1, 0), (0, 0, 1), (0, 0, -1)]
        uniform token subdivisionScheme = "none"
        quatf xformOp:orient = (1, 0, 0, 0)
        float3 xformOp:scale = (1, 2, 1)
        double3 xformOp:translate = (0, 0, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
    }
}
