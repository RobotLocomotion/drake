#- * - python - * -
load("//tools/lint:lint.bzl", "add_lint_tests")
load(
    "//tools/skylark:drake_cc.bzl",
    "drake_cc_binary",
    "drake_cc_googletest",
    "drake_cc_library",
)

package(
    default_visibility = ["//visibility:private"],
)

drake_cc_library(
    name = "collision_objects",
    srcs = [
        "collision_objects.cc",
    ],
    hdrs = [
        "collision_objects.h",
    ],
    deps = [
        "//geometry:geometry_ids",
        "//geometry:proximity_properties",
        "//geometry:shape_specification",
        "//geometry/proximity:bvh",
        "//geometry/proximity:make_box_mesh",
        "//geometry/proximity:make_capsule_mesh",
        "//geometry/proximity:make_cylinder_mesh",
        "//geometry/proximity:make_ellipsoid_mesh",
        "//geometry/proximity:make_sphere_mesh",
        "//geometry/proximity:obj_to_surface_mesh",
        "//geometry/proximity:surface_mesh",
    ],
)

drake_cc_library(
    name = "constitutive_model",
    hdrs = [
        "constitutive_model.h",
    ],
    deps = [
        ":deformation_gradient_cache_entry",
        "//common:essential",
    ],
)

drake_cc_library(
    name = "constitutive_model_utilities",
    hdrs = [
        "constitutive_model_utilities.h",
    ],
)

drake_cc_library(
    name = "corotated_model",
    hdrs = [
        "corotated_model.h",
    ],
    deps = [
        ":constitutive_model",
        ":constitutive_model_utilities",
        ":corotated_model_cache_entry",
        ":matrix_utilities",
        "//common:default_scalars",
        "//common:essential",
    ],
)

drake_cc_library(
    name = "corotated_model_cache_entry",
    hdrs = [
        "corotated_model_cache_entry.h",
    ],
    deps = [
        ":deformation_gradient_cache_entry",
        ":matrix_utilities",
        "//common:default_scalars",
        "//common:essential",
    ],
)

drake_cc_library(
    name = "damping_model",
    hdrs = [
        "damping_model.h",
    ],
)

drake_cc_library(
    name = "deformable_body_config",
    hdrs = [
        "deformable_body_config.h",
    ],
    deps = [
        "//common:essential",
    ],
)

drake_cc_library(
    name = "deformable_contact",
    srcs = ["deformable_contact.cc"],
    hdrs = ["deformable_contact.h"],
    deps = [
        "//common:default_scalars",
        "//geometry/proximity:bvh",
        "//geometry/proximity:deformable_volume_mesh",
        "//geometry/proximity:posed_half_space",
        "//geometry/proximity:surface_mesh",
    ],
)

drake_cc_library(
    name = "deformable_contact_data",
    srcs = ["deformable_contact_data.cc"],
    hdrs = ["deformable_contact_data.h"],
    deps = [
        ":deformable_rigid_contact_pair",
    ],
)

drake_cc_library(
    name = "deformable_model",
    srcs = [
        "deformable_model.cc",
    ],
    hdrs = [
        "deformable_model.h",
    ],
    deps = [
        ":corotated_model",
        ":deformable_body_config",
        ":dirichlet_boundary_condition",
        ":dynamic_elasticity_element",
        ":dynamic_elasticity_model",
        ":fem_model_base",
        ":linear_constitutive_model",
        ":linear_simplex_element",
        "//common:essential",
        "//geometry/proximity:volume_mesh",
        "//multibody/fem:simplex_gaussian_quadrature",
        "//multibody/plant",
    ],
)

drake_cc_library(
    name = "deformable_rigid_contact_pair",
    hdrs = ["deformable_rigid_contact_pair.h"],
    deps = [
        ":deformable_contact",
        ":fem_indexes",
        "//geometry:geometry_ids",
        "//math:geometric_transform",
    ],
)

drake_cc_library(
    name = "deformable_rigid_manager",
    srcs = [
        "deformable_rigid_manager.cc",
    ],
    hdrs = [
        "deformable_rigid_manager.h",
    ],
    deps = [
        ":collision_objects",
        ":deformable_contact_data",
        ":deformable_model",
        ":deformable_rigid_contact_pair",
        ":fem_solver",
        "//common:essential",
        "//multibody/contact_solvers:block_sparse_matrix",
        "//multibody/plant",
    ],
)

drake_cc_library(
    name = "deformable_visualizer",
    srcs = ["deformable_visualizer.cc"],
    hdrs = ["deformable_visualizer.h"],
    deps = [
        "//common:essential",
        "//geometry/proximity:sorted_triplet",
        "//geometry/proximity:volume_mesh",
        "//lcm:drake_lcm",
        "//lcmtypes:experimental_deformable_mesh",
        "//systems/framework:leaf_system",
    ],
)

drake_cc_library(
    name = "deformation_gradient_cache_entry",
    hdrs = [
        "deformation_gradient_cache_entry.h",
    ],
    deps = [
        ":fem_indexes",
        "//common:essential",
    ],
)

drake_cc_library(
    name = "dirichlet_boundary_condition",
    hdrs = [
        "dirichlet_boundary_condition.h",
    ],
    deps = [
        ":fem_indexes",
        "//common:essential",
    ],
)

drake_cc_library(
    name = "dynamic_elasticity_element",
    hdrs = [
        "dynamic_elasticity_element.h",
    ],
    deps = [
        ":damping_model",
        ":elasticity_element",
    ],
)

drake_cc_library(
    name = "dynamic_elasticity_model",
    hdrs = [
        "dynamic_elasticity_model.h",
    ],
    deps = [
        ":damping_model",
        ":elasticity_model",
        ":newmark_scheme",
        "//geometry/proximity:volume_mesh",
    ],
)

drake_cc_library(
    name = "eigen_conjugate_gradient_solver",
    hdrs = [
        "eigen_conjugate_gradient_solver.h",
    ],
    deps = [
        ":linear_system_solver",
        "//common:essential",
    ],
)

drake_cc_library(
    name = "elasticity_element",
    hdrs = [
        "elasticity_element.h",
    ],
    deps = [
        ":constitutive_model",
        ":fem_element",
        ":isoparametric_element",
        "//common:essential",
        "//common:unused",
        "//multibody/fem:quadrature",
    ],
)

drake_cc_library(
    name = "elasticity_model",
    hdrs = [
        "elasticity_model.h",
    ],
    deps = [
        ":elasticity_element",
        ":fem_model",
    ],
)

drake_cc_library(
    name = "element_cache_entry",
    hdrs = [
        "element_cache_entry.h",
    ],
    deps = [
        ":fem_indexes",
        "//common:essential",
    ],
)

drake_cc_library(
    name = "fem_element",
    hdrs = [
        "fem_element.h",
    ],
    deps = [
        ":fem_state",
        "//common:essential",
    ],
)

drake_cc_library(
    name = "fem_indexes",
    hdrs = [
        "fem_indexes.h",
    ],
    deps = [
        "//common:essential",
        "//common:type_safe_index",
    ],
)

drake_cc_library(
    name = "fem_model",
    hdrs = [
        "fem_model.h",
    ],
    deps = [
        ":fem_element",
        ":fem_indexes",
        ":fem_model_base",
        ":fem_state",
        "//common:essential",
        "//common:unused",
    ],
)

drake_cc_library(
    name = "fem_model_base",
    srcs = [
        "fem_model_base.cc",
    ],
    hdrs = [
        "fem_model_base.h",
    ],
    deps = [
        ":dirichlet_boundary_condition",
        ":fem_state_base",
        ":state_updater",
        "//common:default_scalars",
        "//common:essential",
    ],
)

drake_cc_library(
    name = "fem_solver",
    hdrs = [
        "fem_solver.h",
    ],
    deps = [
        ":eigen_conjugate_gradient_solver",
        ":fem_model",
        ":linear_system_solver",
        ":state_updater",
        "//common:essential",
        "//multibody/contact_solvers:sparse_linear_operator",
    ],
)

drake_cc_library(
    name = "fem_state",
    hdrs = [
        "fem_state.h",
    ],
    deps = [
        ":element_cache_entry",
        ":fem_state_base",
        "//common:essential",
    ],
)

drake_cc_library(
    name = "fem_state_base",
    srcs = [
        "fem_state_base.cc",
    ],
    hdrs = [
        "fem_state_base.h",
    ],
    deps = [
        ":dirichlet_boundary_condition",
        "//common:default_scalars",
    ],
)

drake_cc_library(
    name = "isoparametric_element",
    hdrs = [
        "isoparametric_element.h",
    ],
    deps = [
        "//common:essential",
    ],
)

drake_cc_library(
    name = "linear_constitutive_model",
    hdrs = [
        "linear_constitutive_model.h",
    ],
    deps = [
        ":constitutive_model",
        ":constitutive_model_utilities",
        ":linear_constitutive_model_cache_entry",
        "//common:default_scalars",
        "//common:essential",
    ],
)

drake_cc_library(
    name = "linear_constitutive_model_cache_entry",
    hdrs = [
        "linear_constitutive_model_cache_entry.h",
    ],
    deps = [
        ":deformation_gradient_cache_entry",
        "//common:default_scalars",
        "//common:essential",
    ],
)

drake_cc_library(
    name = "linear_simplex_element",
    hdrs = [
        "linear_simplex_element.h",
    ],
    deps = [
        ":isoparametric_element",
    ],
)

drake_cc_library(
    name = "linear_system_solver",
    hdrs = [
        "linear_system_solver.h",
    ],
    deps = [
        "//common:essential",
        "//multibody/contact_solvers:linear_operator",
    ],
)

drake_cc_library(
    name = "matrix_utilities",
    hdrs = [
        "matrix_utilities.h",
    ],
    deps = [
        "//common:essential",
    ],
)

drake_cc_library(
    name = "mesh_utilities",
    srcs = [
        "mesh_utilities.cc",
    ],
    hdrs = [
        "mesh_utilities.h",
    ],
    deps = [
        "//common:default_scalars",
        "//common:essential",
        "//geometry/proximity:make_box_mesh",
        "//geometry/proximity:volume_mesh",
        "//math:geometric_transform",
    ],
)

drake_cc_library(
    name = "newmark_scheme",
    hdrs = [
        "newmark_scheme.h",
    ],
    deps = [
        ":state_updater",
    ],
)

drake_cc_binary(
    name = "run_scripted_deformable_motion",
    srcs = [
        "run_scripted_deformable_motion.cc",
    ],
    deps = [
        ":deformable_visualizer",
        "//common:add_text_logging_gflags",
        "//geometry/proximity:make_box_mesh",
        "//systems/analysis:simulator_gflags",
        "//systems/framework:diagram_builder",
    ],
)

drake_cc_binary(
    name = "run_cantilever_beam",
    srcs = [
        "run_cantilever_beam.cc",
    ],
    deps = [
        ":deformable_model",
        ":deformable_rigid_manager",
        ":deformable_visualizer",
        ":mesh_utilities",
        "//common:add_text_logging_gflags",
        "//math:geometric_transform",
        "//systems/analysis:simulator_gflags",
        "//systems/framework:diagram_builder",
    ],
)

drake_cc_library(
    name = "schur_complement",
    srcs = [
        "schur_complement.cc",
    ],
    hdrs = [
        "schur_complement.h",
    ],
    deps = [
        "//common:default_scalars",
        "//common:essential",
    ],
)

drake_cc_library(
    name = "state_updater",
    hdrs = [
        "state_updater.h",
    ],
    deps = [
        ":fem_state",
        "//common:unused",
    ],
)

drake_cc_library(
    name = "static_elasticity_element",
    hdrs = [
        "static_elasticity_element.h",
    ],
    deps = [
        ":elasticity_element",
    ],
)

drake_cc_library(
    name = "static_elasticity_model",
    hdrs = [
        "static_elasticity_model.h",
    ],
    deps = [
        ":elasticity_model",
        ":zeroth_order_state_updater",
        "//geometry/proximity:volume_mesh",
    ],
)

drake_cc_library(
    name = "zeroth_order_state_updater",
    hdrs = [
        "zeroth_order_state_updater.h",
    ],
    deps = [
        ":state_updater",
    ],
)

# === test/ ===
drake_cc_library(
    name = "test_utilities",
    testonly = 1,
    hdrs = ["test/test_utilities.h"],
    deps = [
        "//common:essential",
    ],
)

drake_cc_googletest(
    name = "collision_objects_test",
    data = ["//geometry:test_obj_files"],
    deps = [
        ":collision_objects",
        "//common:find_resource",
        "//common/test_utilities:expect_throws_message",
    ],
)

drake_cc_googletest(
    name = "deformable_contact_test",
    deps = [
        ":deformable_contact",
        ":deformable_contact_data",
        "//common/test_utilities:eigen_matrix_compare",
        "//geometry/proximity:surface_mesh",
        "//geometry/proximity:volume_mesh",
    ],
)

drake_cc_googletest(
    name = "deformable_model_test",
    deps = [
        ":deformable_model",
        "//common/test_utilities:eigen_matrix_compare",
        "//common/test_utilities:expect_throws_message",
        "//geometry/proximity:make_box_mesh",
    ],
)

drake_cc_googletest(
    name = "deformable_rigid_manager_test",
    deps = [
        ":deformable_rigid_manager",
        "//common/test_utilities:eigen_matrix_compare",
        "//common/test_utilities:expect_throws_message",
        "//examples/multibody/rolling_sphere:make_rolling_sphere_plant",
        "//geometry/proximity:make_box_mesh",
        "//multibody/contact_solvers:pgs_solver",
        "//systems/analysis:simulator",
    ],
)

drake_cc_googletest(
    name = "dirichlet_boundary_condition_test",
    deps = [
        ":dirichlet_boundary_condition",
        ":dummy_element",
        ":fem_state",
        "//common/test_utilities:eigen_matrix_compare",
        "//common/test_utilities:expect_throws_message",
    ],
)

drake_cc_library(
    name = "dummy_element",
    testonly = 1,
    hdrs = ["test/dummy_element.h"],
    deps = [
        ":element_cache_entry",
        ":fem_element",
        ":fem_state",
    ],
)

drake_cc_googletest(
    name = "dynamic_elasticity_element_test",
    deps = [
        ":dynamic_elasticity_element",
        ":linear_constitutive_model",
        ":linear_simplex_element",
        "//common/test_utilities:eigen_matrix_compare",
        "//math:gradient",
        "//multibody/fem:simplex_gaussian_quadrature",
    ],
)

drake_cc_googletest(
    name = "dynamic_elasticity_model_test",
    deps = [
        ":dynamic_elasticity_element",
        ":dynamic_elasticity_model",
        ":linear_constitutive_model",
        ":linear_simplex_element",
        "//common/test_utilities:eigen_matrix_compare",
        "//geometry/proximity:make_box_mesh",
        "//math:gradient",
        "//multibody/fem:simplex_gaussian_quadrature",
    ],
)

drake_cc_googletest(
    name = "eigen_conjugate_gradient_solver_test",
    deps = [
        ":eigen_conjugate_gradient_solver",
        "//common/test_utilities:eigen_matrix_compare",
        "//math:gradient",
        "//multibody/contact_solvers:sparse_linear_operator",
    ],
)

drake_cc_googletest(
    name = "elasticity_element_test",
    deps = [
        ":elasticity_element",
        ":linear_constitutive_model",
        ":linear_simplex_element",
        "//common/test_utilities:eigen_matrix_compare",
        "//math:geometric_transform",
        "//math:gradient",
        "//multibody/fem:simplex_gaussian_quadrature",
    ],
)

drake_cc_googletest(
    name = "fem_element_test",
    deps = [
        ":dummy_element",
    ],
)

drake_cc_googletest(
    name = "fem_solver_test",
    deps = [
        ":dummy_element",
        ":eigen_conjugate_gradient_solver",
        ":fem_solver",
        ":linear_constitutive_model",
        ":linear_simplex_element",
        ":static_elasticity_element",
        ":static_elasticity_model",
        ":zeroth_order_state_updater",
        "//common/test_utilities:eigen_matrix_compare",
        "//common/test_utilities:expect_throws_message",
        "//geometry/proximity:make_box_mesh",
        "//math:gradient",
        "//multibody/fem:simplex_gaussian_quadrature",
    ],
)

drake_cc_googletest(
    name = "fem_state_test",
    deps = [
        ":dummy_element",
        ":element_cache_entry",
        ":fem_element",
        ":fem_state",
        "//common/test_utilities:expect_throws_message",
    ],
)

drake_cc_googletest(
    name = "hyperelastic_constitutive_model_test",
    deps = [
        ":corotated_model",
        ":linear_constitutive_model",
        ":test_utilities",
        "//common/test_utilities:eigen_matrix_compare",
        "//common/test_utilities:expect_throws_message",
        "//math:gradient",
    ],
)

drake_cc_googletest(
    name = "isoparametric_element_test",
    deps = [
        ":isoparametric_element",
        ":linear_simplex_element",
        "//common/test_utilities:eigen_matrix_compare",
        "//common/test_utilities:expect_throws_message",
    ],
)

drake_cc_googletest(
    name = "linear_constitutive_model_cache_entry_test",
    deps = [
        ":linear_constitutive_model_cache_entry",
        "//common/test_utilities:expect_throws_message",
    ],
)

drake_cc_googletest(
    name = "linear_simplex_element_test",
    deps = [
        ":linear_simplex_element",
    ],
)

drake_cc_googletest(
    name = "matrix_utilities_test",
    deps = [
        ":matrix_utilities",
        ":test_utilities",
        "//common:essential",
        "//common/test_utilities:eigen_matrix_compare",
        "//math:geometric_transform",
        "//math:gradient",
    ],
)

drake_cc_googletest(
    name = "mesh_utilities_test",
    deps = [
        ":mesh_utilities",
        "//geometry/proximity:proximity_utilities",
    ],
)

drake_cc_googletest(
    name = "newmark_scheme_test",
    deps = [
        ":dummy_element",
        ":newmark_scheme",
        "//common/test_utilities:eigen_matrix_compare",
    ],
)

drake_cc_googletest(
    name = "schur_complement_test",
    deps = [
        ":schur_complement",
        "//common/test_utilities:eigen_matrix_compare",
    ],
)

drake_cc_googletest(
    name = "static_elasticity_element_test",
    deps = [
        ":linear_constitutive_model",
        ":linear_simplex_element",
        ":static_elasticity_element",
        "//common/test_utilities:eigen_matrix_compare",
        "//common/test_utilities:expect_throws_message",
        "//math:gradient",
        "//multibody/fem:simplex_gaussian_quadrature",
    ],
)

drake_cc_googletest(
    name = "static_elasticity_model_test",
    deps = [
        ":linear_constitutive_model",
        ":linear_simplex_element",
        ":static_elasticity_element",
        ":static_elasticity_model",
        "//common/test_utilities:eigen_matrix_compare",
        "//geometry/proximity:make_box_mesh",
        "//math:gradient",
        "//multibody/fem:simplex_gaussian_quadrature",
    ],
)

drake_cc_googletest(
    name = "stretch_test",
    deps = [
        ":fem_solver",
        ":linear_constitutive_model",
        ":linear_simplex_element",
        ":mesh_utilities",
        ":static_elasticity_element",
        ":static_elasticity_model",
        "//common/test_utilities:eigen_matrix_compare",
        "//geometry/proximity:make_box_mesh",
        "//multibody/fem:simplex_gaussian_quadrature",
    ],
)

drake_cc_googletest(
    name = "zeroth_order_state_updater_test",
    deps = [
        ":dummy_element",
        ":zeroth_order_state_updater",
        "//common/test_utilities:eigen_matrix_compare",
        "//common/test_utilities:expect_throws_message",
    ],
)

add_lint_tests()
