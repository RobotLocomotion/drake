# -*- python -*-
# TODO(jwnimmer-tri) Remove this entire directory on or about 2019-03-01.

load(
    "@drake//tools/skylark:alias.bzl",
    "drake_cc_hdrs_forwarding_library",
    "drake_cc_library_aliases",
)
load(
    "@drake//tools/skylark:drake_cc.bzl",
    "drake_cc_package_library",
)
load("//tools/lint:lint.bzl", "add_lint_tests")

package(default_visibility = ["//visibility:public"])

# This package is *only* compatibility forwarding rules.
drake_cc_package_library(
    name = "parsing",
    deps = [
        ":forwarding_hdrs",
        ":multibody_plant_sdf_parser",
        ":multibody_plant_urdf_parser",
        ":package_map",
    ],
)

# The component names in this package vs their names in the new package.
_RELATIVE_LABELS_RENAME_MAP = {
    ":multibody_plant_sdf_parser": ":sdf_parser",
    ":multibody_plant_urdf_parser": ":urdf_parser",
    ":package_map": ":package_map",
}

# Generates header files with the old include paths that include the header
# with its new include path.
drake_cc_hdrs_forwarding_library(
    name = "forwarding_hdrs",
    actual_subdir = "multibody/parsing",
    add_deprecation_warning = True,
    relative_labels_map = _RELATIVE_LABELS_RENAME_MAP,
    visibility = ["//visibility:private"],
)

# Forwards the bazel labels in this package to alias into the new package.
drake_cc_library_aliases(
    actual_subdir = "multibody/parsing",
    add_deprecation_warning = True,
    relative_labels_map = _RELATIVE_LABELS_RENAME_MAP,
    tags = ["manual"],  # Avoid 'build //...' yelling at us.
    deps = [":forwarding_hdrs"],
)

# Gives a helpful warning, but doesn't provide any files (the using-code has to
# update its hard-coded resource paths anyway).
filegroup(
    name = "test_models",
    testonly = 1,
    deprecation = "Use the label //multibody/parsing:test_models",
    tags = ["manual"],  # Avoid 'build //...' yelling at us.
)

add_lint_tests()
